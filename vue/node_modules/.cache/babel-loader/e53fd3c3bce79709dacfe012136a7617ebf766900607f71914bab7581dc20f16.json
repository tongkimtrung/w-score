{"ast":null,"code":"import { generateCode } from '@/common/functions';\nimport Textarea from 'primevue/textarea';\nimport Button from 'primevue/button';\nimport Dialog from 'primevue/dialog';\nimport DataTable from 'primevue/datatable';\nimport TheLoadingProgress from '@/components/LoadingProgress.vue';\nimport Column from 'primevue/column';\nimport Dropdown from 'primevue/dropdown';\nimport Skeleton from 'primevue/skeleton';\nimport InputText from 'primevue/inputtext';\nimport Calendar from 'primevue/calendar';\nimport { MESSAGE, RESPONSE_STATUS } from \"@/common/enums\";\nimport { getUsers, saveUser, updateUser, deleteUser } from '/api/user';\nexport default {\n  components: {\n    DataTable,\n    Column,\n    Dialog,\n    Textarea,\n    Button,\n    Calendar,\n    InputText,\n    Dropdown,\n    TheLoadingProgress,\n    Skeleton\n  },\n  data() {\n    return {\n      isShowModal: false,\n      columns: [{\n        field: 'name',\n        header: 'Họ và tên'\n      }, {\n        field: 'user_code',\n        header: 'Mã user'\n      }, {\n        field: 'email',\n        header: 'email'\n      }, {\n        field: 'level',\n        header: 'Loại tài khoản'\n      }, {\n        field: 'note',\n        header: 'Ghi chú'\n      }],\n      department: {},\n      exam: {},\n      levelOptions: [{\n        description: 'Chấm thi',\n        value: 1\n      }, {\n        description: 'Tạo đề',\n        value: 2\n      }, {\n        description: 'Tạo đề và chấm thi',\n        value: 3\n      }],\n      search: null,\n      isLoadingComponent: false,\n      isPopupDelete: false,\n      isLoading: true,\n      isDisable: false,\n      selectedUsers: {\n        name: null,\n        user_code: null,\n        email: null,\n        note: null,\n        level: null\n      },\n      modeModal: this.FormMode.INSERT,\n      users: [],\n      modeGenerate: true,\n      //cho phép sinh mã theo tên\n      warningVisible: false,\n      invalidData: []\n    };\n  },\n  methods: {\n    /**\r\n     * Xử lý hàm sinh mã theo tên\r\n     */\n    handlerGenerateCode() {\n      if (this.modeGenerate) this.selectedUsers.user_code = generateCode(this.selectedUsers.name);\n    },\n    doSave() {\n      try {\n        this.isDisable = true;\n        if (this.validateData()) {\n          this.isLoadingComponent = true;\n          if (this.modeModal === this.FormMode.INSERT) {\n            saveUser(this.selectedUsers).then(res => {\n              this.loadUsers();\n              this.$store.dispatch('handleSuccess', MESSAGE.HTTP_INSERT_OK);\n              this.isShowModal = false;\n              this.modeModal = this.FormMode.INSERT;\n              this.selectedUsers = {\n                name: null,\n                user_code: null,\n                email: null,\n                note: null,\n                level: null\n              };\n            }).catch(error => {\n              if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\n                for (var itemError in error.response.data.errors) {\n                  console.log(error.response.data.errors);\n                  this.invalidData[itemError] = error.response.data.errors[itemError][0];\n                }\n              }\n            }).finally(() => {\n              this.isDisable = false;\n              setTimeout(() => {\n                this.isLoadingComponent = false;\n              }, 300);\n            });\n          } else if (this.modeModal === this.FormMode.UPDATE) {\n            updateUser(this.selectedUsers).then(res => {\n              this.loadUsers();\n              this.$store.dispatch('handleSuccess', MESSAGE.HTTP_UPDATE_OK);\n              this.isShowModal = false;\n              this.modeModal = this.FormMode.INSERT;\n              this.selectedUsers = {\n                name: null,\n                user_code: null,\n                email: null,\n                note: null,\n                level: null\n              };\n            }).catch(error => {\n              console.log(error);\n            }).finally(() => setTimeout(() => {\n              this.isLoadingComponent = false;\n            }, 750));\n          }\n        }\n        this.isDisable = false;\n      } catch (error) {\n        this.isDisable = false;\n        this.isLoadingComponent = false;\n      }\n    },\n    /**\r\n     * Lấy thông tin bản ghi\r\n     * @param {*} data\r\n     */\n    onRowSelect(data) {\n      this.modeModal = this.FormMode.UPDATE;\n      this.selectedUsers = {\n        ...data\n      };\n      this.isShowModal = true;\n    },\n    afterHideDialog() {\n      this.selectedUsers = {\n        name: null,\n        user_code: null,\n        email: null,\n        note: null,\n        level: null\n      };\n    },\n    /**\r\n     * Xóa phòng thi\r\n     * @param {*} data\r\n     */\n    deleteRowSelect(data) {\n      this.isPopupDelete = true;\n      this.selectedUsers = data;\n    },\n    /**\r\n     * Click nút xóa phòng thi\r\n     */\n    handlerDelete() {\n      deleteUser(this.selectedUsers.id).then(res => {\n        this.isPopupDelete = false;\n        this.$store.dispatch('handleSuccess', MESSAGE.HTTP_DELETE_OK);\n        this.loadUsers();\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    /**\r\n     * Validate dữ liệu\r\n     */\n    validateData() {\n      var invalid = true;\n      this.invalidData = [];\n      if (this.selectedUsers.name == null || String(this.selectedUsers.name).trim() == '') {\n        this.invalidData['name'] = 'Tên tài khoản không được để trống';\n        invalid = false;\n      }\n      if (this.selectedUsers.user_code == null || String(this.selectedUsers.user_code).trim() == '') {\n        this.invalidData['user_code'] = 'Mã tài khoản không được để trống';\n        invalid = false;\n      }\n      if (this.selectedUsers.email != null && !this.validateemail()) {\n        this.invalidData['email'] = 'Email không đúng định dạng';\n        invalid = false;\n      }\n      if (this.selectedUsers.email == null) {\n        this.invalidData['email'] = 'Email không được để trống';\n        invalid = false;\n      }\n      if (this.selectedUsers.level == null) {\n        this.invalidData['level'] = 'Loại tài khoản không được để trống';\n        invalid = false;\n      }\n      return invalid;\n    },\n    /**\r\n     * Validate email\r\n     */\n    validateemail() {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.selectedUsers.email) && this.selectedUsers.email != null && String(this.selectedUsers.email).trim() != '') {\n        return true;\n      }\n      return false;\n    },\n    /**\r\n     * Validate mã phòng thi\r\n     * Ko cho phép nhập các kí tự đặc biệt\r\n     * @param {*} event\r\n     */\n    handlerInputDepartmentCode(event) {\n      let pattern = /[\\W_]/g;\n      let res = event.key.match(pattern);\n      if (res) {\n        event.preventDefault();\n      }\n    },\n    /**\r\n     * Validate mã phòng thi\r\n     * Ko cho phép nhập các kí tự đặc biệt\r\n     * @param {*} event\r\n     */\n    handlerInputCode(event) {\n      let pattern = /[\\W_]/g;\n      let res = event.key.match(pattern);\n      if (res) {\n        event.preventDefault();\n      }\n    },\n    /**\r\n     * Không cho nhập khoảng trắng\r\n     * @param {*} event\r\n     */\n    validateSpace(event) {\n      if (event.keyCode === 32) {\n        event.preventDefault();\n      }\n    },\n    /**\r\n     * Lấy danh sách user\r\n     */\n    async loadUsers() {\n      this.isLoading = true;\n      await getUsers().then(res => {\n        this.users = res.data;\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 500);\n      });\n    }\n  },\n  created() {\n    this.loadUsers();\n  }\n};","map":{"version":3,"names":["generateCode","Textarea","Button","Dialog","DataTable","TheLoadingProgress","Column","Dropdown","Skeleton","InputText","Calendar","MESSAGE","RESPONSE_STATUS","getUsers","saveUser","updateUser","deleteUser","components","data","isShowModal","columns","field","header","department","exam","levelOptions","description","value","search","isLoadingComponent","isPopupDelete","isLoading","isDisable","selectedUsers","name","user_code","email","note","level","modeModal","FormMode","INSERT","users","modeGenerate","warningVisible","invalidData","methods","handlerGenerateCode","doSave","validateData","then","res","loadUsers","$store","dispatch","HTTP_INSERT_OK","catch","error","response","status","HTTP_UNPROCESSABLE_ENTITY","itemError","errors","console","log","finally","setTimeout","UPDATE","HTTP_UPDATE_OK","onRowSelect","afterHideDialog","deleteRowSelect","handlerDelete","id","HTTP_DELETE_OK","invalid","String","trim","validateemail","test","handlerInputDepartmentCode","event","pattern","key","match","preventDefault","handlerInputCode","validateSpace","keyCode","created"],"sources":["E:\\khoaluan\\w-score\\vue\\src\\views\\user\\UserList.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-list flex-grow-1 d-flex\">\r\n        <div class=\"d-flex flex-column flex-grow-1\">\r\n            <div class=\"d-flex flex-row title-box\">\r\n                <div class=\"list-title flex-grow-1 text-start\">Quản lý tài khoản</div>\r\n            </div>\r\n            <div class=\"d-flex flex-row toolbar-box justify-content-between\">\r\n                <div class=\"left-toolbar d-flex flex-row\">\r\n                    <div class=\"m-search_form flex-row d-flex align-items-center d-flex\">\r\n                        <InputText type=\"search\" v-model=\"search\" class=\"ms-input_search w-100\" placeholder=\"Tìm kiếm\"/>\r\n                        <div class=\"icon24 icon search-right search\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-toolbar d-flex flex-row\">\r\n                    <Button @click=\"isShowModal = !isShowModal\"\r\n                            class=\"ms-btn primary d-flex justify-content-center flex-grow-1 ms-btn_search ps-3 pe-3 gap-2\">\r\n                        <div class=\"icon24 icon-add-white\"></div>\r\n                        <div class=\"fw-semibold\">Thêm tài khoản</div>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div class=\"box list-content flex-grow-1 flex-row\">\r\n                <DataTable paginator :rows=\"10\" :rowsPerPageOptions=\"[5, 10, 20, 50]\" class=\"flex1 flex-column\"\r\n                           :class=\"{ 'loading': isLoading }\" :loading=\"isLoading\"\r\n                           :value=\"isLoading ? Array.from({ length: 8 }, () => ({ ...this.department })) : users\"\r\n                           currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\r\n                           paginatorTemplate=\"FirstPageLink PrevPageLink flex1 CurrentPageReport NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                           @rowDblclick=\"onRowSelect($event.data)\" tableStyle=\"min-width: 100%\" rowHover>\r\n                    <template #paginatorstart>\r\n                        <Button type=\"button\" icon=\"pi pi-refresh\" text/>\r\n                    </template>\r\n                    <template #paginatorend>\r\n                        bản ghi/trang\r\n                    </template>\r\n                    <template #empty>\r\n                        <div>\r\n                            Không có dữ liệu\r\n                        </div>\r\n                    </template>\r\n                    <Column header=\"STT\" style=\"width: 100px;\" class=\"text-center\">\r\n                        <template #body=\"slotProps\">\r\n                            <div v-if=\"!isLoading\"> {{ slotProps.index + 1 }}</div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"name\" style=\"width: 15vw;\" header=\"Họ và tên\">\r\n                        <template #body=\"{ data, field, slotProps }\">\r\n                            <div v-if=\"!isLoading\"> {{ data[field] }}</div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"user_code\" dataKey=\"id\" header=\"Mã tài khoản\" style=\"width: 20vw;\">\r\n                        <template #body=\"{ data, field, slotProps }\">\r\n                            <div v-if=\"!isLoading\"> {{ data[field] }}</div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"email\" dataKey=\"id\" header=\"Email\">\r\n                        <template #body=\"{ data, field, slotProps }\">\r\n                            <div v-if=\"!isLoading\"> {{ data[field] }}</div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column alignFrozen=\"right\" style=\"width: 15vw; text-align: center;\" frozen header=\"Thao tác\">\r\n                        <template #body=\"slotProps\">\r\n                            <div class=\"row-actions flex-row\" v-if=\"!isLoading\">\r\n                                <div class=\"item\" @click=\"onRowSelect(slotProps.data)\">\r\n                                    <div class=\"v-popover popover\">\r\n                                        <div class=\"trigger\">\r\n                                            <div class=\"icon24 edit\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"item\" @click=\"deleteRowSelect(slotProps.data)\">\r\n                                    <div class=\"v-popover popover\">\r\n                                        <div class=\"icon24 delete\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <Dialog v-model:visible=\"isPopupDelete\" modal closeOnEscape :style=\"{ width: '25vw', height: '20vh' }\"\r\n            header=\"Xóa đề thi\">\r\n        <div class=\"w-full flex flex-column\">\r\n            <span> Bạn có chắc chắn muốn xóa tài khoản <b>{{ selectedUsers.name }}</b> không?</span>\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"Không\" class=\"ms-button btn detail-button secondary\" @click=\"isPopupDelete = false\"/>\r\n            <Button label=\"Xóa tài khoản\" class=\"ms-button btn w-100 danger\" @click=\"handlerDelete\"/>\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"isShowModal\" @keydown.enter.prevent=\"doSave\" modal @afterHide=\"afterHideDialog\"\r\n            :header=\"modeModal == FormMode.INSERT ? 'Thêm tài khoản' : 'Sửa tài khoản'\" :style=\"{ width: '50vw' }\"\r\n            closeOnEscape>\r\n        <TheLoadingProgress v-if=\"isLoadingComponent\"/>\r\n        <div class=\"w-full flex flex-column\">\r\n            <div class=\"form-group flex-row\">\r\n                <div class=\"flex1 mr-10\">\r\n                    <div class=\"group-form_box\">\r\n                        <div class=\"label\"> Họ và tên<span class=\"required\">*</span></div>\r\n                        <div class=\"mt-2\">\r\n                            <InputText v-model=\"selectedUsers.name\" placeholder=\"Nhập họ tên\"\r\n                                       :class=\"{ 'error': invalidData['name'] }\"\r\n                                       @input=\"handlerGenerateCode\"></InputText>\r\n                        </div>\r\n                        <div class=\"ms-error-text\" v-if=\"invalidData['name']\">\r\n                            {{ invalidData['name'] }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex1 mr-10\">\r\n                    <div class=\"group-form_box\">\r\n                        <div class=\"label\">Mã tài khoản<span class=\"required\">*</span></div>\r\n                        <div class=\"mt-2\">\r\n                            <InputText v-model=\"selectedUsers.user_code\" placeholder=\"Tên phòng thi\"\r\n                                       :class=\"{ 'error': invalidData['user_code'] }\"\r\n                                       @keypress=\"handlerInputCode\"\r\n                                       @input=\"modeGenerate = selectedUsers.user_code ? false : true;\"></InputText>\r\n                        </div>\r\n                        <div class=\"ms-error-text\" v-if=\"invalidData['user_code']\">\r\n                            {{ invalidData['user_code'] }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group flex-row\">\r\n                <div class=\"flex1 mr-10\">\r\n                    <div class=\"group-form_box\">\r\n                        <div class=\"label\">Email<span class=\"required\">*</span></div>\r\n                        <div class=\"mt-2\">\r\n                            <InputText v-model=\"selectedUsers.email\" placeholder=\"Nhập email\"\r\n                                       :class=\"{ 'error': invalidData['user_code'] }\"\r\n                                       @keypress=\"validateSpace\"></InputText>\r\n                        </div>\r\n                        <div class=\"ms-error-text\" v-if=\"invalidData['email']\">\r\n                            {{ invalidData['email'] }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex1 mr-10\">\r\n                    <div class=\"group-form_box\">\r\n                        <div class=\"label\">Loại tài khoản<span class=\"required\">*</span></div>\r\n                        <div class=\"mt-2\">\r\n                            <Dropdown v-model=\"selectedUsers.level\" optionLabel=\"description\" optionValue=\"value\"\r\n                                      :class=\"{ 'error': invalidData['level'] }\" :options=\"levelOptions\" showClear\r\n                                      placeholder=\"Chọn loại tài khoản\"/>\r\n                        </div>\r\n                        <div class=\"ms-error-text\" v-if=\"invalidData['level']\">\r\n                            {{ invalidData['level'] }}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex1\">\r\n                        <div class=\"ms-input ms-editor w-100\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group flex-row\">\r\n                <div class=\"flex1 mr-10\">\r\n                    <div class=\"form-group-label d-flex label-form\">\r\n                        Ghi chú\r\n                    </div>\r\n                    <div class=\"ms-input ms-editor w-100\">\r\n                            <Textarea v-model=\"selectedUsers.note\" autoResize rows=\"5\" cols=\"30\"\r\n                                      placeholder=\"Nhập ghi chú\"/>\r\n                    </div>\r\n                    <div class=\"flex1\">\r\n                        <div class=\"ms-input ms-editor w-100\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <template #footer>\r\n            <div class=\"d-flex flex-row\">\r\n                <div class=\"flex1\"></div>\r\n                <Button label=\"Đóng\" class=\"ms-button btn detail-button secondary\" @click=\"isShowModal = false\"/>\r\n                <Button @click=\"doSave\" @keyup.enter=\"doSave\"\r\n                        class=\"ms-btn primary blue d-flex justify-content-center flex-grow-1 ms-btn_search ps-3 pe-3 gap-2\">\r\n                    <div class=\"fw-semibold\">Lưu</div>\r\n                </Button>\r\n            </div>\r\n\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"warningVisible\" modal closeOnEscape :style=\"{ width: '25vw', height: '20vh' }\"\r\n            header=\"Thông báo\">\r\n        <div class=\"w-full flex flex-column\">\r\n            <span> Đề thi <b>{{ selectedData.ExamBankName }}</b> đang được sử dụng. Bạn không thể xóa.</span>\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"Đóng\" class=\"ms-button btn detail-button secondary\" @click=\"warningVisible = false\"/>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\nimport {generateCode} from '@/common/functions';\r\nimport Textarea from 'primevue/textarea';\r\nimport Button from 'primevue/button';\r\nimport Dialog from 'primevue/dialog';\r\nimport DataTable from 'primevue/datatable';\r\nimport TheLoadingProgress from '@/components/LoadingProgress.vue';\r\nimport Column from 'primevue/column';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport Skeleton from 'primevue/skeleton';\r\nimport InputText from 'primevue/inputtext';\r\nimport Calendar from 'primevue/calendar';\r\nimport {MESSAGE, RESPONSE_STATUS} from \"@/common/enums\";\r\nimport {getUsers, saveUser, updateUser, deleteUser} from '/api/user';\r\n\r\nexport default {\r\n    components: {\r\n        DataTable,\r\n        Column,\r\n        Dialog,\r\n        Textarea,\r\n        Button,\r\n        Calendar,\r\n        InputText,\r\n        Dropdown,\r\n        TheLoadingProgress,\r\n        Skeleton,\r\n    },\r\n    data() {\r\n        return {\r\n            isShowModal: false,\r\n            columns: [\r\n                {field: 'name', header: 'Họ và tên'},\r\n                {field: 'user_code', header: 'Mã user'},\r\n                {field: 'email', header: 'email'},\r\n                {field: 'level', header: 'Loại tài khoản'},\r\n                {field: 'note', header: 'Ghi chú'},\r\n            ],\r\n\r\n            department: {},\r\n            exam: {},\r\n            levelOptions: [\r\n                {\r\n                    description: 'Chấm thi',\r\n                    value: 1,\r\n                },\r\n                {\r\n                    description: 'Tạo đề',\r\n                    value: 2,\r\n                },\r\n                {\r\n                    description: 'Tạo đề và chấm thi',\r\n                    value: 3,\r\n                },\r\n            ],\r\n            search: null,\r\n            isLoadingComponent: false,\r\n            isPopupDelete: false,\r\n\r\n            isLoading: true,\r\n            isDisable: false,\r\n            selectedUsers: {\r\n                name: null,\r\n                user_code: null,\r\n                email: null,\r\n                note: null,\r\n                level: null,\r\n            },\r\n\r\n\r\n            modeModal: this.FormMode.INSERT,\r\n            users: [],\r\n            modeGenerate: true, //cho phép sinh mã theo tên\r\n            warningVisible: false,\r\n            invalidData: [],\r\n\r\n        }\r\n    },\r\n\r\n    methods: {\r\n\r\n        /**\r\n         * Xử lý hàm sinh mã theo tên\r\n         */\r\n        handlerGenerateCode() {\r\n            if (this.modeGenerate)\r\n                this.selectedUsers.user_code = generateCode(this.selectedUsers.name);\r\n        },\r\n\r\n        doSave() {\r\n            try {\r\n                this.isDisable = true;\r\n                if (this.validateData()) {\r\n                    this.isLoadingComponent = true;\r\n                    if (this.modeModal === this.FormMode.INSERT) {\r\n                        saveUser(this.selectedUsers).then(res => {\r\n                            this.loadUsers();\r\n                            this.$store.dispatch('handleSuccess', MESSAGE.HTTP_INSERT_OK);\r\n                            this.isShowModal = false;\r\n                            this.modeModal = this.FormMode.INSERT;\r\n                            this.selectedUsers = {\r\n                                name: null,\r\n                                user_code: null,\r\n                                email: null,\r\n                                note: null,\r\n                                level: null,\r\n                            };\r\n                        }).catch(error => {\r\n                            if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\r\n                                for (var itemError in error.response.data.errors) {\r\n                                    console.log(error.response.data.errors);\r\n                                    this.invalidData[itemError] = error.response.data.errors[itemError][0];\r\n                                }\r\n                            }\r\n                        }).finally(() => {\r\n                            this.isDisable = false;\r\n                            setTimeout(() => {\r\n                                this.isLoadingComponent = false;\r\n                            }, 300);\r\n                        });\r\n\r\n                    } else if (this.modeModal === this.FormMode.UPDATE) {\r\n                        updateUser(this.selectedUsers).then(res => {\r\n                            this.loadUsers();\r\n                            this.$store.dispatch('handleSuccess', MESSAGE.HTTP_UPDATE_OK);\r\n                            this.isShowModal = false;\r\n                            this.modeModal = this.FormMode.INSERT;\r\n                            this.selectedUsers = {\r\n                                name: null,\r\n                                user_code: null,\r\n                                email: null,\r\n                                note: null,\r\n                                level: null,\r\n                            };\r\n                        }).catch(error => {\r\n                            console.log(error);\r\n                        }).finally(() =>\r\n                            setTimeout(() => {\r\n                                this.isLoadingComponent = false;\r\n                            }, 750));\r\n                    }\r\n                }\r\n                this.isDisable = false;\r\n            } catch (error) {\r\n                this.isDisable = false;\r\n                this.isLoadingComponent = false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Lấy thông tin bản ghi\r\n         * @param {*} data\r\n         */\r\n        onRowSelect(data) {\r\n            this.modeModal = this.FormMode.UPDATE;\r\n            this.selectedUsers = {...data};\r\n            this.isShowModal = true;\r\n        },\r\n\r\n        afterHideDialog() {\r\n            this.selectedUsers = {\r\n                name: null,\r\n                user_code: null,\r\n                email: null,\r\n                note: null,\r\n                level: null,\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Xóa phòng thi\r\n         * @param {*} data\r\n         */\r\n        deleteRowSelect(data) {\r\n            this.isPopupDelete = true;\r\n            this.selectedUsers = data;\r\n        },\r\n\r\n        /**\r\n         * Click nút xóa phòng thi\r\n         */\r\n        handlerDelete() {\r\n            deleteUser(this.selectedUsers.id).then(res => {\r\n                this.isPopupDelete = false;\r\n                this.$store.dispatch('handleSuccess', MESSAGE.HTTP_DELETE_OK);\r\n                this.loadUsers();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n\r\n        /**\r\n         * Validate dữ liệu\r\n         */\r\n        validateData() {\r\n            var invalid = true;\r\n            this.invalidData = [];\r\n            if (this.selectedUsers.name == null || String(this.selectedUsers.name).trim() == '') {\r\n                this.invalidData['name'] = 'Tên tài khoản không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.selectedUsers.user_code == null || String(this.selectedUsers.user_code).trim() == '') {\r\n                this.invalidData['user_code'] = 'Mã tài khoản không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.selectedUsers.email != null && !this.validateemail()) {\r\n                this.invalidData['email'] = 'Email không đúng định dạng';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.selectedUsers.email == null) {\r\n                this.invalidData['email'] = 'Email không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.selectedUsers.level == null) {\r\n                this.invalidData['level'] = 'Loại tài khoản không được để trống';\r\n                invalid = false;\r\n            }\r\n            return invalid;\r\n        },\r\n\r\n        /**\r\n         * Validate email\r\n         */\r\n        validateemail() {\r\n            if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.selectedUsers.email) && this.selectedUsers.email != null && String(this.selectedUsers.email).trim() != '') {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Validate mã phòng thi\r\n         * Ko cho phép nhập các kí tự đặc biệt\r\n         * @param {*} event\r\n         */\r\n        handlerInputDepartmentCode(event) {\r\n            let pattern = /[\\W_]/g;\r\n            let res = event.key.match(pattern);\r\n            if (res) {\r\n                event.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate mã phòng thi\r\n         * Ko cho phép nhập các kí tự đặc biệt\r\n         * @param {*} event\r\n         */\r\n        handlerInputCode(event) {\r\n            let pattern = /[\\W_]/g;\r\n            let res = event.key.match(pattern);\r\n            if (res) {\r\n                event.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Không cho nhập khoảng trắng\r\n         * @param {*} event\r\n         */\r\n        validateSpace(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Lấy danh sách user\r\n         */\r\n        async loadUsers() {\r\n            this.isLoading = true;\r\n            await getUsers().then(res => {\r\n                this.users = res.data;\r\n            }).catch(error => {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setTimeout(() => {\r\n                    this.isLoading = false\r\n                }, 500);\r\n            })\r\n        },\r\n    },\r\n\r\n    created() {\r\n        this.loadUsers();\r\n    },\r\n\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}