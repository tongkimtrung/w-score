{"ast":null,"code":"import Skeleton from 'primevue/skeleton';\nimport InputText from 'primevue/inputtext';\nimport Dialog from 'primevue/dialog';\nimport Button from 'primevue/button';\nimport DataTable from 'primevue/datatable';\nimport Column from 'primevue/column';\nimport { generateCode } from '@/common/functions';\nimport { FORM_MODE, MESSAGE, RESPONSE_STATUS } from \"@/common/enums\";\nimport { saveData, getDataDepartment, updateDepartment, deleteDepartment } from '/api/department';\nimport TheLoadingProgress from \"@/components/LoadingProgress.vue\";\nexport default {\n  name: \"DepartmentList\",\n  computed: {\n    FORM_MODE() {\n      return FORM_MODE;\n    }\n  },\n  components: {\n    TheLoadingProgress,\n    Dialog,\n    Button,\n    InputText,\n    DataTable,\n    Column,\n    Skeleton\n  },\n  data() {\n    return {\n      search: null,\n      modePopup: this.FormMode.INSERT,\n      department: {\n        id: null,\n        department_name: null,\n        department_code: null\n      },\n      warningVisible: false,\n      dataChanged: null,\n      data: [],\n      // data table\n      isShowModal: false,\n      popupLoading: false,\n      isLoading: false,\n      isPopupDelete: false,\n      isDisabled: false,\n      isLoadingDelete: false,\n      invalidData: [],\n      //mảng chứa thông tin lỗi\n      modeGenerate: true //cho phép sinh mã theo tên\n    };\n  },\n  methods: {\n    /**\r\n     * Xử lý hàm sinh mã theo tên\r\n     */\n    handlerGenerateCode() {\n      if (this.modeGenerate) this.department.department_code = generateCode({\n        value: this.department.department_name\n      });\n    },\n    /**\r\n     * Validate mã phòng thi\r\n     * Ko cho phép nhập các kí tự đặc biệt\r\n     * @param {*} event\r\n     */\n    handlerInputdepartment_code(event) {\n      let pattern = /[\\W_]/g;\n      let res = event.key.match(pattern);\n      if (res) {\n        event.preventDefault();\n      }\n    },\n    /**\r\n     * Lưu phòng thi\r\n     */\n    doSave(event) {\n      event.preventDefault();\n      this.invalidData = [];\n      this.isDisabled = true;\n      if (this.validateData()) {\n        switch (this.modePopup) {\n          case this.FormMode.INSERT:\n            saveData(this.department).then(res => {\n              this.department = {};\n              this.$store.dispatch('handleSuccess', 'Thêm mới thành công');\n              this.isShowModal = false;\n              this.loadData();\n            }).catch(error => {\n              if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\n                this.$store.dispatch('handleError');\n                for (const itemError in error.response.data.errors) {\n                  this.invalidData[itemError] = error.response.data.errors[itemError][0];\n                }\n              }\n            }).finally(() => {\n              this.isDisabled = false;\n            });\n            break;\n          case this.FormMode.UPDATE:\n            if (JSON.stringify(this.dataChanged) !== JSON.stringify(this.department)) {\n              updateDepartment(this.department).then(res => {\n                this.department = {};\n                this.isShowModal = false;\n                this.$store.dispatch('handleSuccess', MESSAGE.HTTP_UPDATE_OK);\n                this.loadData();\n              }).catch(error => {\n                if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\n                  for (var itemError in error.response.data.errors) {\n                    this.invalidData[itemError] = error.response.data.errors[itemError][0];\n                  }\n                }\n                return;\n              }).finally(() => {\n                this.isDisabled = false;\n              });\n            } else {\n              this.isShowModal = false;\n              this.isDisabled = false;\n            }\n            break;\n          default:\n            break;\n        }\n      } else this.isDisabled = false;\n      this.modeGenerate = true;\n    },\n    /**\r\n     * Click nút xóa phòng thi\r\n     */\n    handlerDelete() {\n      this.isLoadingDelete = true;\n      deleteDepartment(this.department.id).then(res => {\n        this.isPopupDelete = false;\n        this.department = {\n          'id': null,\n          'department_name': null,\n          'department_code': null\n        };\n        this.$store.dispatch('handleSuccess', MESSAGE.HTTP_DELETE_OK);\n        this.loadData();\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        setTimeout(() => {\n          this.isLoadingDelete = false;\n        }, 300);\n      });\n    },\n    afterHideDialog() {\n      this.department = {\n        id: null,\n        department_name: null,\n        department_code: null\n      };\n    },\n    /**\r\n     * Xóa phòng thi\r\n     * @param {*} data\r\n     */\n    deleteRowSelect(data) {\n      this.department = data;\n      if (data.exam_shifts.length > 0) {\n        this.warningVisible = true;\n      } else {\n        this.isPopupDelete = true;\n        this.department = data;\n      }\n    },\n    /**\r\n     * validate dữ liệu\r\n     */\n    validateData() {\n      var invalid = true;\n      if (this.department.department_name == null) {\n        this.invalidData['department_name'] = \"Tên phòng thi không được để trống\";\n        invalid = false;\n      }\n      if (this.department.department_code == null) {\n        this.invalidData['department_code'] = \"Mã phòng thi không được để trống\";\n        invalid = false;\n      }\n      return invalid;\n    },\n    /**\r\n     * Lấy thông tin bản ghi\r\n     * @param {*} data\r\n     */\n    onRowSelect(data) {\n      this.modePopup = this.FormMode.UPDATE;\n      this.department = {\n        ...data\n      };\n      this.dataChanged = data;\n      this.isShowModal = true;\n    },\n    /**\r\n     * Load dữ liệu\r\n     */\n    async loadData() {\n      this.isLoading = true;\n      // this.data = Array.from({ length: 5 }, () => ({ ...this.department }));\n      await getDataDepartment().then(res => {\n        this.data = res.data;\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 300);\n      });\n    }\n  },\n  created() {\n    this.loadData();\n  },\n  mounted() {}\n};","map":{"version":3,"names":["Skeleton","InputText","Dialog","Button","DataTable","Column","generateCode","FORM_MODE","MESSAGE","RESPONSE_STATUS","saveData","getDataDepartment","updateDepartment","deleteDepartment","TheLoadingProgress","name","computed","components","data","search","modePopup","FormMode","INSERT","department","id","department_name","department_code","warningVisible","dataChanged","isShowModal","popupLoading","isLoading","isPopupDelete","isDisabled","isLoadingDelete","invalidData","modeGenerate","methods","handlerGenerateCode","value","handlerInputdepartment_code","event","pattern","res","key","match","preventDefault","doSave","validateData","then","$store","dispatch","loadData","catch","error","response","status","HTTP_UNPROCESSABLE_ENTITY","itemError","errors","finally","UPDATE","JSON","stringify","HTTP_UPDATE_OK","handlerDelete","HTTP_DELETE_OK","console","log","setTimeout","afterHideDialog","deleteRowSelect","exam_shifts","length","invalid","onRowSelect","created","mounted"],"sources":["E:\\khoaluan\\w-score\\vue\\src\\views\\user\\DepartmentList.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-list flex-grow-1 d-flex\">\r\n        <div class=\"d-flex flex-column flex-grow-1\">\r\n            <div class=\"d-flex flex-row title-box\">\r\n                <div class=\"list-title flex-grow-1 text-start\">Danh sách phòng thi</div>\r\n            </div>\r\n            <div class=\"d-flex flex-row toolbar-box justify-content-between\">\r\n                <div class=\"left-toolbar d-flex flex-row\">\r\n                    <div class=\"m-search_form flex-row d-flex align-items-center d-flex\">\r\n                        <InputText type=\"search\" v-model=\"search\" class=\"ms-input_search w-100\" placeholder=\"Tìm kiếm\"/>\r\n                        <div class=\"icon24 icon search-right search\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-toolbar d-flex flex-row\">\r\n                    <Button @click=\"isShowModal = !isShowModal, modeGenerate = true, modePopup=FORM_MODE.INSERT\"\r\n                            class=\"ms-btn primary d-flex justify-content-center flex-grow-1 ms-btn_search ps-3 pe-3 gap-2\">\r\n                        <div class=\"icon24 icon-add-white\"></div>\r\n                        <div class=\"fw-semibold\">Thêm phòng thi</div>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div class=\"box list-content flex-grow-1 flex-row\">\r\n                <DataTable paginator :rows=\"10\" :rowsPerPageOptions=\"[5, 10, 20, 50]\" class=\"flex1 flex-column\"\r\n                           :class=\"{ 'loading': isLoading }\" :loading=\"isLoading\"\r\n                           :value=\"isLoading ? Array.from({ length: 8 }, () => ({ ...this.department })) : data\"\r\n                           currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\r\n                           paginatorTemplate=\"FirstPageLink PrevPageLink flex1 CurrentPageReport NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                           @rowDblclick=\"onRowSelect($event.data)\" tableStyle=\"min-width: 100%\" rowHover>\r\n                    <template #paginatorstart>\r\n                        <Button type=\"button\" icon=\"pi pi-refresh\" text/>\r\n                    </template>\r\n                    <template #paginatorend>\r\n                        bản ghi/trang\r\n                    </template>\r\n                    <template #empty>\r\n                        <div>\r\n                            Không có dữ liệu\r\n                        </div>\r\n                    </template>\r\n                    <Column header=\"STT\" style=\"width: 100px;\" class=\"text-center\">\r\n                        <template #body=\"slotProps\">\r\n                            <div v-if=\"!isLoading\"> {{ slotProps.index + 1 }}</div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"department_code\" style=\"width: 30vw;\" header=\"Mã phòng thi\">\r\n                        <template #body=\"{ data, field, slotProps }\">\r\n                            <div v-if=\"!isLoading\"> {{ data[field] }}</div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"department_name\" dataKey=\"id\" header=\"Tên phòng thi\">\r\n                        <template #body=\"{ data, field, slotProps }\">\r\n                            <div v-if=\"!isLoading\"> {{ data[field] }}</div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column dataKey=\"id\" header=\"Trạng thái\" style=\"width: 200px;\">\r\n                        <template #body=\"{ data, field, slotProps }\">\r\n                            <div v-if=\"!isLoading\">\r\n                                <div class=\"d-flex status-ctn max-content\" v-if=\"data['exam_shifts'].length > 0\"\r\n                                     style=\"background-color: rgb(229, 250, 237);\">\r\n                                    <div class=\"status-dot\" style=\"background-color: rgb(0, 200, 83);\"></div>\r\n                                    <div class=\"status-text\" style=\"color: rgb(0, 200, 83);\">Đang sử dụng</div>\r\n                                </div>\r\n                                <div class=\"d-flex status-ctn max-content\" v-else\r\n                                     style=\"background-color: rgb(254, 243, 231);\">\r\n                                    <div class=\"status-dot\" style=\"background-color: rgb(243, 141, 21);\"></div>\r\n                                    <div class=\"status-text\" style=\"color: rgb(243, 141, 21);\">Không sử dụng</div>\r\n                                </div>\r\n                            </div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column alignFrozen=\"right\" style=\"width: 100px; text-align: center;\" frozen header=\"Thao tác\">\r\n                        <template #body=\"slotProps\">\r\n                            <div class=\"row-actions flex-row\" v-if=\"!isLoading\">\r\n                                <div class=\"item\" @click=\"onRowSelect(slotProps.data)\">\r\n                                    <div class=\"v-popover popover\">\r\n                                        <div class=\"trigger\">\r\n                                            <div class=\"icon24 edit\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"item\" @click=\"deleteRowSelect(slotProps.data)\">\r\n                                    <div class=\"v-popover popover\">\r\n                                        <div class=\"icon24 delete\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <Dialog v-model:visible=\"isPopupDelete\" modal closeOnEscape :style=\"{ width: '25vw' }\" header=\"Xóa phòng thi\">\r\n        <TheLoadingProgress v-if=\"isLoadingDelete\"/>\r\n        <div class=\"w-full flex flex-column\" style=\"line-height: 1.5;\">\r\n            <span> Bạn có chắc chắn muốn xóa phòng thi <b>{{ department.department_code }}</b> không?</span>\r\n        </div>\r\n        <template #footer>\r\n            <Button\r\n                class=\"ms-btn secondary d-flex justify-content-center ms-btn_search ps-3 pe-3 gap-2\"\r\n                @click=\"isPopupDelete = false\">\r\n                <div class=\"\">Không</div>\r\n            </Button>\r\n            <Button @click=\"handlerDelete\"\r\n                    class=\"ms-btn danger d-flex justify-content-center ms-btn_search ps-3 pe-3 gap-2\">\r\n                <div class=\"\">Xóa phòng thi</div>\r\n            </Button>\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"isShowModal\" @keydown.enter.prevent=\"doSave\" modal\r\n            @afterHide=\"afterHideDialog\"\r\n            :header=\"modePopup == FormMode.INSERT ? 'Thêm phòng thi' : 'Sửa phòng thi'\" :style=\"{ width: '30vw' }\"\r\n            closeOnEscape>\r\n        <div class=\"w-full flex flex-column\">\r\n            <div class=\"form-group flex-row\">\r\n                <div class=\"flex1 mr-10\">\r\n                    <div class=\"group-form_box\">\r\n                        <div class=\"label\">Tên phòng thi<span class=\"required\">*</span></div>\r\n                        <div class=\"mt-2\">\r\n                            <InputText v-model=\"department.department_name\" placeholder=\"Tên phòng thi\"\r\n                                       :class=\"{ 'error': invalidData['department_name'] }\"\r\n                                       @input=\"handlerGenerateCode\"></InputText>\r\n                        </div>\r\n                        <div class=\"ms-error-text\" v-if=\"invalidData['department_name']\">\r\n                            {{ invalidData['department_name'] }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex1 mr-10\">\r\n                    <div class=\"ms-input ms-editor w-100\">\r\n                        <div class=\"group-form_box\">\r\n                            <div class=\"label\">Mã phòng thi<span class=\"required\">*</span></div>\r\n                            <div class=\"mt-2\">\r\n                                <InputText v-model=\"department.department_code\" placeholder=\"Mã phòng thi\"\r\n                                           :class=\"{ 'error': invalidData['department_code'] }\"\r\n                                           @keypress=\"handlerInputdepartment_code\"\r\n                                           @input=\"modeGenerate = department.department_code ? false : true;\"></InputText>\r\n                            </div>\r\n                            <div class=\"ms-error-text\" v-if=\"invalidData['department_code']\">\r\n                                {{ invalidData['department_code'] }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex1\">\r\n                        <div class=\"ms-input ms-editor w-100\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <template #footer>\r\n            <div class=\"d-flex flex-row\">\r\n                <div class=\"flex1\"></div>\r\n                <Button\r\n                    class=\"ms-btn secondary d-flex justify-content-center ms-btn_search ps-3 pe-3 gap-2 me-2\"\r\n                    @click=\"isShowModal = false\">\r\n                    <div class=\"\">Đóng</div>\r\n                </Button>\r\n                <Button @click=\"doSave\" @keyup.enter.prevent=\"doSave\" :disabled=\"isDisabled\"\r\n                        class=\"ms-btn primary blue d-flex justify-content-center flex-grow-1 ms-btn_search ps-3 pe-3 gap-2\">\r\n                    <div class=\"fw-semibold\">Lưu</div>\r\n                </Button>\r\n            </div>\r\n\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"warningVisible\" modal closeOnEscape :style=\"{ width: '25vw', height: '20vh' }\"\r\n            header=\"Thông báo\">\r\n        <div class=\"w-full flex flex-column\">\r\n            <span> Phòng thi <b>{{ department.department_name }}</b> đang được sử dụng. Bạn không thể xóa.</span>\r\n        </div>\r\n        <template #footer>\r\n            <Button\r\n                @click=\"warningVisible = false\"\r\n                class=\"ms-btn secondary blue d-flex justify-content-center ms-btn_search ps-3 pe-3 gap-2\">\r\n                <div class=\"\">Đóng</div>\r\n            </Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\nimport Skeleton from 'primevue/skeleton';\r\nimport InputText from 'primevue/inputtext';\r\nimport Dialog from 'primevue/dialog';\r\nimport Button from 'primevue/button';\r\nimport DataTable from 'primevue/datatable';\r\nimport Column from 'primevue/column';\r\nimport {generateCode} from '@/common/functions'\r\nimport {FORM_MODE, MESSAGE, RESPONSE_STATUS} from \"@/common/enums\";\r\nimport {saveData, getDataDepartment, updateDepartment, deleteDepartment} from '/api/department';\r\nimport TheLoadingProgress from \"@/components/LoadingProgress.vue\";\r\n\r\nexport default {\r\n    name: \"DepartmentList\",\r\n    computed: {\r\n        FORM_MODE() {\r\n            return FORM_MODE\r\n        }\r\n    },\r\n    components: {\r\n        TheLoadingProgress,\r\n        Dialog,\r\n        Button,\r\n        InputText,\r\n        DataTable,\r\n        Column,\r\n        Skeleton,\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            search: null,\r\n            modePopup: this.FormMode.INSERT,\r\n            department: {\r\n                id: null,\r\n                department_name: null,\r\n                department_code: null,\r\n            },\r\n            warningVisible: false,\r\n            dataChanged: null,\r\n\r\n            data: [],  // data table\r\n            isShowModal: false,\r\n            popupLoading: false,\r\n\r\n            isLoading: false,\r\n\r\n            isPopupDelete: false,\r\n            isDisabled: false,\r\n            isLoadingDelete: false,\r\n\r\n            invalidData: [],   //mảng chứa thông tin lỗi\r\n            modeGenerate: true, //cho phép sinh mã theo tên\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        /**\r\n         * Xử lý hàm sinh mã theo tên\r\n         */\r\n        handlerGenerateCode() {\r\n            if (this.modeGenerate) this.department.department_code = generateCode({value: this.department.department_name});\r\n        },\r\n\r\n        /**\r\n         * Validate mã phòng thi\r\n         * Ko cho phép nhập các kí tự đặc biệt\r\n         * @param {*} event\r\n         */\r\n        handlerInputdepartment_code(event) {\r\n            let pattern = /[\\W_]/g;\r\n            let res = event.key.match(pattern);\r\n            if (res) {\r\n                event.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Lưu phòng thi\r\n         */\r\n        doSave(event) {\r\n            event.preventDefault();\r\n            this.invalidData = [];\r\n            this.isDisabled = true;\r\n            if (this.validateData()) {\r\n                switch (this.modePopup) {\r\n                    case this.FormMode.INSERT:\r\n                        saveData(this.department).then(res => {\r\n                            this.department = {};\r\n                            this.$store.dispatch('handleSuccess', 'Thêm mới thành công');\r\n                            this.isShowModal = false;\r\n                            this.loadData();\r\n                        }).catch(error => {\r\n                            if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\r\n                                this.$store.dispatch('handleError');\r\n                                for (const itemError in error.response.data.errors) {\r\n                                    this.invalidData[itemError] = error.response.data.errors[itemError][0];\r\n                                }\r\n                            }\r\n                        }).finally(() => {\r\n                            this.isDisabled = false;\r\n                        })\r\n                        break;\r\n                    case this.FormMode.UPDATE:\r\n                        if (JSON.stringify(this.dataChanged) !== JSON.stringify(this.department)) {\r\n                            updateDepartment(this.department).then(res => {\r\n                                this.department = {};\r\n                                this.isShowModal = false;\r\n                                this.$store.dispatch('handleSuccess', MESSAGE.HTTP_UPDATE_OK);\r\n                                this.loadData();\r\n                            }).catch(error => {\r\n                                if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\r\n                                    for (var itemError in error.response.data.errors) {\r\n                                        this.invalidData[itemError] = error.response.data.errors[itemError][0];\r\n                                    }\r\n                                }\r\n                                return;\r\n                            }).finally(() => {\r\n                                this.isDisabled = false;\r\n                            })\r\n                        } else {\r\n                            this.isShowModal = false;\r\n                            this.isDisabled = false;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            } else this.isDisabled = false;\r\n            this.modeGenerate = true;\r\n        },\r\n\r\n        /**\r\n         * Click nút xóa phòng thi\r\n         */\r\n        handlerDelete() {\r\n            this.isLoadingDelete = true;\r\n            deleteDepartment(this.department.id).then(res => {\r\n                this.isPopupDelete = false;\r\n                this.department = {\r\n                    'id': null,\r\n                    'department_name': null,\r\n                    'department_code': null,\r\n                };\r\n                this.$store.dispatch('handleSuccess', MESSAGE.HTTP_DELETE_OK);\r\n                this.loadData();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setTimeout(() => {\r\n                    this.isLoadingDelete = false\r\n                }, 300);\r\n            })\r\n        },\r\n\r\n        afterHideDialog() {\r\n            this.department = {\r\n                id: null,\r\n                department_name: null,\r\n                department_code: null,\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Xóa phòng thi\r\n         * @param {*} data\r\n         */\r\n        deleteRowSelect(data) {\r\n            this.department = data;\r\n            if (data.exam_shifts.length > 0) {\r\n                this.warningVisible = true;\r\n            } else {\r\n                this.isPopupDelete = true;\r\n                this.department = data;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * validate dữ liệu\r\n         */\r\n        validateData() {\r\n            var invalid = true;\r\n            if (this.department.department_name == null) {\r\n                this.invalidData['department_name'] = \"Tên phòng thi không được để trống\";\r\n                invalid = false;\r\n            }\r\n            if (this.department.department_code == null) {\r\n                this.invalidData['department_code'] = \"Mã phòng thi không được để trống\";\r\n                invalid = false;\r\n            }\r\n            return invalid;\r\n        },\r\n\r\n        /**\r\n         * Lấy thông tin bản ghi\r\n         * @param {*} data\r\n         */\r\n        onRowSelect(data) {\r\n            this.modePopup = this.FormMode.UPDATE;\r\n            this.department = {...data};\r\n            this.dataChanged = data;\r\n            this.isShowModal = true;\r\n        },\r\n\r\n        /**\r\n         * Load dữ liệu\r\n         */\r\n        async loadData() {\r\n            this.isLoading = true;\r\n            // this.data = Array.from({ length: 5 }, () => ({ ...this.department }));\r\n            await getDataDepartment().then(res => {\r\n                this.data = res.data;\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n                .finally(() => {\r\n                    setTimeout(() => {\r\n                        this.isLoading = false;\r\n                    }, 300);\r\n                });\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.loadData();\r\n    },\r\n\r\n    mounted() {\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}