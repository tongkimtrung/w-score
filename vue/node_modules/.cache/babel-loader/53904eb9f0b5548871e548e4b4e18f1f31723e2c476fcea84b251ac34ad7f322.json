{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport InputNumber from 'primevue/inputnumber';\nimport { insertExamBank, updateExamBank } from '/api/exam-bank';\nimport Dropdown from 'primevue/dropdown';\nimport Button from 'primevue/button';\nimport Resumable from 'resumablejs';\nimport * as XLSX from 'xlsx';\nimport { mapState, mapActions } from 'vuex';\nimport Dialog from 'primevue/dialog';\nexport default {\n  emits: [\"setData\", \"loadExamBank\", \"showModal\"],\n  props: {\n    FileData: {\n      default: null\n    },\n    url: {\n      type: String,\n      default: '/exam'\n    },\n    selectedData: {\n      default: {}\n    }\n  },\n  components: {\n    Dropdown,\n    InputNumber,\n    Dialog,\n    Button\n  },\n  data() {\n    return {\n      exambank: {\n        id: null,\n        ExamBankCode: null,\n        ExamBankName: null,\n        SheetIndexReference: null,\n        DataReference: null,\n        RowReference: null,\n        ResourceFile: null,\n        ResourcePath: null\n      },\n      resumable: null,\n      //dialog\n      dialogVisible: false,\n      contentDialog: null,\n      url: null,\n      sheetOptions: [],\n      selectedSheet: {},\n      File: {\n        FileName: null,\n        FileSize: null,\n        Success: true,\n        SheetCount: 1\n      },\n      FileName: null,\n      selectedFile: null,\n      invalidExamBank: {\n        ExamBankCode: null,\n        ExamBankName: null,\n        SheetIndexReference: null,\n        RowReference: null,\n        FileData: null\n      }\n    };\n  },\n  methods: {\n    ...mapActions('popup', ['toggleModal']),\n    ...mapActions('exambank', ['getExamBank']),\n    async btnSave() {\n      if (this.validateExamBank()) {\n        // let formData = new FormData();\n        // formData.append('id', this.exambank.id);\n        // formData.append('ExamBankCode', this.exambank.ExamBankCode);\n        // formData.append('ExamBankName', this.exambank.ExamBankName);\n        // formData.append('SheetIndexReference', JSON.stringify([this.sheetOptions, this.exambank.SheetIndexReference, this.File.SheetCount]));\n        // formData.append('RowReference', this.exambank.RowReference);\n        // formData.append('FileData', this.selectedFile);\n        // formData.append('FileInfo', this.File.FileSize);\n        // formData.append('DataReference', this.exambank.DataReference);\n        // formData.append('ResourceFile', this.exambank.ResourceFile);\n        // formData.append('ResourcePath', this.exambank.ResourcePath);\n        var me = this;\n        switch (this.modeModal) {\n          case this.$FormMode.Insert:\n            // formData.append('_method', 'POST');\n            // //thêm mới\n            // await insertExamBank(formData).then(res => {\n            //     me.$emit(\"showModal\");\n            //     me.$emit(\"loadExamBank\");\n            // }).catch(error => {\n            //     console.log(error);\n            // });\n\n            this.callApi = true;\n            this.resumable.opts.query.param = JSON.stringify(this.exambank);\n            this.resumable.opts.query.FileInfo = this.File.FileSize;\n            // this.resumable.addFile(this.selectedFile);\n            this.resumable.opts.target = 'exambank';\n            this.resumable.addFile(this.selectedFile);\n            break;\n          case this.$FormMode.Update:\n            formData.append('_method', 'PUT');\n            //thêm mới\n            await updateExamBank(formData).then(res => {\n              me.toggleModal();\n            }).catch(error => {\n              console.log(error);\n            });\n            break;\n          default:\n            break;\n        }\n        //load lại dữ liệu\n        this.$emit(\"loadExamBank\");\n      }\n    },\n    /**\r\n     * Khởi tạo Resumable upload file\r\n     */\n    createResumable() {\n      this.resumable = new Resumable({\n        target: this.url,\n        method: 'POST',\n        query: {\n          _token: document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content') // Thêm CSRF token để tránh lỗi 419\n        },\n        headers: {\n          'Accept': 'application/json',\n          'Content-Disposition': 'form-data; name=\"title\"'\n        },\n        testChunks: false,\n        throttleProgressCallbacks: 1,\n        simultaneousUploads: 4\n      });\n      this.resumable.on('fileAdded', this.onFileAdded);\n      this.resumable.on('fileProgress', this.onFileProgress);\n      this.resumable.on('fileSuccess', this.onFileSuccess);\n      this.resumable.on('fileError', this.onFileError);\n    },\n    /**\r\n     * Thêm file\r\n     * @param {*} file\r\n     */\n    onFileAdded(file) {\n      this.resumable.upload();\n    },\n    /**\r\n     * Tiến trình tải\r\n     * @param {*} file\r\n     */\n    onFileProgress(file) {},\n    /**\r\n     * Upload thành công\r\n     * @param {*} file\r\n     * @param {*} response\r\n     */\n    onFileSuccess(file, response) {},\n    /**\r\n     * Upload thất bại\r\n     * @param {*} file\r\n     * @param {*} message\r\n     */\n    onFileError(file, message) {\n      message = JSON.parse(message);\n      if (message.errorCode == 422) {\n        for (var error in message.errors) {\n          this.invalidExamBank[error] = message.errors[error][0];\n        }\n      } else {}\n    },\n    /**\r\n     * Call api thành công\r\n     * @param {*} value\r\n     */\n    setCallApiSuccess(value) {\n      this.callApiSuccess = value;\n    },\n    /**\r\n     * Sự kiện thay đổi file\r\n     * @param {*} ref ref input\r\n     *\r\n     */\n    onFileChange(ref) {\n      if (this.$refs[ref].files[0].type === \"application/vnd.ms-excel\" || this.$refs[ref].files[0].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n        this.selectedFile = this.$refs[ref].files[0];\n        this.sheetOptions = [];\n        var _size = this.selectedFile.size;\n        var fSExt = new Array('Bytes', 'KB', 'MB', 'GB'),\n          i = 0;\n        while (_size > 900) {\n          _size /= 1024;\n          i++;\n        }\n        this.File.FileSize = Math.round(_size * 100) / 100 + ' ' + fSExt[i];\n        this.File.FileName = this.selectedFile.name;\n        //kiểm tra dung lượng file\n        if (this.$refs[ref].files[0].size > 30 * 1024 * 1024) {\n          this.File.Success = false;\n          this.sheetOptions = [];\n          this.exambank.RowReference = null;\n        } else {\n          this.File.Success = true;\n          //đọc file upload lấy ra danh sách tên các sheet\n          const reader = new FileReader();\n          reader.onload = e => {\n            /* Parse data */\n            const bstr = e.target.result;\n            const workbook = XLSX.read(bstr, {\n              type: 'binary'\n            });\n            //gán sheet mặc định là sheet đầu tiên\n            this.nameSheet = workbook.SheetNames[0];\n            //duyệt các sheet\n            for (let index = 0; index < workbook.SheetNames.length; index++) {\n              this.sheetOptions.push({\n                sheetIndex: index,\n                sheetName: workbook.SheetNames[index]\n              });\n            }\n            this.File.SheetCount = workbook.SheetNames.length;\n            this.selectedSheet = this.sheetOptions[0];\n          };\n          this.exambank.RowReference = 1;\n          reader.readAsBinaryString(this.selectedFile);\n        }\n      } else {\n        this.contentDialog = ' File tư liệu chỉ hỗ trợ định dạng *.xlsx';\n        this.dialogVisible = true;\n      }\n    },\n    /**\r\n     *  Validate dữ liệu\r\n     *  @return bool\r\n     */\n    validateExamBank() {\n      var invalid = true;\n      if (this.exambank.ExamBankCode == null || this.exambank.ExamBankCode == '') {\n        invalid = false;\n        this.invalidExamBank.ExamBankCode = 'Mã đề thi không được để trống';\n      } else {\n        this.invalidExamBank.ExamBankCode = null;\n      }\n      if (this.exambank.ExamBankName == null || this.exambank.ExamBankName == '') {\n        invalid = false;\n        this.invalidExamBank.ExamBankName = 'Tên đề thi không được để trống';\n      } else {\n        this.invalidExamBank.ExamBankName = null;\n      }\n      if (this.exambank.RowReference == null || this.exambank.RowReference == '') {\n        invalid = false;\n        this.invalidExamBank.RowReference = 'Dòng tiêu đề không được để trống';\n      } else {\n        this.invalidExamBank.RowReference = null;\n      }\n      if (this.exambank.SheetIndexReference == null) {\n        invalid = false;\n        this.invalidExamBank.SheetIndexReference = 'Sheet tư liệu không được để trống';\n      } else {\n        this.invalidExamBank.SheetIndexReference = null;\n      }\n      if (!this.File.Success) {\n        invalid = false;\n      }\n      return invalid;\n    }\n  },\n  created() {\n    if (this.modeModal == this.$FormMode.Update) {\n      this.exambank = {\n        ...this.selectedData\n      };\n      var SheetIndexReference = JSON.parse(this.exambank.SheetIndexReference);\n      this.exambank.SheetIndexReference = SheetIndexReference[1];\n      this.sheetOptions = SheetIndexReference[0];\n      this.File.FileSize = this.selectedData.FileInfo;\n      this.File.FileName = this.selectedData.ResourceFile;\n    }\n  },\n  mounted() {\n    this.createResumable();\n  },\n  computed: {\n    ...mapState('popup', ['isShowModal']),\n    ...mapState('popup', ['modeModal']),\n    ...mapState('exambank', ['examBankData'])\n  }\n};","map":{"version":3,"names":["InputNumber","insertExamBank","updateExamBank","Dropdown","Button","Resumable","XLSX","mapState","mapActions","Dialog","emits","props","FileData","default","url","type","String","selectedData","components","data","exambank","id","ExamBankCode","ExamBankName","SheetIndexReference","DataReference","RowReference","ResourceFile","ResourcePath","resumable","dialogVisible","contentDialog","sheetOptions","selectedSheet","File","FileName","FileSize","Success","SheetCount","selectedFile","invalidExamBank","methods","btnSave","validateExamBank","me","modeModal","$FormMode","Insert","callApi","opts","query","param","JSON","stringify","FileInfo","target","addFile","Update","formData","append","then","res","toggleModal","catch","error","console","log","$emit","createResumable","method","_token","document","querySelector","getAttribute","headers","testChunks","throttleProgressCallbacks","simultaneousUploads","on","onFileAdded","onFileProgress","onFileSuccess","onFileError","file","upload","response","message","parse","errorCode","errors","setCallApiSuccess","value","callApiSuccess","onFileChange","ref","$refs","files","_size","size","fSExt","Array","i","Math","round","name","reader","FileReader","onload","e","bstr","result","workbook","read","nameSheet","SheetNames","index","length","push","sheetIndex","sheetName","readAsBinaryString","invalid","created","mounted","computed"],"sources":["E:\\khoaluan\\w-score\\vue\\src\\views\\user\\components\\ExamPopup.vue"],"sourcesContent":["<template>\r\n    <div class=\"detail-popup emulation-slide-detail ms-popup-main ams-popup\" v-if=\"isShowModal\">\r\n        <div class=\"popup-modal\"></div>\r\n        <div class=\"vdr inactive\">\r\n            <div class=\"ms-popup\">\r\n                <div class=\"buttons\" @click=\"toggleModal($FormMode.Insert)\">\r\n                    <div class=\"tooltip-top\">\r\n                        <div class=\"button close\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"popup-header\"> {{ modeModal == $FormMode.Insert ? 'Thêm đề thi' : 'Sửa đề thi' }}</div>\r\n                <div class=\"popup-content\">\r\n                    <div class=\"w-full flex flex-column\">\r\n                        <div class=\"form-group flex-row\">\r\n                            <div class=\"flex1 mr-10\">\r\n                                <div class=\"form-group-label d-flex label-form\">\r\n                                    Mã đề thi\r\n                                    <span class=\"required\">*</span>\r\n                                </div>\r\n                                <div class=\"ms-input ms-editor w-100\" style=\"width: 300px;\">\r\n                                    <div class=\"flex-row border\">\r\n                                        <input v-model.trim=\"exambank.ExamBankCode\" type=\"text\" ref=\"ExamBankCode\"\r\n                                               class=\"ms-input-item flex1\" placeholder=\"Nhập tên đề thi\">\r\n                                    </div>\r\n                                    <div class=\"error-text\" v-if=\"invalidExamBank.ExamBankCode\">\r\n                                        {{ invalidExamBank.ExamBankCode }}\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"flex1\">\r\n                                    <div class=\"ms-input ms-editor w-100\"></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"flex1 mr-10\">\r\n                                <div class=\"form-group-label d-flex label-form\">\r\n                                    Tên đề thi\r\n                                    <span class=\"required\">*</span>\r\n                                </div>\r\n                                <div class=\"flex1\">\r\n                                    <div class=\"ms-input ms-editor w-100\" style=\"width: 300px;\">\r\n                                        <div class=\"flex-row border\">\r\n                                            <input v-model.trim=\"exambank.ExamBankName\" type=\"text\" ref=\"inputText\"\r\n                                                   class=\"ms-input-item flex1\" placeholder=\"Nhập tên đề thi\">\r\n                                        </div>\r\n                                        <div class=\"error-text\" v-if=\"invalidExamBank.ExamBankName\">{{\r\n                                                invalidExamBank.ExamBankName\r\n                                            }}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"flex1\">\r\n                                    <div class=\"ms-input ms-editor w-100\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group flex-row\">\r\n                            <div class=\"flex1 mr-10\">\r\n                                <div class=\"form-group-label d-flex label-form\">\r\n                                    File tư liệu\r\n                                    <span class=\"required\">*</span>\r\n                                </div>\r\n                                <div class=\"flex1\">\r\n                                    <div class=\"content-step d-flex\">\r\n                                        <div class=\"upload-container flex1 flex-center\" v-if=\"!File.FileName\"\r\n                                             @click=\"$refs.fileInput.click()\">\r\n                                            <div class=\"no-file d-flex\">\r\n                                                <input type=\"file\" id=\"fileInput\" ref=\"fileInput\"\r\n                                                       @change=\"onFileChange('fileInput')\"\r\n                                                       accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                                                       hidden>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"import-attachment-container flex1\" v-else>\r\n                                            <div class=\"file-info d-flex\">\r\n                                                <div class=\"d-flex\">\r\n                                                    <div class=\"file-icon text-left\"></div>\r\n                                                    <div class=\"file-name flex text-left\">{{ File.FileName }}</div>\r\n                                                </div>\r\n                                                <div class=\"file-size text-left\"> {{ File.FileSize }}</div>\r\n                                                <div class=\"file-accepted text-left d-flex\">\r\n                                                    <div class=\"icon-success\" v-if=\"File.Success\"></div>\r\n                                                    <div v-if=\"File.Success\">Hợp lệ</div>\r\n                                                    <div class=\"icon-unsuccess\" v-if=\"!File.Success\"></div>\r\n                                                    <div v-if=\"!File.Success\">Không hợp lệ</div>\r\n                                                </div>\r\n                                                <input type=\"file\" ref=\"fileInput1\" hidden\r\n                                                       @change=\"onFileChange('fileInput1')\"\r\n                                                       accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\">\r\n                                                <div class=\"change-file blue-text pointer text-left text-link\"\r\n                                                     @click=\"$refs.fileInput1.click()\"> Đổi tệp khác\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"file-caution\" v-if=\"File.Success\">\r\n                                                <div class=\"file-caution-img\"></div>\r\n                                                <div class=\"file-caution-center mt-20\">\r\n                                                    Lưu ý <span style=\"color: red;\">*</span>: Bạn vui lòng chọn sheet tư\r\n                                                    liệu và dòng tiêu đề\r\n                                                    <br>của sheet đó.\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"file-error\" v-if=\"!File.Success\">\r\n                                                <div class=\"file-error-title red-text\"> Lý do không hợp lệ:</div>\r\n                                                <div class=\"file-error-title red-text\">- Dung lượng quá lớn</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"ms-input ms-editor w-100\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group flex-row\">\r\n                            <div class=\"flex1 mr-10\">\r\n                                <div class=\"form-group-label d-flex label-form\">\r\n                                    Sheet tư liệu\r\n                                    <span class=\"required\">*</span>\r\n                                </div>\r\n                                <Dropdown :options=\"sheetOptions\" optionLabel=\"sheetName\" optionValue=\"sheetIndex\"\r\n                                          v-model=\"exambank.SheetIndexReference\"\r\n                                          dropdownIcon=\"icon-combo--dropdown dropdown-list\"/>\r\n                                <div class=\"error-text\" v-if=\"invalidExamBank.SheetIndexReference\">{{\r\n                                        invalidExamBank.SheetIndexReference\r\n                                    }}\r\n                                </div>\r\n                                <div class=\"flex1\">\r\n                                    <div class=\"ms-input ms-editor w-100\"></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"flex1 mr-10\">\r\n                                <div class=\"form-group-label d-flex label-form\">\r\n                                    Dòng tiêu đề\r\n                                    <span class=\"required\">*</span>\r\n                                </div>\r\n                                <div class=\"flex1\">\r\n                                    <InputNumber v-model=\"exambank.RowReference\" ref=\"RowReference\" showButtons :min=\"1\"\r\n                                                 :max=\"100\"/>\r\n                                </div>\r\n                                <div class=\"error-text\" v-if=\"invalidExamBank.RowReference\">{{\r\n                                        invalidExamBank.RowReference\r\n                                    }}\r\n                                </div>\r\n                                <div class=\"flex1\">\r\n                                    <div class=\"ms-input ms-editor w-100\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"popup-footer\">\r\n                    <div class=\"flex-row\">\r\n                        <div class=\"flex1\"></div>\r\n                        <div class=\"flex-rtl\">\r\n                            <div class=\"tooltip-top\">\r\n                                <button class=\"ms-button btn primary has-tooltip btn-tooltip-save\" @click=\"btnSave\">\r\n                                    <div class=\"text\">Lưu</div>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"tooltip-top\">\r\n                                <button class=\"ms-button btn mr-2 secondary btn-tooltip-close\"\r\n                                        @click=\"toggleModal($FormMode.Insert)\">\r\n                                    <div class=\"text\">Hủy</div>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Dialog v-model:visible=\"dialogVisible\" modal header=\"Thông báo\" :style=\"{ width: '40vw' }\"\r\n                closeIcon=\"close-button\">\r\n            <p>\r\n                {{ contentDialog }}\r\n            </p>\r\n            <template #footer>\r\n                <Button label=\"Đóng\" class=\"ms-button text-white btn w-100 danger\" @click=\"dialogVisible = false\"/>\r\n            </template>\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport InputNumber from 'primevue/inputnumber';\r\nimport {insertExamBank, updateExamBank} from '/api/exam-bank'\r\nimport Dropdown from 'primevue/dropdown';\r\nimport Button from 'primevue/button';\r\nimport Resumable from 'resumablejs';\r\nimport * as XLSX from 'xlsx';\r\nimport {mapState, mapActions} from 'vuex'\r\nimport Dialog from 'primevue/dialog';\r\n\r\nexport default {\r\n    emits: [\"setData\", \"loadExamBank\", \"showModal\"],\r\n    props: {\r\n        FileData: {\r\n            default: null\r\n        },\r\n        url: {\r\n            type: String,\r\n            default: '/exam'\r\n        },\r\n        selectedData: {\r\n            default: {},\r\n        },\r\n    },\r\n    components: {\r\n        Dropdown,\r\n        InputNumber,\r\n        Dialog,\r\n        Button,\r\n    },\r\n    data() {\r\n        return {\r\n            exambank: {\r\n                id: null,\r\n                ExamBankCode: null,\r\n                ExamBankName: null,\r\n                SheetIndexReference: null,\r\n                DataReference: null,\r\n                RowReference: null,\r\n                ResourceFile: null,\r\n                ResourcePath: null,\r\n            },\r\n\r\n            resumable: null,\r\n\r\n            //dialog\r\n            dialogVisible: false,\r\n            contentDialog: null,\r\n            url: null,\r\n\r\n            sheetOptions: [],\r\n            selectedSheet: {},\r\n            File: {\r\n                FileName: null,\r\n                FileSize: null,\r\n                Success: true,\r\n                SheetCount: 1,\r\n            },\r\n            FileName: null,\r\n\r\n            selectedFile: null,\r\n\r\n            invalidExamBank: {\r\n                ExamBankCode: null,\r\n                ExamBankName: null,\r\n                SheetIndexReference: null,\r\n                RowReference: null,\r\n                FileData: null\r\n            },\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions('popup', ['toggleModal']),\r\n        ...mapActions('exambank', ['getExamBank']),\r\n        async btnSave() {\r\n            if (this.validateExamBank()) {\r\n                // let formData = new FormData();\r\n                // formData.append('id', this.exambank.id);\r\n                // formData.append('ExamBankCode', this.exambank.ExamBankCode);\r\n                // formData.append('ExamBankName', this.exambank.ExamBankName);\r\n                // formData.append('SheetIndexReference', JSON.stringify([this.sheetOptions, this.exambank.SheetIndexReference, this.File.SheetCount]));\r\n                // formData.append('RowReference', this.exambank.RowReference);\r\n                // formData.append('FileData', this.selectedFile);\r\n                // formData.append('FileInfo', this.File.FileSize);\r\n                // formData.append('DataReference', this.exambank.DataReference);\r\n                // formData.append('ResourceFile', this.exambank.ResourceFile);\r\n                // formData.append('ResourcePath', this.exambank.ResourcePath);\r\n                var me = this;\r\n                switch (this.modeModal) {\r\n                    case this.$FormMode.Insert:\r\n                        // formData.append('_method', 'POST');\r\n                        // //thêm mới\r\n                        // await insertExamBank(formData).then(res => {\r\n                        //     me.$emit(\"showModal\");\r\n                        //     me.$emit(\"loadExamBank\");\r\n                        // }).catch(error => {\r\n                        //     console.log(error);\r\n                        // });\r\n\r\n                        this.callApi = true;\r\n                        this.resumable.opts.query.param = JSON.stringify(this.exambank);\r\n                        this.resumable.opts.query.FileInfo = this.File.FileSize;\r\n                        // this.resumable.addFile(this.selectedFile);\r\n                        this.resumable.opts.target = 'exambank';\r\n                        this.resumable.addFile(this.selectedFile);\r\n                        break;\r\n                    case this.$FormMode.Update:\r\n                        formData.append('_method', 'PUT');\r\n                        //thêm mới\r\n                        await updateExamBank(formData).then(res => {\r\n                            me.toggleModal();\r\n                        }).catch(error => {\r\n                            console.log(error);\r\n                        });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                //load lại dữ liệu\r\n                this.$emit(\"loadExamBank\");\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Khởi tạo Resumable upload file\r\n         */\r\n        createResumable() {\r\n            this.resumable = new Resumable({\r\n                target: this.url,\r\n                method: 'POST',\r\n                query: {\r\n                    _token: document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content'), // Thêm CSRF token để tránh lỗi 419\r\n                },\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Disposition': 'form-data; name=\"title\"',\r\n                },\r\n                testChunks: false,\r\n                throttleProgressCallbacks: 1,\r\n                simultaneousUploads: 4,\r\n            });\r\n            this.resumable.on('fileAdded', this.onFileAdded);\r\n            this.resumable.on('fileProgress', this.onFileProgress);\r\n            this.resumable.on('fileSuccess', this.onFileSuccess);\r\n            this.resumable.on('fileError', this.onFileError);\r\n\r\n        },\r\n\r\n        /**\r\n         * Thêm file\r\n         * @param {*} file\r\n         */\r\n        onFileAdded(file) {\r\n            this.resumable.upload();\r\n        },\r\n\r\n\r\n        /**\r\n         * Tiến trình tải\r\n         * @param {*} file\r\n         */\r\n        onFileProgress(file) {\r\n        },\r\n\r\n        /**\r\n         * Upload thành công\r\n         * @param {*} file\r\n         * @param {*} response\r\n         */\r\n        onFileSuccess(file, response) {\r\n\r\n        },\r\n\r\n        /**\r\n         * Upload thất bại\r\n         * @param {*} file\r\n         * @param {*} message\r\n         */\r\n        onFileError(file, message) {\r\n            message = JSON.parse(message);\r\n            if (message.errorCode == 422) {\r\n                for (var error in message.errors) {\r\n                    this.invalidExamBank[error] = message.errors[error][0];\r\n                }\r\n            } else {\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Call api thành công\r\n         * @param {*} value\r\n         */\r\n        setCallApiSuccess(value) {\r\n            this.callApiSuccess = value;\r\n        },\r\n\r\n        /**\r\n         * Sự kiện thay đổi file\r\n         * @param {*} ref ref input\r\n         *\r\n         */\r\n        onFileChange(ref) {\r\n            if (this.$refs[ref].files[0].type === \"application/vnd.ms-excel\" || this.$refs[ref].files[0].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\r\n                this.selectedFile = this.$refs[ref].files[0];\r\n                this.sheetOptions = [];\r\n                var _size = this.selectedFile.size;\r\n                var fSExt = new Array('Bytes', 'KB', 'MB', 'GB'),\r\n                    i = 0;\r\n                while (_size > 900) {\r\n                    _size /= 1024;\r\n                    i++;\r\n                }\r\n                this.File.FileSize = (Math.round(_size * 100) / 100) + ' ' + fSExt[i];\r\n                this.File.FileName = this.selectedFile.name;\r\n                //kiểm tra dung lượng file\r\n                if (this.$refs[ref].files[0].size > 30 * 1024 * 1024) {\r\n                    this.File.Success = false;\r\n                    this.sheetOptions = [];\r\n                    this.exambank.RowReference = null;\r\n                } else {\r\n                    this.File.Success = true;\r\n                    //đọc file upload lấy ra danh sách tên các sheet\r\n                    const reader = new FileReader();\r\n                    reader.onload = (e) => {\r\n                        /* Parse data */\r\n                        const bstr = e.target.result;\r\n                        const workbook = XLSX.read(bstr, {type: 'binary'});\r\n                        //gán sheet mặc định là sheet đầu tiên\r\n                        this.nameSheet = workbook.SheetNames[0];\r\n                        //duyệt các sheet\r\n                        for (let index = 0; index < workbook.SheetNames.length; index++) {\r\n                            this.sheetOptions.push({\r\n                                sheetIndex: index,\r\n                                sheetName: workbook.SheetNames[index]\r\n                            });\r\n                        }\r\n                        this.File.SheetCount = workbook.SheetNames.length;\r\n                        this.selectedSheet = this.sheetOptions[0];\r\n                    }\r\n                    this.exambank.RowReference = 1;\r\n                    reader.readAsBinaryString(this.selectedFile);\r\n                }\r\n            } else {\r\n                this.contentDialog = ' File tư liệu chỉ hỗ trợ định dạng *.xlsx';\r\n                this.dialogVisible = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         *  Validate dữ liệu\r\n         *  @return bool\r\n         */\r\n        validateExamBank() {\r\n            var invalid = true;\r\n            if (this.exambank.ExamBankCode == null || this.exambank.ExamBankCode == '') {\r\n                invalid = false;\r\n                this.invalidExamBank.ExamBankCode = 'Mã đề thi không được để trống';\r\n            } else {\r\n                this.invalidExamBank.ExamBankCode = null;\r\n            }\r\n            if (this.exambank.ExamBankName == null || this.exambank.ExamBankName == '') {\r\n                invalid = false;\r\n                this.invalidExamBank.ExamBankName = 'Tên đề thi không được để trống';\r\n            } else {\r\n                this.invalidExamBank.ExamBankName = null;\r\n            }\r\n            if (this.exambank.RowReference == null || this.exambank.RowReference == '') {\r\n                invalid = false;\r\n                this.invalidExamBank.RowReference = 'Dòng tiêu đề không được để trống';\r\n            } else {\r\n                this.invalidExamBank.RowReference = null;\r\n            }\r\n            if (this.exambank.SheetIndexReference == null) {\r\n                invalid = false;\r\n                this.invalidExamBank.SheetIndexReference = 'Sheet tư liệu không được để trống';\r\n            } else {\r\n                this.invalidExamBank.SheetIndexReference = null;\r\n            }\r\n            if (!this.File.Success) {\r\n                invalid = false;\r\n            }\r\n            return invalid;\r\n        }\r\n    },\r\n    created() {\r\n        if (this.modeModal == this.$FormMode.Update) {\r\n            this.exambank = {...this.selectedData};\r\n            var SheetIndexReference = JSON.parse(this.exambank.SheetIndexReference);\r\n            this.exambank.SheetIndexReference = SheetIndexReference[1];\r\n            this.sheetOptions = SheetIndexReference[0];\r\n            this.File.FileSize = this.selectedData.FileInfo;\r\n            this.File.FileName = this.selectedData.ResourceFile;\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.createResumable();\r\n    },\r\n    computed: {\r\n        ...mapState('popup', ['isShowModal']),\r\n        ...mapState('popup', ['modeModal']),\r\n        ...mapState('exambank', ['examBankData']),\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.full-screen,\r\n.ms-popup-main {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 12;\r\n}\r\n\r\n.ams-popup {\r\n    animation-duration: 3s;\r\n    animation-name: slidein;\r\n}\r\n\r\n.popup-modal {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #000;\r\n    -moz-opacity: .25;\r\n    opacity: .25;\r\n}\r\n\r\n.vdr {\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.vdr,\r\n.vdr.active:before {\r\n    position: absolute;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.ms-popup {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 16px rgba(23, 27, 42, .24);\r\n    overflow: auto;\r\n    border-radius: 4px;\r\n    position: relative;\r\n}\r\n\r\n.buttons {\r\n    position: absolute;\r\n    top: 14px;\r\n    right: 16px;\r\n}\r\n\r\n.buttons .button {\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    padding: 10px 8px;\r\n}\r\n\r\n.buttons .button:before {\r\n    content: \"\";\r\n    display: block;\r\n    background: transparent url('@public/assets/images/Sprites.64af8f61.svg') no-repeat;\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\n.buttons .button.close:before {\r\n    background-position: -242px -26px;\r\n}\r\n\r\n.button:before {\r\n    content: \"\";\r\n    display: block;\r\n    background: transparent url('@public/assets/images/Sprites.64af8f61.svg') no-repeat;\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\n.button.close:before {\r\n    background-position: -242px -26px;\r\n}\r\n\r\n.buttons .button.close:hover:before {\r\n    background-position: -266px -26px;\r\n}\r\n\r\n.popup-header {\r\n    font-size: 20px;\r\n    padding: 24px 0 6px 24px;\r\n    font-weight: 700;\r\n    min-height: 24px;\r\n}\r\n\r\n.popup-content {\r\n    padding: 24px 24px 0;\r\n    position: relative;\r\n}\r\n\r\n.popup-footer {\r\n    padding: 12px 24px;\r\n    border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n.flex-rtl {\r\n    display: flex;\r\n    flex-direction: rtl;\r\n    direction: rtl;\r\n    justify-content: flex-end;\r\n}\r\n\r\nbutton.btn {\r\n    padding: 0;\r\n    outline: none;\r\n}\r\n\r\n\r\n.btn.has-tooltip + .v-tooltip-save,\r\n.v-tooltip-close {\r\n    display: none;\r\n}\r\n\r\n.btn-tooltip-save:hover + .v-tooltip-save {\r\n    display: block;\r\n}\r\n\r\n.btn-tooltip-close:hover + .v-tooltip-close {\r\n    display: block;\r\n}\r\n\r\n.button.close:hover + .tooltip.vue-tooltip-theme {\r\n    display: block;\r\n}\r\n\r\n.tooltip-top {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.tooltip-top .tooltip.vue-tooltip-theme {\r\n    position: absolute;\r\n    top: -100%;\r\n}\r\n\r\n.form-group:not(.top) {\r\n    margin-bottom: 16px;\r\n}\r\n\r\n.label-form {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.form-group .detail-label,\r\n.form-group label {\r\n    padding: 8px 8px 0 0;\r\n    color: #666;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n}\r\n\r\n\r\n.content-step .upload-container {\r\n    height: 100%;\r\n    border: 1px dashed #ddd;\r\n    border-radius: 4px;\r\n    height: 250px;\r\n    cursor: pointer;\r\n}\r\n\r\n.content-step .upload-container .no-file {\r\n    width: 334px;\r\n    height: 110px;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.file-note {\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n    line-height: 20px;\r\n    font-size: 13px;\r\n    color: #BDBDBD;\r\n}\r\n\r\n.content-step .upload-container .no-file {\r\n    background: url('@public/assets/icons/add_attachment.c604b695.svg') no-repeat;\r\n    width: 334px;\r\n    height: 110px;\r\n}\r\n\r\n.file-info {\r\n    width: 100%;\r\n    height: 48px;\r\n    align-items: center;\r\n    padding: 0 16px;\r\n    border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.import-attachment-container {\r\n    border-radius: 4px;\r\n    border: 1px solid #ddd;\r\n    height: 260px;\r\n    margin-bottom: 16px;\r\n    color: #333;\r\n    cursor: pointer;\r\n}\r\n\r\n.file-info {\r\n    width: 100%;\r\n    height: 48px;\r\n    align-items: center;\r\n    padding: 0 16px;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.file-info .file-icon {\r\n    width: 50px;\r\n    height: 16px;\r\n    background: transparent url('@public/assets/icons/ic_file_gray.84c03213.svg') no-repeat -2px 0;\r\n    margin-right: 8px;\r\n}\r\n\r\n.file-info .file-name,\r\n.file-info .file-size {\r\n    text-overflow: ellipsis;\r\n    padding-right: 16px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n}\r\n\r\n.file-info .file-size {\r\n    width: 95px;\r\n}\r\n\r\n.file-info .file-name,\r\n.file-info .file-size {\r\n    text-overflow: ellipsis;\r\n    padding-right: 16px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n}\r\n\r\n.file-info .icon-unsuccess {\r\n    width: 16px;\r\n    height: 16px;\r\n    background: transparent url('@public/assets/icons/ic_warning_red.68e15434.svg') no-repeat;\r\n    margin-right: 8px;\r\n}\r\n\r\n.file-error {\r\n    padding: 16px;\r\n}\r\n\r\n.red-text {\r\n    color: #ef5350;\r\n}\r\n\r\n.file-info .file-accepted {\r\n    padding-right: 16px;\r\n    white-space: nowrap;\r\n}\r\n\r\n.file-info .icon-success {\r\n    width: 16px;\r\n    height: 16px;\r\n    background: transparent url('@public/assets/icons/ic_check_green.d1ac113b.svg') no-repeat;\r\n    margin-right: 8px;\r\n}\r\n\r\n.file-info .change-file {\r\n    width: 100px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n}\r\n\r\n.file-caution {\r\n    width: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: calc(100% - 48px);\r\n}\r\n\r\n.file-caution .p-progressbar {\r\n    position: absolute !important;\r\n    top: 0;\r\n    height: 8px;\r\n    width: 100%;\r\n    border-radius: 0 !important;\r\n}\r\n\r\n.file-caution-img {\r\n    width: 100%;\r\n    height: calc(100% - 74px);\r\n    padding-top: 20px;\r\n    background: url('@public/assets/icons/img_import.7804e3d3.svg') no-repeat 50%;\r\n}\r\n\r\n.file-caution-center {\r\n    color: #212121;\r\n    text-align: center;\r\n    padding-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}