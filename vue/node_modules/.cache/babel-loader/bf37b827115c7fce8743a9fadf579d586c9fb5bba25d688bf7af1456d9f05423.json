{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Toast from 'primevue/toast';\nimport Skeleton from 'primevue/skeleton';\nimport Dropdown from 'primevue/dropdown';\nimport TabView from 'primevue/tabview';\nimport TabPanel from 'primevue/tabpanel';\nimport Button from 'primevue/button';\nimport InputNumber from 'primevue/inputnumber';\nimport Panel from 'primevue/panel';\nimport SplitterPanel from 'primevue/splitterpanel';\nimport InputText from 'primevue/inputtext';\nimport Dialog from 'primevue/dialog';\nimport DataTable from 'primevue/datatable';\nimport Column from 'primevue/column';\nimport { mapState, mapActions } from 'vuex';\nimport { configureExam, saveCriteria, getCriteriaByExamBankId, deleteCriteria } from '/api/exam-bank';\nimport TheLoadingProgress from '@/components/LoadingProgress.vue';\nimport { MESSAGE, RESPONSE_STATUS } from \"@/common/enums\";\nimport MultiSelect from 'primevue/multiselect';\nexport default {\n  components: {\n    TabView,\n    TabPanel,\n    Dropdown,\n    Panel,\n    Toast,\n    Skeleton,\n    SplitterPanel,\n    InputText,\n    InputNumber,\n    Button,\n    Dialog,\n    DataTable,\n    Column,\n    MultiSelect,\n    TheLoadingProgress\n  },\n  data() {\n    return {\n      optionSheet: [],\n      Font: null,\n      totalScore: 0,\n      isLoading: false,\n      visible: true,\n      popupLoading: false,\n      tabViewIndex: 0,\n      isPopupDelete: false,\n      deletedItem: null,\n      selectedData: null,\n      Text: {\n        SheetIndex: null,\n        Range: null,\n        content: null,\n        point: null\n      },\n      inserts: {\n        properties: {\n          IMAGE: {\n            properties: {\n              HIGH_IMAGE: {\n                content: null,\n                point: null,\n                propertyName: 'Image High'\n              },\n              WIDTH_IMAGE: {\n                content: null,\n                point: null,\n                propertyName: 'Image Width'\n              }\n            },\n            content: null,\n            point: null,\n            propertyName: 'Image'\n          },\n          FOOTNOTE: {\n            properties: {\n              INSERT_FOOTNOTE: {\n                content: null,\n                point: null,\n                propertyName: 'Insert footnote'\n              },\n              FOOTNOTE_CONTENT: {\n                content: null,\n                point: null,\n                propertyName: 'Footnote content'\n              },\n              FOOTNOTE_TYPE: {\n                content: null,\n                point: null,\n                propertyName: 'Footnote type'\n              }\n            },\n            content: null,\n            point: null,\n            propertyName: 'Foot note'\n          },\n          FOOTER_TYPE_ALL: {\n            content: null,\n            point: null,\n            propertyName: 'Footer type'\n          },\n          FOOTER_ALL: {\n            content: null,\n            point: null,\n            propertyName: 'Footer content'\n          }\n        },\n        content: null,\n        point: null\n      },\n      formats: {\n        SheetIndex: null,\n        Range: null,\n        properties: {\n          MODIFY_STYLE: {\n            properties: {\n              FONT: {\n                content: null,\n                point: null,\n                propertyName: 'Font'\n              },\n              FONT_SIZE: {\n                content: null,\n                point: null,\n                propertyName: 'Font size'\n              },\n              FONT_STYLE: {\n                content: null,\n                point: null,\n                propertyName: 'Font style'\n              },\n              FONT_COLOR: {\n                content: null,\n                point: null,\n                propertyName: 'Font color'\n              },\n              LINE_SPACING: {\n                content: null,\n                point: null,\n                propertyName: 'Line spacing'\n              },\n              SPACING_BEFORE: {\n                content: null,\n                point: null,\n                propertyName: 'Spacing before'\n              },\n              SPACING_AFTER: {\n                content: null,\n                point: null,\n                propertyName: 'Spacing after'\n              },\n              ALIGNMENT: {\n                content: null,\n                point: null,\n                propertyName: 'Alignment'\n              },\n              ALL_CAPS: {\n                content: null,\n                point: null,\n                propertyName: 'All caps'\n              },\n              INDENTATION_LEFT: {\n                content: null,\n                point: null,\n                propertyName: 'Indentation left'\n              },\n              SPECIAL_HANGING: {\n                content: null,\n                point: null,\n                propertyName: 'Special hanging'\n              },\n              NUMBERING: {\n                content: null,\n                point: null,\n                propertyName: 'Numbering type'\n              }\n            },\n            required: true,\n            content: null,\n            point: null,\n            propertyName: 'Modify Style'\n          },\n          APPLY_STYLE: {\n            content: null,\n            point: null,\n            propertyName: 'Apply Style',\n            property: {\n              key: null,\n              content: null,\n              value: null\n            }\n          }\n        }\n      },\n      generals: {\n        properties: {\n          FILE_NAME: {\n            content: null,\n            point: null,\n            type: 'Text',\n            value: null,\n            propertyName: 'File Name'\n          },\n          pageOrientation: {\n            content: null,\n            point: null,\n            type: 'Option',\n            propertyName: 'Page Orientation'\n          },\n          PAGE_SIZE: {\n            content: null,\n            point: null,\n            type: 'Option',\n            propertyName: 'Page Size'\n          },\n          MARGIN_TOP_ALL: {\n            content: null,\n            point: null,\n            type: 'Option',\n            propertyName: 'Margin top all'\n          },\n          MARGIN_LEFT_ALL: {\n            content: null,\n            point: null,\n            type: 'Option',\n            propertyName: 'Margin left all'\n          },\n          MARGIN_RIGHT_ALL: {\n            content: null,\n            point: null,\n            type: 'Option',\n            propertyName: 'Margin right all'\n          },\n          MARGIN_BOTTOM_ALL: {\n            content: null,\n            point: null,\n            type: 'Option',\n            propertyName: 'Margin bottom all'\n          },\n          AUTHOR: {\n            content: null,\n            point: null,\n            type: 'Text',\n            value: null,\n            propertyName: 'Author'\n          },\n          TITLE: {\n            content: null,\n            point: null,\n            type: 'Text',\n            value: null,\n            propertyName: 'Title'\n          }\n        }\n      },\n      //popup thông tin đã thiết lập\n      isShowConfigureExam: false,\n      TypeProperty: [],\n      //dữ liệu thiết lập đề: enum,sheetIndex\n      configureExamData: [],\n      listCriteria: [],\n      listCriteriaExam: [],\n      examBankId: null,\n      isLoadingSaveCritera: false,\n      invalidData: []\n    };\n  },\n  methods: {\n    /**\r\n     * Lấy dữ liệu tiêu chí theo id đề thi\r\n     */\n    loadCriteriaByExamId() {\n      this.isLoading = true;\n      getCriteriaByExamBankId(this.selectedData).then(res => {\n        this.listCriteriaExam = res.data;\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        setTimeout(() => {\n          5;\n          this.isLoading = false;\n        }, 300);\n      });\n    },\n    /**\r\n     * Nếu văn bản quá dài nối đoạn đầu và đoạn cuối bằng dấu ...\r\n     * Ví dụ: Nếu văn bản quá dài nối đoạn đầu và đoạn cuối bằng dấu ... => Nếu văn bản ... cuối bằng dấu\r\n     * @param paragraphs\r\n     * @returns {(string|string)[]}\r\n     */\n    textWithEllipsis(paragraphs) {\n      const formattedText = [];\n      // Lặp qua mỗi đoạn văn bản trong mảng paragraphs\n      for (let index in paragraphs) {\n        if (paragraphs[index].length > 30) {\n          // Tách thành từng từ\n          const words = paragraphs[index].split(\" \");\n          // Lấy 5 từ đầu\n          const firstFiveWords = words.slice(0, 5).join(\" \");\n          // Lấy 4 từ cuối\n          const lastFourWords = words.slice(-4).join(\" \");\n          // Nối 5 từ đầu và 4 từ cuối với nhau bằng dấu \"...\"\n          const result = firstFiveWords + \" ...\" + lastFourWords;\n          // Trả về mảng các đoạn văn bản với đoạn cuối đã được thêm dấu \"...\"\n          formattedText.push(result);\n        } else {\n          formattedText.push(paragraphs[index]);\n        }\n      }\n      return formattedText;\n    },\n    /**\r\n     *  Click xem trước\r\n     */\n    previewExam() {\n      this.isShowConfigureExam = !this.isShowConfigureExam;\n      this.loadCriteriaByExamId();\n    },\n    /**\r\n     * Click nút xóa tiêu chí\r\n     * @param {C} data\r\n     */\n    deleteRowSelect(data) {\n      this.deletedItem = data;\n      this.isPopupDelete = !this.isPopupDelete;\n    },\n    /**\r\n     * Chấp nhận xóa tiêu chí\r\n     */\n    handleDeleteCriteria() {\n      this.popupLoading = true;\n      deleteCriteria(this.deletedItem).then(res => {\n        this.isLoading = true;\n        this.showToast('Xóa tiêu chí thành công');\n        this.listCriteria.splice(this.listCriteria.findIndex(record => record.CriteriaId === this.deletedItem.CriteriaId), 1);\n        console.log(res);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        setTimeout(() => {\n          this.popupLoading = false;\n          this.isPopupDelete = false;\n          this.isLoading = false;\n        }, 750);\n      });\n    },\n    onRowSelect(data) {\n      this.isShowConfigureExam = false;\n      const el = document.getElementById('scrollToFormatSheet');\n      el.scrollIntoView({\n        behavior: 'smooth'\n      });\n    },\n    /**\r\n     * Scroll tới vị trí id\r\n     * @param {*} id\r\n     */\n    scrollViewToId(id) {\n      const el = document.getElementById(id);\n      el.scrollIntoView({\n        behavior: 'smooth'\n      });\n    },\n    /**\r\n     * Xoá các value của apply style\r\n     */\n    changeApplyStyle() {\n      this.formats.properties.APPLY_STYLE.property.key = this.formats.properties.APPLY_STYLE.property.content = this.formats.properties.APPLY_STYLE.property.value = null;\n    },\n    /**\r\n     * Lưu tiêu chí\r\n     */\n    saveCriteriaSettings() {\n      this.invalidData = [];\n      this.listCriteria = [];\n      let validData = true;\n      let data = [];\n      //đang ở tab format\n      if (this.tabViewIndex === 0) {\n        for (let property in this.formats.properties) {\n          let isHasChilds = false; // có nhiều thuộc tính con\n          let isHasChild = false; // có 1 thuộc tính con\n          let dataChild = [];\n          let content = this.formats.properties[property].content;\n          let point = this.formats.properties[property].point;\n          let propertyType = this.TypeProperty[property];\n          let propertyName = this.formats.properties[property].propertyName;\n          let priority = 0;\n          let required = this.formats.properties[property].required;\n          for (let child in this.formats.properties[property]?.properties) {\n            let invalidProperty = true;\n            isHasChilds = true;\n            let contentChild = this.formats.properties[property].properties[child].content;\n            let pointChild = this.formats.properties[property].properties[child].point;\n            let keyChild = `${property}-${child}`;\n            if (required && content === null) {\n              continue;\n            }\n            if (contentChild != null || pointChild != null) {\n              if (contentChild == null) {\n                this.invalidData[`c-${keyChild}`] = MESSAGE.INVALID_CONTENT_SETUP;\n                invalidProperty = false;\n                validData = false;\n              }\n              if (pointChild == null) {\n                this.invalidData[`p-${keyChild}`] = MESSAGE.INVALID_POINT_SETUP;\n                invalidProperty = false;\n                validData = false;\n              }\n            }\n            if (invalidProperty && contentChild != null && pointChild != null) {\n              point += pointChild;\n              dataChild.push({\n                'key': this.TypeProperty[child],\n                'value': contentChild,\n                'point': pointChild\n              });\n            }\n          }\n          for (let child in this.formats.properties[property]?.property) {\n            isHasChild = true;\n            let invalidProperty = true;\n            let contentChild = this.formats.properties[property].property.content ?? [];\n            let point = this.formats.properties[property].point;\n            let keyChild = `${property}-${child}`;\n            let key = null;\n            if (propertyType === this.TypeProperty['APPLY_STYLE']) {\n              key = this.formats.properties[property].property.key;\n              if (content != null || point != null || key != null) {\n                if (content == null) {\n                  this.invalidData[`c-${property}`] = MESSAGE.INVALID_CONTENT_SETUP;\n                  invalidProperty = false;\n                  validData = false;\n                }\n                if (point == null) {\n                  this.invalidData[`p-${property}`] = MESSAGE.INVALID_POINT_SETUP;\n                  invalidProperty = false;\n                  validData = false;\n                }\n                if (key == null) {\n                  this.invalidData[`k-${property}`] = MESSAGE.INVALID_CONTENT_SETUP;\n                  invalidProperty = false;\n                  validData = false;\n                }\n              }\n              switch (content) {\n                case this.configureExamData.applyStyleEnum['PARAGRAPH'].value:\n                  priority = 10;\n                  if (contentChild === null) {\n                    this.invalidData[`c-${keyChild}`] = MESSAGE.INVALID_CONTENT_SETUP;\n                    invalidProperty = false;\n                    validData = false;\n                  } else {\n                    let selectedValue = contentChild;\n                    contentChild = [];\n                    for (let index in selectedValue) {\n                      contentChild.push(this.configureExamData.paragraphs[index]);\n                    }\n                    contentChild = contentChild.join(this.configureExamData.separator);\n                  }\n                  break;\n                case this.configureExamData.applyStyleEnum['OTHER'].value:\n                  priority = 10;\n                  let valueChild = this.formats.properties[property].property.value;\n                  if (valueChild === null) {\n                    this.invalidData[`c-${keyChild}`] = MESSAGE.INVALID_CONTENT_SETUP;\n                    invalidProperty = false;\n                    validData = false;\n                  }\n                  contentChild = valueChild;\n                  break;\n                case this.configureExamData.applyStyleEnum['ALL'].value:\n                  propertyType = this.TypeProperty['APPLY_STYLE_ALL'];\n                  propertyName = 'Apply Style All';\n                  break;\n              }\n            }\n            if (invalidProperty && content != null && point != null) {\n              dataChild = {\n                'key': key,\n                'value': contentChild\n              };\n            }\n          }\n          // có các thuộc tính con\n          if (isHasChilds) {\n            if (content != null && dataChild.length > 0) {\n              content = JSON.stringify({\n                'key': content,\n                'value': dataChild\n              });\n            } else if (content != null && dataChild.length === 0) {\n              validData = false;\n              this.invalidData[`c-${property}`] = MESSAGE.INVALID_CONTENT_CHILD_SETUP;\n            }\n          }\n          // có 1 thuộc tính con\n          else if (isHasChild) {\n            if (content != null && dataChild != null) {\n              content = JSON.stringify(dataChild);\n            }\n          }\n\n          // dữ liệu hợp lệ\n          if (validData && content != null && point != null) {\n            data.push({\n              exam_bank_id: this.examBankId,\n              content: content,\n              page: 0,\n              paragraph: null,\n              property_name: propertyName,\n              property_type: propertyType,\n              point: point,\n              priority: priority\n            });\n          }\n        }\n      } else if (this.tabViewIndex === 1) {\n        for (let property in this.inserts.properties) {\n          let content = this.inserts.properties[property].content;\n          let point = this.inserts.properties[property].point;\n          let invalidProperty = true;\n          let isHasChilds = false;\n          let dataChild = [];\n          if (content != null || point != null) {\n            if (content == null) {\n              this.invalidData[`c-${property}`] = this.MESSAGE.INVALID_CONTENT_SETUP;\n              invalidProperty = false;\n              validData = false;\n            }\n            if (point == null) {\n              this.invalidData[`p-${property}`] = this.MESSAGE.INVALID_POINT_SETUP;\n              invalidProperty = false;\n              validData = false;\n            }\n          }\n          for (let child in this.inserts.properties[property]?.properties) {\n            isHasChilds = true;\n            let keyChild = this.TypeProperty[child];\n            let contentChild = this.inserts.properties[property].properties[child].content;\n            let pointChild = this.inserts.properties[property].properties[child].point;\n            if (contentChild != null || pointChild != null) {\n              if (content == null) {\n                this.invalidData[`c-${property}`] = this.MESSAGE.INVALID_CONTENT_SETUP;\n                invalidProperty = false;\n                validData = false;\n              }\n              if (point == null) {\n                this.invalidData[`p-${property}`] = this.MESSAGE.INVALID_POINT_SETUP;\n                invalidProperty = false;\n                validData = false;\n              }\n              if (contentChild == null) {\n                this.invalidData[`c-${property}-${child}`] = this.MESSAGE.INVALID_CONTENT_SETUP;\n                invalidProperty = false;\n                validData = false;\n              }\n              if (pointChild == null) {\n                this.invalidData[`p-${property}-${child}`] = this.MESSAGE.INVALID_POINT_SETUP;\n                invalidProperty = false;\n                validData = false;\n              }\n            }\n            if (invalidProperty && contentChild != null && pointChild != null && content != null && point != null) {\n              point += pointChild;\n              if (keyChild === this.TypeProperty['FOOTNOTE_CONTENT']) {\n                const selectedIndex = this.configureExamData.paragraphsEllipsis.findIndex(option => option === contentChild);\n                contentChild = this.configureExamData.paragraphs[selectedIndex];\n              }\n              dataChild.push({\n                'key': keyChild,\n                'value': contentChild,\n                'point': pointChild\n              });\n            }\n          }\n          if (isHasChilds) {\n            if (content != null && point != null) {\n              if (this.TypeProperty[property] === this.TypeProperty['IMAGE']) {\n                dataChild.push({\n                  'key': this.TypeProperty['NAME_IMAGE'],\n                  'value': content,\n                  'point': this.inserts.properties[property].point\n                });\n              } else if (this.TypeProperty[property] === this.TypeProperty['FOOTNOTE']) {\n                dataChild.push({\n                  'key': this.TypeProperty['INSERT_FOOTNOTE'],\n                  'value': content,\n                  'point': this.inserts.properties[property].point\n                });\n              }\n              content = JSON.stringify({\n                'key': content,\n                'value': dataChild\n              });\n            }\n          }\n\n          // dữ liệu hợp lệ\n          if (validData && content != null && point != null) {\n            data.push({\n              exam_bank_id: this.examBankId,\n              content: content,\n              page: 0,\n              paragraph: null,\n              property_name: this.inserts.properties[property].propertyName,\n              property_type: this.TypeProperty[property],\n              point: point,\n              priority: 0\n            });\n          }\n        }\n      } else if (this.tabViewIndex === 2) {\n        for (let property in this.generals.properties) {\n          let invalidProperty = true;\n          let content = this.generals.properties[property].content;\n          if (this.generals.properties[property].content != null || this.generals.properties[property].point != null) {\n            if (this.generals.properties[property].content == null || this.generals.properties[property].type === 'Text' && this.generals.properties[property].content === '') {\n              this.invalidData[`c-${property}`] = this.MESSAGE.INVALID_CONTENT_SETUP;\n              invalidProperty = false;\n              validData = false;\n            }\n            if (this.generals.properties[property].point == null) {\n              this.invalidData[`p-${property}`] = this.MESSAGE.INVALID_POINT_SETUP;\n              invalidProperty = false;\n              validData = false;\n            }\n            if (this.generals.properties[property].content === this.configureExamData.infoTypeEnums['OTHER'].value && this.generals.properties[property]?.value !== undefined && this.generals.properties[property]?.value === null) {\n              this.invalidData[`v-${property}`] = this.MESSAGE.INVALID_CONTENT_SETUP;\n              invalidProperty = false;\n              validData = false;\n            }\n          }\n          if (invalidProperty && this.generals.properties[property].content != null && this.generals.properties[property].point != null) {\n            if (this.generals.properties[property]?.value !== undefined) {\n              content = JSON.stringify({\n                'key': this.generals.properties[property].content,\n                'value': this.generals.properties[property].value\n              });\n            }\n            //add vào danh sách tiêu chí\n            data.push({\n              exam_bank_id: this.examBankId,\n              content: content,\n              page: 0,\n              paragraph: null,\n              property_name: this.generals.properties[property].propertyName,\n              property_type: this.TypeProperty[property],\n              point: this.generals.properties[property].point,\n              priority: 0\n            });\n          }\n        }\n      }\n\n      // ko có tiêu chí lỗi\n      if (validData) {\n        this.listCriteria = data;\n        //clear giá trị\n        for (let property in this.generals.properties) {\n          this.generals.properties[property].content = this.generals.properties[property].point = this.generals.properties[property].value = null;\n        }\n        for (let property in this.formats.properties) {\n          this.formats.properties[property].content = this.formats.properties[property].point = null;\n          for (let child in this.formats.properties[property]?.properties) {\n            this.formats.properties[property].properties[child].content = this.formats.properties[property].properties[child].point = null;\n          }\n          for (let child in this.formats.properties[property]?.property) {\n            this.formats.properties[property].property.content = this.formats.properties[property].property.point = this.formats.properties[property].property.key = null;\n          }\n        }\n        for (let property in this.inserts.properties) {\n          this.inserts.properties[property].content = this.inserts.properties[property].point = null;\n          for (let child in this.inserts.properties[property]?.properties) {\n            this.inserts.properties[property].properties[child].content = this.inserts.properties[property].properties[child].point = null;\n          }\n          for (let child in this.inserts.properties[property]?.property) {\n            this.inserts.properties[property].property.content = this.inserts.properties[property].property.point = this.inserts.properties[property].property.key = null;\n          }\n        }\n      } else return;\n      if (this.listCriteria.length > 0) {\n        this.isLoadingSaveCritera = true;\n        saveCriteria(this.listCriteria).then(res => {\n          this.listCriteria = [];\n          this.totalScore = res.data.totalPoint;\n          this.$store.dispatch('handleSuccess', 'Thiết lập tiêu chí thành công');\n        }).catch(error => {\n          if (error.request.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\n            this.$store.dispatch('handleServerError');\n          }\n          console.log(error);\n        }).finally(() => {\n          setTimeout(() => {\n            this.isLoadingSaveCritera = false;\n          }, 300);\n        });\n      } else if (Object.keys(this.invalidData).length === 0) {\n        this.$store.dispatch('handleError', 'Chưa thiết lập tiêu chí');\n      }\n    },\n    /**\r\n     * Load dữ liệu thiết lập đề: enum, sheetIndex\r\n     */\n    async loadConfigExamData() {\n      this.examBankId = this.$route.params.id;\n      let me = this;\n      this.isLoadingSaveCritera = true;\n      await configureExam(this.examBankId).then(res => {\n        me.configureExamData = res.data;\n        me.configureExamData.paragraphsEllipsis = this.textWithEllipsis(res.data.paragraphs);\n        me.configureExamData.paragraphs = res.data.paragraphs;\n        me.totalScore = res.data.data.criterias_sum_point ?? 0;\n        me.selectedData = res.data.data;\n        me.TypeProperty = res.data.typeProperty;\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        setTimeout(() => {\n          this.isLoadingSaveCritera = false;\n        }, 300);\n      });\n    }\n  },\n  async created() {\n    await this.loadConfigExamData();\n  },\n  mounted() {},\n  computed: {\n    MESSAGE() {\n      return MESSAGE;\n    }\n  }\n};","map":{"version":3,"names":["Toast","Skeleton","Dropdown","TabView","TabPanel","Button","InputNumber","Panel","SplitterPanel","InputText","Dialog","DataTable","Column","mapState","mapActions","configureExam","saveCriteria","getCriteriaByExamBankId","deleteCriteria","TheLoadingProgress","MESSAGE","RESPONSE_STATUS","MultiSelect","components","data","optionSheet","Font","totalScore","isLoading","visible","popupLoading","tabViewIndex","isPopupDelete","deletedItem","selectedData","Text","SheetIndex","Range","content","point","inserts","properties","IMAGE","HIGH_IMAGE","propertyName","WIDTH_IMAGE","FOOTNOTE","INSERT_FOOTNOTE","FOOTNOTE_CONTENT","FOOTNOTE_TYPE","FOOTER_TYPE_ALL","FOOTER_ALL","formats","MODIFY_STYLE","FONT","FONT_SIZE","FONT_STYLE","FONT_COLOR","LINE_SPACING","SPACING_BEFORE","SPACING_AFTER","ALIGNMENT","ALL_CAPS","INDENTATION_LEFT","SPECIAL_HANGING","NUMBERING","required","APPLY_STYLE","property","key","value","generals","FILE_NAME","type","pageOrientation","PAGE_SIZE","MARGIN_TOP_ALL","MARGIN_LEFT_ALL","MARGIN_RIGHT_ALL","MARGIN_BOTTOM_ALL","AUTHOR","TITLE","isShowConfigureExam","TypeProperty","configureExamData","listCriteria","listCriteriaExam","examBankId","isLoadingSaveCritera","invalidData","methods","loadCriteriaByExamId","then","res","catch","error","console","log","finally","setTimeout","textWithEllipsis","paragraphs","formattedText","index","length","words","split","firstFiveWords","slice","join","lastFourWords","result","push","previewExam","deleteRowSelect","handleDeleteCriteria","showToast","splice","findIndex","record","CriteriaId","onRowSelect","el","document","getElementById","scrollIntoView","behavior","scrollViewToId","id","changeApplyStyle","saveCriteriaSettings","validData","isHasChilds","isHasChild","dataChild","propertyType","priority","child","invalidProperty","contentChild","pointChild","keyChild","INVALID_CONTENT_SETUP","INVALID_POINT_SETUP","applyStyleEnum","selectedValue","separator","valueChild","JSON","stringify","INVALID_CONTENT_CHILD_SETUP","exam_bank_id","page","paragraph","property_name","property_type","selectedIndex","paragraphsEllipsis","option","infoTypeEnums","undefined","totalPoint","$store","dispatch","request","status","HTTP_UNPROCESSABLE_ENTITY","Object","keys","loadConfigExamData","$route","params","me","criterias_sum_point","typeProperty","created","mounted","computed"],"sources":["E:\\khoaluan\\w-score\\vue\\src\\views\\user\\components\\ExamSetup.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-view flex1 flex-column\">\r\n        <div class=\"form-list flex-column flex1\">\r\n            <div class=\"flex-column flex1\">\r\n                <div class=\"flex-row title-box\">\r\n                    <div class=\"list-title flex1\">Thiết lập đề</div>\r\n                    <div class=\"flex-row mr-12\">\r\n                        <Button @click=\"previewExam\"\r\n                                class=\"ms-btn secondary d-flex justify-content-center flex-grow-1 ms-btn_search ps-3 pe-3 gap-2\">\r\n                            <div class=\"\">Xem tiêu chí</div>\r\n                        </Button>\r\n                        <Button @click=\"saveCriteriaSettings\"\r\n                                class=\"ms-btn primary ms-3 d-flex justify-content-center flex-grow-1 ms-btn_search ps-3 pe-3 gap-2\">\r\n                            <div class=\"\">Hoàn thành</div>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"box list-content flex1 flex-column\">\r\n                    <TheLoadingProgress v-if=\"isLoadingSaveCritera\"/>\r\n                    <TabView @tab-change=\"tabViewIndex = $event.index\">\r\n                        <TabPanel header=\"Định dạng\">\r\n                            <div class=\"form-content flex-row\">\r\n                                <div class=\"right-content flex1\">\r\n                                    <Panel header=\"Hiệu chỉnh\" toggleable>\r\n                                        <div class=\"list-control flex-row\">\r\n                                            <div class=\"panel-left flex1\">\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Style format\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <Dropdown\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.content\"\r\n                                                                    class=\"ms-format\"\r\n                                                                    showClear\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE`] }\"\r\n                                                                    :options=\"configureExamData.style\"\r\n                                                                    optionLabel=\"description\" optionValue=\"value\"\r\n                                                                    :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData['c-MODIFY_STYLE']\">\r\n                                                                {{ invalidData['c-MODIFY_STYLE'] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"list-control flex-row\"\r\n                                             v-if=\"formats.properties.MODIFY_STYLE.content\">\r\n                                            <div class=\"panel-left flex1\">\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Font\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <Dropdown\r\n                                                                    showClear\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.FONT.content\"\r\n                                                                    class=\"ms-format\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-FONT`] }\"\r\n                                                                    :options=\"configureExamData.fontType\"\r\n                                                                    optionLabel=\"description\" optionValue=\"value\"\r\n                                                                    :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData['c-MODIFY_STYLE-FONT']\">\r\n                                                                {{ invalidData['c-MODIFY_STYLE-FONT'] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.FONT.point\"\r\n                                                                    :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                    :max=\"100\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-FONT`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-FONT`]\">\r\n                                                                {{ invalidData[`p-MODIFY_STYLE-FONT`] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Font Size\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <Dropdown\r\n                                                                    showClear\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.FONT_SIZE.content\"\r\n                                                                    property-name=\"Text Vertical\"\r\n                                                                    class=\"ms-format\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-FONT_SIZE`] }\"\r\n                                                                    :options=\"Array(50).fill().map((_, index) => index + 1)\"\r\n                                                                    :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`c-MODIFY_STYLE-FONT_SIZE`]\">\r\n                                                                {{ invalidData[`c-MODIFY_STYLE-FONT_SIZE`] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.FONT_SIZE.point\"\r\n                                                                    :min=\"0\" :max=\"100\"\r\n                                                                    :max-fraction-digits=\"5\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-FONT_SIZE`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-FONT_SIZE`]\">\r\n                                                                {{ invalidData[`p-MODIFY_STYLE-FONT_SIZE`] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Font Style\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <Dropdown\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.FONT_STYLE.content\"\r\n                                                                    :options=\"configureExamData.fontStyling\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-FONT_STYLE`] }\"\r\n                                                                    showClear\r\n                                                                    optionLabel=\"description\" optionValue=\"value\"\r\n                                                                    :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`c-MODIFY_STYLE-FONT_STYLE`]\">\r\n                                                                {{\r\n                                                                    invalidData[`c-MODIFY_STYLE-FONT_STYLE`]\r\n                                                                }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.FONT_STYLE.point\"\r\n                                                                    :min=\"0\" :max=\"100\"\r\n                                                                    :max-fraction-digits=\"5\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-FONT_STYLE`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-FONT_STYLE`]\">\r\n                                                                {{\r\n                                                                    invalidData[`p-MODIFY_STYLE-FONT_STYLE`]\r\n                                                                }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Indentation Left\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.INDENTATION_LEFT.content\"\r\n                                                                    :min=\"0\" :max=\"100\"\r\n                                                                    :max-fraction-digits=\"5\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-INDENTATION_LEFT`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`c-MODIFY_STYLE-INDENTATION_LEFT`]\">\r\n                                                                {{\r\n                                                                    invalidData[`c-MODIFY_STYLE-INDENTATION_LEFT`]\r\n                                                                }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.INDENTATION_LEFT.point\"\r\n                                                                    :min=\"0\" :max=\"100\"\r\n                                                                    :max-fraction-digits=\"5\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-INDENTATION_LEFT`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-INDENTATION_LEFT`]\">\r\n                                                                {{\r\n                                                                    invalidData[`p-MODIFY_STYLE-INDENTATION_LEFT`]\r\n                                                                }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Spacing Before\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.SPACING_BEFORE.content\"\r\n                                                                    :min=\"0\" :max=\"100\"\r\n                                                                    :max-fraction-digits=\"5\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-SPACING_BEFORE`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`c-MODIFY_STYLE-SPACING_BEFORE`]\">\r\n                                                                {{\r\n                                                                    invalidData[`c-MODIFY_STYLE-SPACING_BEFORE`]\r\n                                                                }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.SPACING_BEFORE.point\"\r\n                                                                    :min=\"0\" :max=\"100\"\r\n                                                                    :max-fraction-digits=\"5\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-SPACING_BEFORE`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-SPACING_BEFORE`]\">\r\n                                                                {{\r\n                                                                    invalidData[`p-MODIFY_STYLE-SPACING_BEFORE`]\r\n                                                                }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Spacing After\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.SPACING_AFTER.content\"\r\n                                                                    :min=\"0\" :max=\"100\"\r\n                                                                    :max-fraction-digits=\"5\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-SPACING_AFTER`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`c-MODIFY_STYLE-SPACING_AFTER`]\">\r\n                                                                {{\r\n                                                                    invalidData[`c-MODIFY_STYLE-SPACING_AFTER`]\r\n                                                                }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.SPACING_AFTER.point\"\r\n                                                                    :min=\"0\" :max=\"100\"\r\n                                                                    :max-fraction-digits=\"5\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-SPACING_AFTER`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-SPACING_AFTER`]\">\r\n                                                                {{\r\n                                                                    invalidData[`p-MODIFY_STYLE-SPACING_AFTER`]\r\n                                                                }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Number\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <Dropdown\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.NUMBERING.content\"\r\n                                                                    :options=\"configureExamData.numberType\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-NUMBERING`] }\"\r\n                                                                    showClear\r\n                                                                    optionLabel=\"description\" optionValue=\"value\"\r\n                                                                    :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`c-MODIFY_STYLE-NUMBERING`]\">\r\n                                                                {{\r\n                                                                    invalidData[`c-MODIFY_STYLE-NUMBERING`]\r\n                                                                }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.NUMBERING.point\"\r\n                                                                    :min=\"0\" :max=\"100\"\r\n                                                                    :max-fraction-digits=\"5\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-NUMBERING`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-NUMBERING`]\">\r\n                                                                {{\r\n                                                                    invalidData[`p-MODIFY_STYLE-NUMBERING`]\r\n                                                                }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"panel-right flex1\">\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Font Color\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <Dropdown\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.FONT_COLOR.content\"\r\n                                                                    :type-property=\"TypeProperty.TextControl\"\r\n                                                                    property-name=\"Text Control\" class=\"ms-format\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-FONT_COLOR`] }\"\r\n                                                                    :options=\"configureExamData.fontColor\"\r\n                                                                    optionLabel=\"description\" optionValue=\"value\"\r\n                                                                    showClear\r\n                                                                    :placeholder=\"MESSAGE.INPUT_PLACEHOLDER_SETUP\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`c-MODIFY_STYLE-FONT_COLOR`]\">\r\n                                                                {{ invalidData[`c-MODIFY_STYLE-FONT_COLOR`] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.FONT_COLOR.point\"\r\n                                                                    :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                    :max=\"100\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-FONT_COLOR`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-FONT_COLOR`]\">\r\n                                                                {{ invalidData[`p-MODIFY_STYLE-FONT_COLOR`] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Line Spacing\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.LINE_SPACING.content\"\r\n                                                                    :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                    :max=\"100\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-LINE_SPACING`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData['c-MODIFY_STYLE-LINE_SPACING']\">\r\n                                                                {{ invalidData['c-MODIFY_STYLE-LINE_SPACING'] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.LINE_SPACING.point\"\r\n                                                                    :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                    :max=\"100\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-LINE_SPACING`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-LINE_SPACING`]\">\r\n                                                                {{ invalidData[`p-MODIFY_STYLE-LINE_SPACING`] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Special Hanging\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.SPECIAL_HANGING.content\"\r\n                                                                    :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                    :max=\"100\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-SPECIAL_HANGING`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData['c-MODIFY_STYLE-SPECIAL_HANGING']\">\r\n                                                                {{ invalidData['c-MODIFY_STYLE-SPECIAL_HANGING'] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.SPECIAL_HANGING.point\"\r\n                                                                    :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                    :max=\"100\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-SPECIAL_HANGING`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-SPECIAL_HANGING`]\">\r\n                                                                {{ invalidData[`p-MODIFY_STYLE-SPECIAL_HANGING`] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Alignment\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <Dropdown\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.ALIGNMENT.content\"\r\n                                                                    :type-property=\"TypeProperty.TextControl\"\r\n                                                                    property-name=\"Text Control\" class=\"ms-format\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-ALIGNMENT`] }\"\r\n                                                                    :options=\"configureExamData.alignment\"\r\n                                                                    optionLabel=\"description\" optionValue=\"value\"\r\n                                                                    showClear\r\n                                                                    :placeholder=\"MESSAGE.INPUT_PLACEHOLDER_SETUP\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData['c-MODIFY_STYLE-ALIGNMENT']\">\r\n                                                                {{ invalidData['c-MODIFY_STYLE-ALIGNMENT'] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.ALIGNMENT.point\"\r\n                                                                    :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                    :max=\"100\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-ALIGNMENT`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-ALIGNMENT`]\">\r\n                                                                {{ invalidData[`p-MODIFY_STYLE-ALIGNMENT`] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                                <div class=\"flex-row\">\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                All Caps\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <Dropdown\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.ALL_CAPS.content\"\r\n                                                                    :type-property=\"TypeProperty.TextControl\"\r\n                                                                    property-name=\"Text Control\" class=\"ms-format\"\r\n                                                                    :class=\"{ 'error': invalidData[`c-MODIFY_STYLE-ALL_CAPS`] }\"\r\n                                                                    :options=\"configureExamData.selection\"\r\n                                                                    optionLabel=\"description\" optionValue=\"value\"\r\n                                                                    showClear\r\n                                                                    :placeholder=\"MESSAGE.INPUT_PLACEHOLDER_SETUP\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData['c-MODIFY_STYLE-ALL_CAPS']\">\r\n                                                                {{ invalidData['c-MODIFY_STYLE-ALL_CAPS'] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\">\r\n                                                        <div class=\"form-group slide-detail\">\r\n                                                            <label class=\"top-label d-flex\">\r\n                                                                Điểm\r\n                                                            </label>\r\n                                                            <div class=\"flex1\">\r\n                                                                <InputNumber\r\n                                                                    v-model=\"formats.properties.MODIFY_STYLE.properties.ALL_CAPS.point\"\r\n                                                                    :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                    :max=\"100\"\r\n                                                                    :class=\"{ 'error': invalidData[`p-MODIFY_STYLE-ALL_CAPS`] }\"\r\n                                                                    :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                    class=\"ms-point\"/>\r\n                                                            </div>\r\n                                                            <div class=\"error-text\"\r\n                                                                 v-if=\"invalidData[`p-MODIFY_STYLE-ALL_CAPS`]\">\r\n                                                                {{ invalidData[`p-MODIFY_STYLE-ALL_CAPS`] }}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sp\"></div>\r\n                                                    <div class=\"flex1\"></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Panel>\r\n                                    <Panel header=\"Áp dụng style\" toggleable class=\"mt-4\">\r\n                                        <div class=\"list-control\">\r\n                                            <div class=\"flex-row\">\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Loại áp dụng\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <Dropdown class=\"ms-format\" :showClear=\"true\"\r\n                                                                      :class=\"{ 'error': invalidData[`c-APPLY_STYLE`] }\"\r\n                                                                      v-model=\"formats.properties.APPLY_STYLE.content\"\r\n                                                                      :options=\"configureExamData.applyStyle\"\r\n                                                                      @change=\"changeApplyStyle\"\r\n                                                                      optionLabel=\"description\" optionValue=\"value\"\r\n                                                                      :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`c-APPLY_STYLE`]\">\r\n                                                            {{ invalidData[`c-APPLY_STYLE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Loại style áp dụng\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <Dropdown class=\"ms-format\" :showClear=\"true\"\r\n                                                                      :class=\"{ 'error': invalidData[`k-APPLY_STYLE`] }\"\r\n                                                                      v-model=\"formats.properties.APPLY_STYLE.property.key\"\r\n                                                                      :options=\"configureExamData.style\"\r\n                                                                      optionLabel=\"description\" optionValue=\"value\"\r\n                                                                      :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`k-APPLY_STYLE`]\">\r\n                                                            {{ invalidData[`k-APPLY_STYLE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"\r\n                                                     v-if=\" configureExamData.applyStyleEnum && configureExamData.applyStyleEnum['PARAGRAPH'].value === formats.properties.APPLY_STYLE.content\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Đoạn văn áp dụng\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <MultiSelect class=\"ms-format\" :showClear=\"true\"\r\n                                                                         :class=\"{ 'error': invalidData[`c-APPLY_STYLE-content`] }\"\r\n                                                                         v-model=\"formats.properties.APPLY_STYLE.property.content\"\r\n                                                                         :options=\"configureExamData.paragraphsEllipsis\"\r\n                                                                         :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`c-APPLY_STYLE-content`]\">\r\n                                                            {{ invalidData[`c-APPLY_STYLE-content`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"flex1\"\r\n                                                     v-if=\" configureExamData.applyStyleEnum && configureExamData.applyStyleEnum['OTHER'].value === formats.properties.APPLY_STYLE.content\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Đoạn văn áp dụng\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputText\r\n                                                                v-model=\"formats.properties.APPLY_STYLE.property.value\"\r\n                                                                :class=\"{ 'error': invalidData[`c-APPLY_STYLE-value`] }\"\r\n                                                                class=\"heigth36\" placeholder=\"Nhập nội dung\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`c-APPLY_STYLE-value`]\">\r\n                                                            {{ invalidData[`c-APPLY_STYLE-value`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Điểm\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputNumber\r\n                                                                v-model=\"formats.properties.APPLY_STYLE.point\"\r\n                                                                :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                :max=\"100\"\r\n                                                                :class=\"{ 'error': invalidData[`p-APPLY_STYLE`] }\"\r\n                                                                :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                class=\"ms-point\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`p-APPLY_STYLE`]\">\r\n                                                            {{ invalidData[`p-APPLY_STYLE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"flex1\"></div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"></div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"></div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Panel>\r\n                                </div>\r\n                            </div>\r\n                        </TabPanel>\r\n                        <TabPanel header=\"Chèn nội dung\">\r\n                            <div class=\"form-content flex-row\">\r\n                                <div class=\"right-content flex1\">\r\n                                    <Panel header=\"Hình ảnh\" toggleable class=\"mt-10\">\r\n                                        <div class=\"list-control\">\r\n                                            <div class=\"flex-row\">\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Tên ảnh\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputText v-model=\"inserts.properties.IMAGE.content\"\r\n                                                                       :class=\"{ 'error': invalidData[`c-IMAGE`] }\"\r\n                                                                       class=\"heigth36\"\r\n                                                                       :placeholder=\"MESSAGE.INPUT_PLACEHOLDER_SETUP\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`c-IMAGE`]\">\r\n                                                            {{ invalidData[`c-IMAGE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Điểm\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputNumber\r\n                                                                v-model=\"inserts.properties.IMAGE.point\"\r\n                                                                :class=\"{ 'error': invalidData[`p-IMAGE`] }\"\r\n                                                                :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                :max=\"100\"\r\n                                                                :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                class=\"ms-point\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`p-IMAGE`]\">\r\n                                                            {{ invalidData[`p-IMAGE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"></div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Chiều dài\r\n                                                        </label>\r\n                                                        <div class=\"d-flex\">\r\n                                                            <InputNumber\r\n                                                                v-model=\"inserts.properties.IMAGE.properties.HIGH_IMAGE.content\"\r\n                                                                :class=\"{ 'error': invalidData[`c-IMAGE-HIGH_IMAGE`] }\"\r\n                                                                :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                :max=\"100\"\r\n                                                                :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                class=\"ms-point flex-grow-1\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`c-IMAGE-HIGH_IMAGE`]\">\r\n                                                            {{ invalidData[`c-IMAGE-HIGH_IMAGE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Điểm\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputNumber\r\n                                                                v-model=\"inserts.properties.IMAGE.properties.HIGH_IMAGE.point\"\r\n                                                                :class=\"{ 'error': invalidData[`p-IMAGE-HIGH_IMAGE`] }\"\r\n                                                                :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                :max=\"100\"\r\n                                                                :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                class=\"ms-point\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`p-IMAGE-HIGH_IMAGE`]\">\r\n                                                            {{ invalidData[`p-IMAGE-HIGH_IMAGE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"flex-row\">\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Chiều rộng\r\n                                                        </label>\r\n                                                        <div class=\"d-flex\">\r\n                                                            <InputNumber\r\n                                                                v-model=\"inserts.properties.IMAGE.properties.WIDTH_IMAGE.content\"\r\n                                                                :class=\"{ 'error': invalidData[`c-IMAGE-WIDTH_IMAGE`] }\"\r\n                                                                :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                :max=\"100\"\r\n                                                                :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                class=\"ms-point flex-grow-1\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`c-IMAGE-WIDTH_IMAGE`]\">\r\n                                                            {{ invalidData[`c-IMAGE-WIDTH_IMAGE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Điểm\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputNumber\r\n                                                                v-model=\"inserts.properties.IMAGE.properties.WIDTH_IMAGE.point\"\r\n                                                                :class=\"{ 'error': invalidData[`p-IMAGE-WIDTH_IMAGE`] }\"\r\n                                                                :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                :max=\"100\"\r\n                                                                :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                class=\"ms-point\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`p-IMAGE-WIDTH_IMAGE`]\">\r\n                                                            {{ invalidData[`p-IMAGE-WIDTH_IMAGE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"></div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"></div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Panel>\r\n                                    <Panel header=\"Chú thích chân trang\" toggleable class=\"mt-4\">\r\n                                        <div class=\"list-control\">\r\n                                            <div class=\"flex-row\">\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Nội dung\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputText v-model=\"inserts.properties.FOOTNOTE.content\"\r\n                                                                       :class=\"{ 'error': invalidData[`c-FOOTNOTE`] }\"\r\n                                                                       class=\"heigth36\"\r\n                                                                       :placeholder=\"MESSAGE.INPUT_PLACEHOLDER_SETUP\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`c-FOOTNOTE`]\">\r\n                                                            {{ invalidData[`c-FOOTNOTE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Điểm\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputNumber\r\n                                                                v-model=\"inserts.properties.FOOTNOTE.point\"\r\n                                                                :class=\"{ 'error': invalidData[`p-FOOTNOTE`] }\"\r\n                                                                :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                :max=\"100\"\r\n                                                                :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                class=\"ms-point\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`p-FOOTNOTE`]\">\r\n                                                            {{ invalidData[`p-FOOTNOTE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"></div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Loại chú thích\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <Dropdown\r\n                                                                v-model=\"inserts.properties.FOOTNOTE.properties.FOOTNOTE_TYPE.content\"\r\n                                                                :options=\"configureExamData.numberType\"\r\n                                                                :class=\"{ 'error': invalidData[`c-FOOTNOTE-FOOTNOTE_TYPE`] }\"\r\n                                                                showClear\r\n                                                                optionLabel=\"description\" optionValue=\"value\"\r\n                                                                :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`c-FOOTNOTE-FOOTNOTE_TYPE`]\">\r\n                                                            {{ invalidData[`c-FOOTNOTE-FOOTNOTE_TYPE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Điểm\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputNumber\r\n                                                                v-model=\"inserts.properties.FOOTNOTE.properties.FOOTNOTE_TYPE.point\"\r\n                                                                :class=\"{ 'error': invalidData[`p-FOOTNOTE-FOOTNOTE_TYPE`] }\"\r\n                                                                :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                :max=\"100\"\r\n                                                                :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                class=\"ms-point\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`p-FOOTNOTE-FOOTNOTE_TYPE`]\">\r\n                                                            {{ invalidData[`p-FOOTNOTE-FOOTNOTE_TYPE`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"flex-row\">\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Đoạn văn áp dụng\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <Dropdown class=\"ms-format\" showClear\r\n                                                                      :class=\"{ 'error': invalidData[`c-APPLY_STYLE-content`] }\"\r\n                                                                      v-model=\"inserts.properties.FOOTNOTE.properties.FOOTNOTE_CONTENT.content\"\r\n                                                                      :options=\"configureExamData.paragraphsEllipsis\"\r\n                                                                      :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`c-FOOTNOTE-FOOTNOTE_CONTENT`]\">\r\n                                                            {{ invalidData[`c-FOOTNOTE-FOOTNOTE_CONTENT`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Điểm\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputNumber\r\n                                                                v-model=\"inserts.properties.FOOTNOTE.properties.FOOTNOTE_CONTENT.point\"\r\n                                                                :class=\"{ 'error': invalidData[`p-FOOTNOTE-FOOTNOTE_CONTENT`] }\"\r\n                                                                :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                :max=\"100\"\r\n                                                                :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                class=\"ms-point\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`p-FOOTNOTE-FOOTNOTE_CONTENT`]\">\r\n                                                            {{ invalidData[`p-FOOTNOTE-FOOTNOTE_CONTENT`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"></div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"></div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Panel>\r\n                                    <Panel header=\"Footer\" toggleable class=\"mt-4\">\r\n                                        <div class=\"list-control\">\r\n                                            <div class=\"flex-row\">\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Nội dung\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputText v-model=\"inserts.properties.FOOTER_ALL.content\"\r\n                                                                       :class=\"{ 'error': invalidData[`c-FOOTER_ALL`] }\"\r\n                                                                       class=\"heigth36\"\r\n                                                                       :placeholder=\"MESSAGE.INPUT_PLACEHOLDER_SETUP\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`c-FOOTER_ALL`]\">\r\n                                                            {{ invalidData[`c-FOOTER_ALL`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Điểm\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputNumber\r\n                                                                v-model=\"inserts.properties.FOOTER_ALL.point\"\r\n                                                                :class=\"{ 'error': invalidData[`p-FOOTER_ALL`] }\"\r\n                                                                :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                :max=\"100\"\r\n                                                                :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                class=\"ms-point\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`p-FOOTER_ALL`]\">\r\n                                                            {{ invalidData[`p-FOOTER_ALL`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\"></div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Loại footer\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <Dropdown\r\n                                                                v-model=\"inserts.properties.FOOTER_TYPE_ALL.content\"\r\n                                                                :options=\"configureExamData.footerType\"\r\n                                                                :class=\"{ 'error': invalidData[`c-FOOTER_TYPE_ALL`] }\"\r\n                                                                showClear\r\n                                                                optionLabel=\"description\" optionValue=\"value\"\r\n                                                                :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`c-FOOTER_TYPE_ALL`]\">\r\n                                                            {{ invalidData[`c-FOOTER_TYPE_ALL`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sp\"></div>\r\n                                                <div class=\"flex1\">\r\n                                                    <div class=\"form-group slide-detail\">\r\n                                                        <label class=\"top-label d-flex\">\r\n                                                            Điểm\r\n                                                        </label>\r\n                                                        <div class=\"flex1\">\r\n                                                            <InputNumber\r\n                                                                v-model=\"inserts.properties.FOOTER_TYPE_ALL.point\"\r\n                                                                :class=\"{ 'error': invalidData[`p-FOOTER_TYPE_ALL`] }\"\r\n                                                                :max-fraction-digits=\"5\" :min=\"0\"\r\n                                                                :max=\"100\"\r\n                                                                :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                class=\"ms-point\"/>\r\n                                                        </div>\r\n                                                        <div class=\"error-text\"\r\n                                                             v-if=\"invalidData[`p-FOOTER_TYPE_ALL`]\">\r\n                                                            {{ invalidData[`p-FOOTER_TYPE_ALL`] }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Panel>\r\n                                </div>\r\n                            </div>\r\n                        </TabPanel>\r\n                        <TabPanel header=\"Thiết lập chung\">\r\n                            <div class=\"form-content flex-row\">\r\n                                <div class=\"right-content flex1\">\r\n                                    <Panel header=\"Page Layout\" toggleable class=\"mt-10\">\r\n                                        <div class=\"flex-column\">\r\n                                            <div class=\"list-control flex-row\">\r\n                                                <div class=\"panel-left flex1\">\r\n                                                    <div class=\"flex-row\">\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Page Size\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <Dropdown\r\n                                                                        v-model=\"generals.properties.PAGE_SIZE.content\"\r\n                                                                        :options=\"configureExamData.pageSize\"\r\n                                                                        :class=\"{ 'error': invalidData['c-PAGE_SIZE'] }\"\r\n                                                                        optionLabel=\"description\" optionValue=\"value\"\r\n                                                                        showClear\r\n                                                                        :placeholder=\"MESSAGE.DROPDOWN_PLACEHOLDER_SETUP\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData['c-PAGE_SIZE']\">\r\n                                                                    {{ invalidData['c-PAGE_SIZE'] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Điểm\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.PAGE_SIZE.point\"\r\n                                                                        :max-fraction-digits=\"5\"\r\n                                                                        :class=\"{ 'error': invalidData['p-PAGE_SIZE'] }\"\r\n                                                                        :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"\r\n                                                                        class=\"ms-point\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData['p-PAGE_SIZE']\">\r\n                                                                    {{ invalidData['p-PAGE_SIZE'] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\"></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"panel-right flex1\">\r\n                                                    <div class=\"flex-row\">\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Margin Top\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.MARGIN_TOP_ALL.content\"\r\n                                                                        :min=\"0\"\r\n                                                                        :max=\"100\" :max-fraction-digits=\"5\"\r\n                                                                        :class=\"{ 'error': invalidData[`c-MARGIN_TOP_ALL`] }\"\r\n                                                                        placeholder=\"Nhập nội dung\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`c-MARGIN_TOP_ALL`]\">\r\n                                                                    {{ invalidData[`c-MARGIN_TOP_ALL`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Điểm\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.MARGIN_TOP_ALL.point\"\r\n                                                                        :min=\"0\"\r\n                                                                        :max=\"100\" :max-fraction-digits=\"5\"\r\n                                                                        :class=\"{ 'error': invalidData[`p-MARGIN_TOP_ALL`] }\"\r\n                                                                        :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`p-MARGIN_TOP_ALL`]\">\r\n                                                                    {{ invalidData[`p-MARGIN_TOP_ALL`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\"></div>\r\n                                                    </div>\r\n                                                    <div class=\"flex-row\">\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Margin Left\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.MARGIN_LEFT_ALL.content\"\r\n                                                                        :min=\"0\"\r\n                                                                        :max=\"100\" :max-fraction-digits=\"5\"\r\n                                                                        :class=\"{ 'error': invalidData[`c-MARGIN_LEFT_ALL`] }\"\r\n                                                                        placeholder=\"Nhập nội dung\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`c-MARGIN_LEFT_ALL`]\">\r\n                                                                    {{ invalidData[`c-MARGIN_LEFT_ALL`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Điểm\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.MARGIN_LEFT_ALL.point\"\r\n                                                                        :min=\"0\"\r\n                                                                        :max=\"100\" :max-fraction-digits=\"5\"\r\n                                                                        :class=\"{ 'error': invalidData[`p-MARGIN_LEFT_ALL`] }\"\r\n                                                                        :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`p-MARGIN_LEFT_ALL`]\">\r\n                                                                    {{ invalidData[`p-MARGIN_LEFT_ALL`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\"></div>\r\n                                                    </div>\r\n                                                    <div class=\"flex-row\">\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Margin Right\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.MARGIN_RIGHT_ALL.content\"\r\n                                                                        :min=\"0\"\r\n                                                                        :max=\"100\" :max-fraction-digits=\"5\"\r\n                                                                        :class=\"{ 'error': invalidData[`c-MARGIN_RIGHT_ALL`] }\"\r\n                                                                        placeholder=\"Nhập nội dung\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`c-MARGIN_RIGHT_ALL`]\">\r\n                                                                    {{ invalidData[`c-MARGIN_RIGHT_ALL`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Điểm\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.MARGIN_RIGHT_ALL.point\"\r\n                                                                        :min=\"0\"\r\n                                                                        :max=\"100\" :max-fraction-digits=\"5\"\r\n                                                                        :class=\"{ 'error': invalidData[`p-MARGIN_RIGHT_ALL`] }\"\r\n                                                                        :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`p-MARGIN_RIGHT_ALL`]\">\r\n                                                                    {{ invalidData[`p-MARGIN_RIGHT_ALL`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\"></div>\r\n                                                    </div>\r\n                                                    <div class=\"flex-row\">\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Margin Bottom\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.MARGIN_BOTTOM_ALL.content\"\r\n                                                                        :min=\"0\"\r\n                                                                        :max=\"100\" :max-fraction-digits=\"5\"\r\n                                                                        :class=\"{ 'error': invalidData[`c-MARGIN_BOTTOM_ALL`] }\"\r\n                                                                        placeholder=\"Nhập nội dung\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`c-MARGIN_BOTTOM_ALL`]\">\r\n                                                                    {{ invalidData[`c-MARGIN_BOTTOM_ALL`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Điểm\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.MARGIN_BOTTOM_ALL.point\"\r\n                                                                        :min=\"0\"\r\n                                                                        :max=\"100\" :max-fraction-digits=\"5\"\r\n                                                                        :class=\"{ 'error': invalidData[`p-MARGIN_BOTTOM_ALL`] }\"\r\n                                                                        :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`p-MARGIN_BOTTOM_ALL`]\">\r\n                                                                    {{ invalidData[`p-MARGIN_BOTTOM_ALL`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\"></div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </Panel>\r\n                                    <Panel header=\"Thông tin chung\" toggleable class=\"mt-4\">\r\n                                        <div class=\"flex-column\">\r\n                                            <div class=\"right-content flex1\">\r\n                                                <div class=\"list-control\">\r\n                                                    <div class=\"flex-row\">\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    File name\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <Dropdown\r\n                                                                        v-model=\"generals.properties.FILE_NAME.content\"\r\n                                                                        :options=\"configureExamData.infoType\"\r\n                                                                        optionLabel=\"description\" optionValue=\"value\"\r\n                                                                        :class=\"{ 'error': invalidData['c-FILE_NAME'] }\"\r\n                                                                        showClear\r\n                                                                        placeholder=\"Vui lòng chọn một hạng mục\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`c-FILE_NAME`]\">\r\n                                                                    {{ invalidData[`c-FILE_NAME`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.FILE_NAME.content === configureExamData.infoTypeEnums['OTHER'].value\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Nội dung\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputText\r\n                                                                        v-model=\"generals.properties.FILE_NAME.value\"\r\n                                                                        :class=\"{ 'error': invalidData[`v-FILE_NAME`] }\"\r\n                                                                        class=\"heigth36\" placeholder=\"Nhập nội dung\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`v-FILE_NAME`]\">\r\n                                                                    {{ invalidData[`v-FILE_NAME`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.FILE_NAME.content === configureExamData.infoTypeEnums['OTHER'].value\"></div>\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Điểm\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.FILE_NAME.point\"\r\n                                                                        :class=\"{ 'error': invalidData[`p-FILE_NAME`] }\"\r\n                                                                        :max=\"10\"\r\n                                                                        :min=\"0\" :maxFractionDigits=\"5\"\r\n                                                                        :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`p-FILE_NAME`]\">\r\n                                                                    {{ invalidData[`p-FILE_NAME`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"flex1\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.FILE_NAME.content !== configureExamData.infoTypeEnums['OTHER'].value\"></div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Author\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <Dropdown\r\n                                                                        v-model=\"generals.properties.AUTHOR.content\"\r\n                                                                        :options=\"configureExamData.infoType\"\r\n                                                                        optionLabel=\"description\" optionValue=\"value\"\r\n                                                                        :class=\"{ 'error': invalidData['c-AUTHOR'] }\"\r\n                                                                        showClear\r\n                                                                        placeholder=\"Vui lòng chọn một hạng mục\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`c-AUTHOR`]\">\r\n                                                                    {{ invalidData[`c-AUTHOR`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.AUTHOR.content === configureExamData.infoTypeEnums['OTHER'].value\"></div>\r\n                                                        <div class=\"flex1\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.AUTHOR.content === configureExamData.infoTypeEnums['OTHER'].value\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Nội dung\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputText\r\n                                                                        v-model=\"generals.properties.AUTHOR.value\"\r\n                                                                        :class=\"{ 'error': invalidData[`v-AUTHOR`] }\"\r\n                                                                        class=\"heigth36\" placeholder=\"Nhập nội dung\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`v-AUTHOR`]\">\r\n                                                                    {{ invalidData[`v-AUTHOR`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.AUTHOR.content !== configureExamData.infoTypeEnums['OTHER'].value\"></div>\r\n                                                        <div class=\"col-sp\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.AUTHOR.content === configureExamData.infoTypeEnums['OTHER'].value\"></div>\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Điểm\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.AUTHOR.point\"\r\n                                                                        :class=\"{ 'error': invalidData[`p-AUTHOR`] }\"\r\n                                                                        :max=\"10\"\r\n                                                                        :min=\"0\" :maxFractionDigits=\"5\"\r\n                                                                        :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData[`p-AUTHOR`]\">\r\n                                                                    {{ invalidData[`p-AUTHOR`] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.AUTHOR.content !== configureExamData.infoTypeEnums['OTHER'].value\"></div>\r\n                                                        <div class=\"flex1\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.AUTHOR.content !== configureExamData.infoTypeEnums['OTHER'].value\"></div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                    </div>\r\n                                                    <div class=\"flex-row\">\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Info title\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <Dropdown\r\n                                                                        v-model=\"generals.properties.TITLE.content\"\r\n                                                                        :options=\"configureExamData.infoType\"\r\n                                                                        optionLabel=\"description\" optionValue=\"value\"\r\n                                                                        :class=\"{ 'error': invalidData[`c-TITLE`] }\"\r\n                                                                        showClear\r\n                                                                        placeholder=\"Vui lòng chọn một hạng mục\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\"\r\n                                                                     v-if=\"invalidData['c-TITLE']\">\r\n                                                                    {{ invalidData['c-TITLE'] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.TITLE.content === configureExamData.infoTypeEnums['OTHER'].value\"></div>\r\n                                                        <div class=\"flex1\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.TITLE.content === configureExamData.infoTypeEnums['OTHER'].value\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Nội dung\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputText\r\n                                                                        v-model=\"generals.properties.TITLE.value\"\r\n                                                                        :class=\"{ 'error': invalidData['v-TITLE'] }\"\r\n                                                                        class=\"heigth36\" placeholder=\"Nhập nội dung\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\" v-if=\"invalidData['v-TITLE']\">\r\n                                                                    {{ invalidData['v-TITLE'] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.TITLE.content !== configureExamData.infoTypeEnums['OTHER'].content\"></div>\r\n                                                        <div class=\"flex1\">\r\n                                                            <div class=\"form-group slide-detail\">\r\n                                                                <label class=\"top-label d-flex\">\r\n                                                                    Điểm\r\n                                                                </label>\r\n                                                                <div class=\"flex1\">\r\n                                                                    <InputNumber\r\n                                                                        v-model=\"generals.properties.TITLE.point\"\r\n                                                                        :class=\"{ 'error': invalidData['p-TITLE'] }\"\r\n                                                                        :max=\"10\"\r\n                                                                        :min=\"0\"\r\n                                                                        :maxFractionDigits=\"5\"\r\n                                                                        :placeholder=\"MESSAGE.INPUT_NUMBER_PLACEHOLDER_SETUP\"/>\r\n                                                                </div>\r\n                                                                <div class=\"error-text\" v-if=\"invalidData['p-TITLE']\">\r\n                                                                    {{ invalidData['p-TITLE'] }}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\"\r\n                                                             v-if=\"configureExamData.infoTypeEnums && generals.properties.TITLE.content !== configureExamData.infoTypeEnums['OTHER'].value\"></div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\"></div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\"></div>\r\n                                                        <div class=\"col-sp\"></div>\r\n                                                        <div class=\"flex1\"></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Panel>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </TabPanel>\r\n                        <TabPanel headerClass=\"totalScore\" :disabled=\"true\">\r\n                            <template #header>\r\n                                <span>Tổng điểm: <b>{{ totalScore }}</b> điểm</span>\r\n                            </template>\r\n                        </TabPanel>\r\n                    </TabView>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <Dialog v-model:visible=\"isShowConfigureExam\" header=\"Thông tin thiết lập\" :modal=\"true\" :draggable=\"false\"\r\n            :position=\"'top'\" :style=\"{ width: '60vw', height: '100vh' }\" content-class=\"d-flex unscroller\">\r\n        <div class=\"ms-grid-viewer flex1 flex-box flex-column\">\r\n            <div class=\"ms-content--table flex-column flex1\">\r\n                <DataTable paginator :rows=\"10\" :rowsPerPageOptions=\"[5, 10, 20, 50]\" class=\"flex1 flex-column\"\r\n                           :class=\"{ 'loading': isLoading }\" :loading=\"isLoading\"\r\n                           :value=\"isLoading ? Array.from({ length: 8 }, () => ({ ...{} })) : listCriteriaExam\"\r\n                           table-class=\"grid-group\"\r\n                           currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\r\n                           paginatorTemplate=\"FirstPageLink PrevPageLink flex1 CurrentPageReport NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                           @rowDblclick=\"onRowSelect($event.data)\" tableStyle=\"min-width: 100%\" rowHover>\r\n                    <Column header=\"STT\" style=\"width: 100px;\" class=\"text-center\">\r\n                        <template #body=\"slotProps\">\r\n                            <div v-if=\"!isLoading\"> {{ slotProps.index + 1 }}</div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"property_name\" header=\"Tiêu chí\">\r\n                        <template #body=\"{ data, field, slotProps }\">\r\n                            <div v-if=\"!isLoading\"> {{ data[field] }}</div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"content\" style=\"width: 100px;\" dataKey=\"id\" header=\"Nội dung tiêu chí\">\r\n                        <template #body=\"{ data, field, slotProps }\">\r\n                            <div v-if=\"!isLoading\"> {{ data[field] }}</div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"point\" dataKey=\"id\" header=\"Điểm\">\r\n                        <template #body=\"{ data, field, slotProps }\">\r\n                            <div v-if=\"!isLoading\"> {{ data[field] }}</div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n                    <Column alignFrozen=\"right\" style=\"width: 100px; text-align: center;\" frozen header=\"Thao tác\">\r\n                        <template #body=\"slotProps, index\">\r\n                            <div class=\"row-actions flex-row\" v-if=\"!isLoading\">\r\n                                <div class=\"item\" @click=\"onRowSelect(slotProps.data)\">\r\n                                    <div class=\"v-popover popover\">\r\n                                        <div class=\"trigger\">\r\n                                            <div class=\"icon24 edit\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"item\" @click=\"deleteRowSelect(slotProps.data)\">\r\n                                    <div class=\"v-popover popover\">\r\n                                        <div class=\"icon24 delete\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div v-else>\r\n                                <Skeleton height=\"18px\" class=\"mb-2\"></Skeleton>\r\n                            </div>\r\n                        </template>\r\n                    </Column>\r\n\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"Đóng\" class=\"ms-button mt-10 btn w-100\" @click=\"isShowConfigureExam = false\"/>\r\n        </template>\r\n    </Dialog>\r\n    <Dialog v-model:visible=\"isPopupDelete\" modal closeOnEscape :style=\"{ width: '25vw', height: '20vh' }\"\r\n            header=\"Xóa đề thi\">\r\n        <TheLoadingProgress v-if=\"popupLoading\"/>\r\n        <div class=\"w-full flex flex-column\">\r\n            <span> Bạn có chắc chắn muốn xóa tiêu chí <b>{{ deletedItem.PropertyName }}</b> không?</span>\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"Không\" class=\"ms-button btn detail-button secondary\" @click=\"isPopupDelete = false\"/>\r\n            <Button label=\"Xóa đề thi\" class=\"ms-button btn w-100 danger\" @click=\"handleDeleteCriteria\"/>\r\n        </template>\r\n    </Dialog>\r\n    <Toast/>\r\n</template>\r\n\r\n<script>\r\nimport Toast from 'primevue/toast';\r\nimport Skeleton from 'primevue/skeleton';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport TabView from 'primevue/tabview';\r\nimport TabPanel from 'primevue/tabpanel';\r\nimport Button from 'primevue/button';\r\nimport InputNumber from 'primevue/inputnumber';\r\nimport Panel from 'primevue/panel';\r\nimport SplitterPanel from 'primevue/splitterpanel';\r\nimport InputText from 'primevue/inputtext';\r\nimport Dialog from 'primevue/dialog';\r\nimport DataTable from 'primevue/datatable';\r\nimport Column from 'primevue/column';\r\nimport {mapState, mapActions} from 'vuex'\r\nimport {configureExam, saveCriteria, getCriteriaByExamBankId, deleteCriteria} from '/api/exam-bank'\r\nimport TheLoadingProgress from '@/components/LoadingProgress.vue';\r\nimport {MESSAGE, RESPONSE_STATUS} from \"@/common/enums\";\r\nimport MultiSelect from 'primevue/multiselect';\r\n\r\nexport default {\r\n    components: {\r\n        TabView,\r\n        TabPanel,\r\n        Dropdown,\r\n        Panel,\r\n        Toast,\r\n        Skeleton,\r\n        SplitterPanel,\r\n        InputText,\r\n        InputNumber,\r\n        Button,\r\n        Dialog,\r\n        DataTable,\r\n        Column,\r\n        MultiSelect,\r\n        TheLoadingProgress\r\n    },\r\n    data() {\r\n        return {\r\n            optionSheet: [],\r\n            Font: null,\r\n            totalScore: 0,\r\n            isLoading: false,\r\n            visible: true,\r\n            popupLoading: false,\r\n            tabViewIndex: 0,\r\n\r\n            isPopupDelete: false,\r\n            deletedItem: null,\r\n            selectedData: null,\r\n\r\n            Text: {\r\n                SheetIndex: null,\r\n                Range: null,\r\n                content: null,\r\n                point: null,\r\n            },\r\n\r\n            inserts: {\r\n                properties: {\r\n                    IMAGE: {\r\n                        properties: {\r\n                            HIGH_IMAGE: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Image High',\r\n                            },\r\n                            WIDTH_IMAGE: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Image Width',\r\n                            }\r\n                        },\r\n                        content: null,\r\n                        point: null,\r\n                        propertyName: 'Image',\r\n                    },\r\n                    FOOTNOTE: {\r\n                        properties: {\r\n                            INSERT_FOOTNOTE: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Insert footnote',\r\n                            },\r\n                            FOOTNOTE_CONTENT: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Footnote content',\r\n                            },\r\n                            FOOTNOTE_TYPE: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Footnote type',\r\n                            }\r\n                        },\r\n                        content: null,\r\n                        point: null,\r\n                        propertyName: 'Foot note',\r\n                    },\r\n                    FOOTER_TYPE_ALL: {\r\n                        content: null,\r\n                        point: null,\r\n                        propertyName: 'Footer type',\r\n                    },\r\n                    FOOTER_ALL: {\r\n                        content: null,\r\n                        point: null,\r\n                        propertyName: 'Footer content',\r\n                    }\r\n                },\r\n                content: null,\r\n                point: null,\r\n            },\r\n\r\n            formats: {\r\n                SheetIndex: null,\r\n                Range: null,\r\n                properties: {\r\n                    MODIFY_STYLE: {\r\n                        properties: {\r\n                            FONT: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Font',\r\n                            },\r\n                            FONT_SIZE: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Font size',\r\n                            },\r\n                            FONT_STYLE: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Font style',\r\n                            },\r\n                            FONT_COLOR: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Font color',\r\n                            },\r\n                            LINE_SPACING: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Line spacing',\r\n                            },\r\n                            SPACING_BEFORE: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Spacing before',\r\n                            },\r\n                            SPACING_AFTER: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Spacing after',\r\n                            },\r\n                            ALIGNMENT: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Alignment',\r\n                            },\r\n                            ALL_CAPS: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'All caps',\r\n                            },\r\n                            INDENTATION_LEFT: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Indentation left',\r\n                            },\r\n                            SPECIAL_HANGING: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Special hanging',\r\n                            },\r\n                            NUMBERING: {\r\n                                content: null,\r\n                                point: null,\r\n                                propertyName: 'Numbering type',\r\n                            }\r\n                        },\r\n                        required: true,\r\n                        content: null,\r\n                        point: null,\r\n                        propertyName: 'Modify Style',\r\n                    },\r\n\r\n                    APPLY_STYLE: {\r\n                        content: null,\r\n                        point: null,\r\n                        propertyName: 'Apply Style',\r\n                        property: {\r\n                            key: null,\r\n                            content: null,\r\n                            value: null,\r\n                        }\r\n                    },\r\n                },\r\n            },\r\n\r\n            generals: {\r\n                properties: {\r\n                    FILE_NAME: {\r\n                        content: null,\r\n                        point: null,\r\n                        type: 'Text',\r\n                        value: null,\r\n                        propertyName: 'File Name',\r\n                    },\r\n\r\n                    pageOrientation: {\r\n                        content: null,\r\n                        point: null,\r\n                        type: 'Option',\r\n                        propertyName: 'Page Orientation',\r\n                    },\r\n\r\n                    PAGE_SIZE: {\r\n                        content: null,\r\n                        point: null,\r\n                        type: 'Option',\r\n                        propertyName: 'Page Size',\r\n                    },\r\n\r\n                    MARGIN_TOP_ALL: {\r\n                        content: null,\r\n                        point: null,\r\n                        type: 'Option',\r\n                        propertyName: 'Margin top all',\r\n                    },\r\n\r\n                    MARGIN_LEFT_ALL: {\r\n                        content: null,\r\n                        point: null,\r\n                        type: 'Option',\r\n                        propertyName: 'Margin left all',\r\n                    },\r\n\r\n                    MARGIN_RIGHT_ALL: {\r\n                        content: null,\r\n                        point: null,\r\n                        type: 'Option',\r\n                        propertyName: 'Margin right all',\r\n                    },\r\n\r\n                    MARGIN_BOTTOM_ALL: {\r\n                        content: null,\r\n                        point: null,\r\n                        type: 'Option',\r\n                        propertyName: 'Margin bottom all',\r\n                    },\r\n\r\n                    AUTHOR: {\r\n                        content: null,\r\n                        point: null,\r\n                        type: 'Text',\r\n                        value: null,\r\n                        propertyName: 'Author',\r\n                    },\r\n\r\n                    TITLE: {\r\n                        content: null,\r\n                        point: null,\r\n                        type: 'Text',\r\n                        value: null,\r\n                        propertyName: 'Title',\r\n                    },\r\n                },\r\n            },\r\n\r\n            //popup thông tin đã thiết lập\r\n            isShowConfigureExam: false,\r\n            TypeProperty: [],\r\n            //dữ liệu thiết lập đề: enum,sheetIndex\r\n            configureExamData: [],\r\n            listCriteria: [],\r\n            listCriteriaExam: [],\r\n            examBankId: null,\r\n            isLoadingSaveCritera: false,\r\n\r\n            invalidData: [],\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        /**\r\n         * Lấy dữ liệu tiêu chí theo id đề thi\r\n         */\r\n        loadCriteriaByExamId() {\r\n            this.isLoading = true;\r\n            getCriteriaByExamBankId(this.selectedData).then(res => {\r\n                this.listCriteriaExam = res.data;\r\n            }).catch(error => {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setTimeout(() => {\r\n                    5\r\n                    this.isLoading = false;\r\n                }, 300);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Nếu văn bản quá dài nối đoạn đầu và đoạn cuối bằng dấu ...\r\n         * Ví dụ: Nếu văn bản quá dài nối đoạn đầu và đoạn cuối bằng dấu ... => Nếu văn bản ... cuối bằng dấu\r\n         * @param paragraphs\r\n         * @returns {(string|string)[]}\r\n         */\r\n        textWithEllipsis(paragraphs) {\r\n            const formattedText = [];\r\n            // Lặp qua mỗi đoạn văn bản trong mảng paragraphs\r\n            for (let index in paragraphs) {\r\n                if (paragraphs[index].length > 30) {\r\n                    // Tách thành từng từ\r\n                    const words = paragraphs[index].split(\" \");\r\n                    // Lấy 5 từ đầu\r\n                    const firstFiveWords = words.slice(0, 5).join(\" \");\r\n                    // Lấy 4 từ cuối\r\n                    const lastFourWords = words.slice(-4).join(\" \");\r\n                    // Nối 5 từ đầu và 4 từ cuối với nhau bằng dấu \"...\"\r\n                    const result = firstFiveWords + \" ...\" + lastFourWords;\r\n                    // Trả về mảng các đoạn văn bản với đoạn cuối đã được thêm dấu \"...\"\r\n                    formattedText.push(result);\r\n                } else {\r\n                    formattedText.push(paragraphs[index])\r\n                }\r\n            }\r\n            return formattedText;\r\n        },\r\n\r\n        /**\r\n         *  Click xem trước\r\n         */\r\n        previewExam() {\r\n            this.isShowConfigureExam = !this.isShowConfigureExam;\r\n            this.loadCriteriaByExamId();\r\n        },\r\n\r\n        /**\r\n         * Click nút xóa tiêu chí\r\n         * @param {C} data\r\n         */\r\n        deleteRowSelect(data) {\r\n            this.deletedItem = data;\r\n            this.isPopupDelete = !this.isPopupDelete;\r\n        },\r\n\r\n        /**\r\n         * Chấp nhận xóa tiêu chí\r\n         */\r\n        handleDeleteCriteria() {\r\n            this.popupLoading = true;\r\n            deleteCriteria(this.deletedItem).then(res => {\r\n                this.isLoading = true;\r\n                this.showToast('Xóa tiêu chí thành công');\r\n                this.listCriteria.splice(this.listCriteria.findIndex(record => record.CriteriaId === this.deletedItem.CriteriaId), 1);\r\n                console.log(res);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setTimeout(() => {\r\n                    this.popupLoading = false;\r\n                    this.isPopupDelete = false;\r\n                    this.isLoading = false;\r\n                }, 750);\r\n            });\r\n        },\r\n\r\n        onRowSelect(data) {\r\n            this.isShowConfigureExam = false;\r\n            const el = document.getElementById('scrollToFormatSheet');\r\n\r\n            el.scrollIntoView({behavior: 'smooth'});\r\n        },\r\n\r\n        /**\r\n         * Scroll tới vị trí id\r\n         * @param {*} id\r\n         */\r\n        scrollViewToId(id) {\r\n            const el = document.getElementById(id);\r\n            el.scrollIntoView({behavior: 'smooth'});\r\n        },\r\n\r\n        /**\r\n         * Xoá các value của apply style\r\n         */\r\n        changeApplyStyle() {\r\n            this.formats.properties.APPLY_STYLE.property.key = this.formats.properties.APPLY_STYLE.property.content = this.formats.properties.APPLY_STYLE.property.value = null;\r\n        },\r\n\r\n        /**\r\n         * Lưu tiêu chí\r\n         */\r\n        saveCriteriaSettings() {\r\n            this.invalidData = [];\r\n            this.listCriteria = [];\r\n            let validData = true;\r\n            let data = [];\r\n            //đang ở tab format\r\n            if (this.tabViewIndex === 0) {\r\n                for (let property in this.formats.properties) {\r\n                    let isHasChilds = false; // có nhiều thuộc tính con\r\n                    let isHasChild = false; // có 1 thuộc tính con\r\n                    let dataChild = [];\r\n                    let content = this.formats.properties[property].content;\r\n                    let point = this.formats.properties[property].point;\r\n                    let propertyType = this.TypeProperty[property];\r\n                    let propertyName = this.formats.properties[property].propertyName;\r\n                    let priority = 0;\r\n                    let required = this.formats.properties[property].required;\r\n                    for (let child in this.formats.properties[property]?.properties) {\r\n                        let invalidProperty = true;\r\n                        isHasChilds = true;\r\n                        let contentChild = this.formats.properties[property].properties[child].content;\r\n                        let pointChild = this.formats.properties[property].properties[child].point;\r\n                        let keyChild = `${property}-${child}`;\r\n                        if (required && content === null) {\r\n                            continue;\r\n                        }\r\n                        if (contentChild != null || pointChild != null) {\r\n                            if (contentChild == null) {\r\n                                this.invalidData[`c-${keyChild}`] = MESSAGE.INVALID_CONTENT_SETUP;\r\n                                invalidProperty = false;\r\n                                validData = false;\r\n                            }\r\n                            if (pointChild == null) {\r\n                                this.invalidData[`p-${keyChild}`] = MESSAGE.INVALID_POINT_SETUP;\r\n                                invalidProperty = false;\r\n                                validData = false;\r\n                            }\r\n                        }\r\n                        if (invalidProperty && contentChild != null && pointChild != null) {\r\n                            point += pointChild;\r\n                            dataChild.push({\r\n                                'key': this.TypeProperty[child],\r\n                                'value': contentChild,\r\n                                'point': pointChild,\r\n                            })\r\n                        }\r\n                    }\r\n\r\n                    for (let child in this.formats.properties[property]?.property) {\r\n                        isHasChild = true;\r\n                        let invalidProperty = true;\r\n                        let contentChild = this.formats.properties[property].property.content ?? [];\r\n                        let point = this.formats.properties[property].point;\r\n                        let keyChild = `${property}-${child}`;\r\n                        let key = null;\r\n                        if (propertyType === this.TypeProperty['APPLY_STYLE']) {\r\n                            key = this.formats.properties[property].property.key;\r\n                            if (content != null || point != null || key != null) {\r\n                                if (content == null) {\r\n                                    this.invalidData[`c-${property}`] = MESSAGE.INVALID_CONTENT_SETUP;\r\n                                    invalidProperty = false;\r\n                                    validData = false;\r\n                                }\r\n                                if (point == null) {\r\n                                    this.invalidData[`p-${property}`] = MESSAGE.INVALID_POINT_SETUP;\r\n                                    invalidProperty = false;\r\n                                    validData = false;\r\n                                }\r\n                                if (key == null) {\r\n                                    this.invalidData[`k-${property}`] = MESSAGE.INVALID_CONTENT_SETUP;\r\n                                    invalidProperty = false;\r\n                                    validData = false;\r\n                                }\r\n                            }\r\n                            switch (content) {\r\n                                case this.configureExamData.applyStyleEnum['PARAGRAPH'].value:\r\n                                    priority = 10;\r\n                                    if (contentChild === null) {\r\n                                        this.invalidData[`c-${keyChild}`] = MESSAGE.INVALID_CONTENT_SETUP;\r\n                                        invalidProperty = false;\r\n                                        validData = false;\r\n                                    } else {\r\n                                        let selectedValue = contentChild;\r\n                                        contentChild = [];\r\n                                        for (let index in selectedValue) {\r\n                                            contentChild.push(this.configureExamData.paragraphs[index]);\r\n                                        }\r\n                                        contentChild = contentChild.join(this.configureExamData.separator)\r\n                                    }\r\n                                    break;\r\n                                case this.configureExamData.applyStyleEnum['OTHER'].value:\r\n                                    priority = 10;\r\n                                    let valueChild = this.formats.properties[property].property.value;\r\n                                    if (valueChild === null) {\r\n                                        this.invalidData[`c-${keyChild}`] = MESSAGE.INVALID_CONTENT_SETUP;\r\n                                        invalidProperty = false;\r\n                                        validData = false;\r\n                                    }\r\n                                    contentChild = valueChild;\r\n                                    break;\r\n                                case this.configureExamData.applyStyleEnum['ALL'].value:\r\n                                    propertyType = this.TypeProperty['APPLY_STYLE_ALL'];\r\n                                    propertyName = 'Apply Style All';\r\n                                    break;\r\n                            }\r\n                        }\r\n\r\n                        if (invalidProperty && content != null && point != null) {\r\n                            dataChild = {\r\n                                'key': key,\r\n                                'value': contentChild,\r\n                            };\r\n                        }\r\n\r\n                    }\r\n                    // có các thuộc tính con\r\n                    if (isHasChilds) {\r\n                        if (content != null && dataChild.length > 0) {\r\n                            content = JSON.stringify({\r\n                                'key': content,\r\n                                'value': dataChild\r\n                            })\r\n                        } else if (content != null && dataChild.length === 0) {\r\n                            validData = false;\r\n                            this.invalidData[`c-${property}`] = MESSAGE.INVALID_CONTENT_CHILD_SETUP;\r\n                        }\r\n                    }\r\n                    // có 1 thuộc tính con\r\n                    else if (isHasChild) {\r\n                        if (content != null && dataChild != null) {\r\n                            content = JSON.stringify(dataChild);\r\n                        }\r\n                    }\r\n\r\n                    // dữ liệu hợp lệ\r\n                    if (validData && content != null && point != null) {\r\n                        data.push({\r\n                            exam_bank_id: this.examBankId,\r\n                            content: content,\r\n                            page: 0,\r\n                            paragraph: null,\r\n                            property_name: propertyName,\r\n                            property_type: propertyType,\r\n                            point: point,\r\n                            priority: priority,\r\n                        });\r\n                    }\r\n                }\r\n            } else if (this.tabViewIndex === 1) {\r\n                for (let property in this.inserts.properties) {\r\n                    let content = this.inserts.properties[property].content;\r\n                    let point = this.inserts.properties[property].point;\r\n                    let invalidProperty = true;\r\n                    let isHasChilds = false;\r\n                    let dataChild = [];\r\n                    if (content != null || point != null) {\r\n                        if (content == null) {\r\n                            this.invalidData[`c-${property}`] = this.MESSAGE.INVALID_CONTENT_SETUP;\r\n                            invalidProperty = false;\r\n                            validData = false;\r\n                        }\r\n                        if (point == null) {\r\n                            this.invalidData[`p-${property}`] = this.MESSAGE.INVALID_POINT_SETUP;\r\n                            invalidProperty = false;\r\n                            validData = false;\r\n                        }\r\n                    }\r\n                    for (let child in this.inserts.properties[property]?.properties) {\r\n                        isHasChilds = true;\r\n                        let keyChild = this.TypeProperty[child];\r\n                        let contentChild = this.inserts.properties[property].properties[child].content;\r\n                        let pointChild = this.inserts.properties[property].properties[child].point;\r\n                        if (contentChild != null || pointChild != null) {\r\n                            if (content == null) {\r\n                                this.invalidData[`c-${property}`] = this.MESSAGE.INVALID_CONTENT_SETUP;\r\n                                invalidProperty = false;\r\n                                validData = false;\r\n                            }\r\n                            if (point == null) {\r\n                                this.invalidData[`p-${property}`] = this.MESSAGE.INVALID_POINT_SETUP;\r\n                                invalidProperty = false;\r\n                                validData = false;\r\n                            }\r\n                            if (contentChild == null) {\r\n                                this.invalidData[`c-${property}-${child}`] = this.MESSAGE.INVALID_CONTENT_SETUP;\r\n                                invalidProperty = false;\r\n                                validData = false;\r\n                            }\r\n                            if (pointChild == null) {\r\n                                this.invalidData[`p-${property}-${child}`] = this.MESSAGE.INVALID_POINT_SETUP;\r\n                                invalidProperty = false;\r\n                                validData = false;\r\n                            }\r\n                        }\r\n\r\n\r\n                        if (invalidProperty && contentChild != null && pointChild != null && content != null && point != null) {\r\n                            point += pointChild;\r\n                            if (keyChild === this.TypeProperty['FOOTNOTE_CONTENT']) {\r\n                                const selectedIndex = this.configureExamData.paragraphsEllipsis.findIndex(option => option === contentChild);\r\n                                contentChild = this.configureExamData.paragraphs[selectedIndex];\r\n                            }\r\n                            dataChild.push({\r\n                                'key': keyChild,\r\n                                'value': contentChild,\r\n                                'point': pointChild,\r\n                            })\r\n                        }\r\n                    }\r\n\r\n                    if (isHasChilds) {\r\n                        if (content != null && point != null) {\r\n                            if (this.TypeProperty[property] === this.TypeProperty['IMAGE']) {\r\n                                dataChild.push({\r\n                                    'key': this.TypeProperty['NAME_IMAGE'],\r\n                                    'value': content,\r\n                                    'point': this.inserts.properties[property].point,\r\n                                })\r\n                            } else if (this.TypeProperty[property] === this.TypeProperty['FOOTNOTE']) {\r\n                                dataChild.push({\r\n                                    'key': this.TypeProperty['INSERT_FOOTNOTE'],\r\n                                    'value': content,\r\n                                    'point': this.inserts.properties[property].point,\r\n                                })\r\n                            }\r\n                            content = JSON.stringify({\r\n                                'key': content,\r\n                                'value': dataChild\r\n                            })\r\n                        }\r\n                    }\r\n\r\n                    // dữ liệu hợp lệ\r\n                    if (validData && content != null && point != null) {\r\n                        data.push({\r\n                            exam_bank_id: this.examBankId,\r\n                            content: content,\r\n                            page: 0,\r\n                            paragraph: null,\r\n                            property_name: this.inserts.properties[property].propertyName,\r\n                            property_type: this.TypeProperty[property],\r\n                            point: point,\r\n                            priority: 0,\r\n                        });\r\n                    }\r\n                }\r\n            } else if (this.tabViewIndex === 2) {\r\n                for (let property in this.generals.properties) {\r\n                    let invalidProperty = true;\r\n                    let content = this.generals.properties[property].content;\r\n                    if (this.generals.properties[property].content != null || this.generals.properties[property].point != null) {\r\n                        if ((this.generals.properties[property].content == null || (this.generals.properties[property].type === 'Text' && this.generals.properties[property].content === ''))) {\r\n                            this.invalidData[`c-${property}`] = this.MESSAGE.INVALID_CONTENT_SETUP;\r\n                            invalidProperty = false;\r\n                            validData = false;\r\n                        }\r\n                        if (this.generals.properties[property].point == null) {\r\n                            this.invalidData[`p-${property}`] = this.MESSAGE.INVALID_POINT_SETUP;\r\n                            invalidProperty = false;\r\n                            validData = false;\r\n                        }\r\n                        if (this.generals.properties[property].content === this.configureExamData.infoTypeEnums['OTHER'].value && this.generals.properties[property]?.value !== undefined && this.generals.properties[property]?.value === null) {\r\n                            this.invalidData[`v-${property}`] = this.MESSAGE.INVALID_CONTENT_SETUP;\r\n                            invalidProperty = false;\r\n                            validData = false;\r\n                        }\r\n                    }\r\n                    if (invalidProperty && this.generals.properties[property].content != null && this.generals.properties[property].point != null) {\r\n                        if (this.generals.properties[property]?.value !== undefined) {\r\n                            content = JSON.stringify({\r\n                                'key': this.generals.properties[property].content,\r\n                                'value': this.generals.properties[property].value,\r\n                            });\r\n                        }\r\n                        //add vào danh sách tiêu chí\r\n                        data.push({\r\n                            exam_bank_id: this.examBankId,\r\n                            content: content,\r\n                            page: 0,\r\n                            paragraph: null,\r\n                            property_name: this.generals.properties[property].propertyName,\r\n                            property_type: this.TypeProperty[property],\r\n                            point: this.generals.properties[property].point,\r\n                            priority: 0,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            // ko có tiêu chí lỗi\r\n            if (validData) {\r\n                this.listCriteria = data;\r\n                //clear giá trị\r\n                for (let property in this.generals.properties) {\r\n                    this.generals.properties[property].content = this.generals.properties[property].point = this.generals.properties[property].value = null;\r\n                }\r\n                for (let property in this.formats.properties) {\r\n                    this.formats.properties[property].content = this.formats.properties[property].point = null\r\n                    for (let child in this.formats.properties[property]?.properties) {\r\n                        this.formats.properties[property].properties[child].content = this.formats.properties[property].properties[child].point = null;\r\n                    }\r\n                    for (let child in this.formats.properties[property]?.property) {\r\n                        this.formats.properties[property].property.content = this.formats.properties[property].property.point = this.formats.properties[property].property.key = null;\r\n                    }\r\n                }\r\n                for (let property in this.inserts.properties) {\r\n                    this.inserts.properties[property].content = this.inserts.properties[property].point = null\r\n                    for (let child in this.inserts.properties[property]?.properties) {\r\n                        this.inserts.properties[property].properties[child].content = this.inserts.properties[property].properties[child].point = null;\r\n                    }\r\n                    for (let child in this.inserts.properties[property]?.property) {\r\n                        this.inserts.properties[property].property.content = this.inserts.properties[property].property.point = this.inserts.properties[property].property.key = null;\r\n                    }\r\n                }\r\n            } else return;\r\n            if (this.listCriteria.length > 0) {\r\n                this.isLoadingSaveCritera = true;\r\n                saveCriteria(this.listCriteria).then(res => {\r\n                    this.listCriteria = [];\r\n                    this.totalScore = res.data.totalPoint;\r\n                    this.$store.dispatch('handleSuccess', 'Thiết lập tiêu chí thành công');\r\n                }).catch(error => {\r\n                    if (error.request.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\r\n                        this.$store.dispatch('handleServerError');\r\n                    }\r\n                    console.log(error);\r\n                }).finally(() => {\r\n                    setTimeout(() => {\r\n                        this.isLoadingSaveCritera = false;\r\n                    }, 300);\r\n                })\r\n            } else if (Object.keys(this.invalidData).length === 0) {\r\n                this.$store.dispatch('handleError', 'Chưa thiết lập tiêu chí');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Load dữ liệu thiết lập đề: enum, sheetIndex\r\n         */\r\n        async loadConfigExamData() {\r\n            this.examBankId = this.$route.params.id;\r\n            let me = this;\r\n            this.isLoadingSaveCritera = true;\r\n            await configureExam(this.examBankId).then(res => {\r\n                me.configureExamData = res.data;\r\n                me.configureExamData.paragraphsEllipsis = this.textWithEllipsis(res.data.paragraphs)\r\n                me.configureExamData.paragraphs = res.data.paragraphs\r\n                me.totalScore = res.data.data.criterias_sum_point ?? 0;\r\n                me.selectedData = res.data.data;\r\n                me.TypeProperty = res.data.typeProperty;\r\n            }).catch(error => {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setTimeout(() => {\r\n                    this.isLoadingSaveCritera = false;\r\n                }, 300);\r\n            })\r\n        },\r\n    },\r\n\r\n    async created() {\r\n        await this.loadConfigExamData();\r\n    },\r\n\r\n    mounted() {\r\n    },\r\n\r\n    computed: {\r\n        MESSAGE() {\r\n            return MESSAGE\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form-content {\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.form-group:not(.top) {\r\n    margin-bottom: 16px;\r\n}\r\n\r\n.right-content .text-title {\r\n    font-size: 15px;\r\n    margin-bottom: 15px;\r\n    color: #212121;\r\n    position: relative;\r\n    font-weight: 700;\r\n}\r\n\r\n.form-group:last-child {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.form-group label.top-label {\r\n    padding: 0;\r\n    color: #666;\r\n    font-size: 14px;\r\n    font-weight: 400 !important;\r\n    margin-bottom: 8px;\r\n}\r\n\r\n.right-content .list-control .col-sp {\r\n    width: 12px;\r\n}\r\n\r\n/* .box.list-content {\r\n    overflow: auto;\r\n} */\r\n\r\n/* .box.list-content .p-tabview.p-component {\r\n    flex: 1;\r\n    overflow: auto;\r\n} */\r\n.flex-rtl {\r\n    display: flex;\r\n    flex-direction: rtl;\r\n    direction: rtl;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.box.list-content .p-tabview-nav-content .p-tabview-nav .totalScore {\r\n    position: absolute;\r\n    right: 0;\r\n}\r\n\r\n.totalScore b {\r\n    color: #212121;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n}\r\n\r\n.form-list .p-button:enabled:hover {\r\n    border-color: #e0e0e0 !important;\r\n}\r\n\r\n.box.list-content .p-tabview-nav-content .p-tabview-nav .totalScore.p-disabled,\r\n.p-component:disabled {\r\n    /* opacity: 1 !important; */\r\n    font-size: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}