{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Toast from 'primevue/toast';\nimport Textarea from 'primevue/textarea';\nimport Button from 'primevue/button';\nimport DataTable from 'primevue/datatable';\nimport Column from 'primevue/column';\nimport Dropdown from 'primevue/dropdown';\nimport InputText from 'primevue/inputtext';\nimport MultiSelect from 'primevue/multiselect';\nimport Dialog from 'primevue/dialog';\nimport Skeleton from 'primevue/skeleton';\nimport Calendar from 'primevue/calendar';\nimport { getExamBankSetting } from \"/api/exam-bank\";\nimport { generateCode, convertTimezoneToDatetime, convertTime } from '@/common/functions';\nimport { saveData, getDataDepartment } from '/api/department';\nimport { saveExamManager, checkExamShiftCodeExits, updateExamShift, updateExamManager, insertExamShift, getExamShifts, deleteExamShift } from '/api/exam-manager';\nimport TheLoadingProgress from '@/components/LoadingProgress.vue';\nimport { MESSAGE, RESPONSE_STATUS } from \"@/common/enums\";\nexport default {\n  emits: [\"showExamManager\", \"showToast\", \"loadExamManager\"],\n  props: {\n    modeModal: {\n      default: null\n    },\n    selectedData: {\n      default: null\n    }\n  },\n  components: {\n    MultiSelect,\n    InputText,\n    Dropdown,\n    DataTable,\n    Column,\n    Dialog,\n    Skeleton,\n    Button,\n    Calendar,\n    Textarea,\n    Toast,\n    TheLoadingProgress\n  },\n  data() {\n    return {\n      exam: {\n        id: null,\n        exam_code: null,\n        exam_name: null,\n        start_date: null,\n        end_date: null,\n        note: null,\n        listExamShift: []\n      },\n      isDisabledExamManager: false,\n      objectLoading: {},\n      isDisabledExamShift: false,\n      isLoading: false,\n      isCollapsed: false,\n      isPopupDelete: false,\n      isLoadingPopupExamShift: false,\n      isLoadingDelete: false,\n      warningVisible: false,\n      defaultExamShift: {\n        exam_shift_id: null,\n        exam_shift_code: null,\n        exam_shift_name: null,\n        start_date: null,\n        end_date: null,\n        departments: null,\n        exam_bank_id: null,\n        note: null\n      },\n      isLoadingExamShift: false,\n      examResult: [],\n      examshift: {\n        exam_shift_id: null,\n        exam_shift_code: null,\n        exam_shift_name: null,\n        start_date: null,\n        end_date: null,\n        departments: null,\n        exam_bank_id: null,\n        note: null\n      },\n      //chi tiết ca thi\n      examshiftdetail: {\n        ExamShiftDetailId: null,\n        exam_shift_id: null,\n        departmentsId: null,\n        exam_bank_id: null\n      },\n      selectedDataProp: {},\n      examBankSetting: [],\n      selectedExamShift: {\n        exam_shift_id: null,\n        exam_shift_code: null,\n        exam_shift_name: null,\n        start_date: null,\n        end_date: null,\n        departments: null,\n        exam_bank_id: null,\n        note: null\n      },\n      selectedListExamShift: null,\n      departments: [],\n      listExamShift: [],\n      invalidExamShift: [],\n      examShiftDialogVisible: false,\n      invalidExamManager: [],\n      modeGenerateExamManager: true,\n      //cho phép sinh mã theo tên\n\n      modeGenerateExamShift: true,\n      //sinh mã ca thi\n\n      modeExamShiftModal: this.FormMode.INSERT\n    };\n  },\n  methods: {\n    /**\r\n     * Validate mã phòng thi\r\n     * Ko cho phép nhập các kí tự đặc biệt\r\n     * @param {*} event\r\n     */\n    handlerInputdepartmentsCode(event) {\n      let pattern = /[\\W_]/g;\n      let res = event.key.match(pattern);\n      if (res) {\n        event.preventDefault();\n      }\n    },\n    /**\r\n     * Lưu ca thi\r\n     */\n    async saveExamShift() {\n      this.isDisabledExamShift = true;\n      if (await this.validateExamShift()) {\n        this.isLoadingPopupExamShift = true;\n        //trạng thái của form kì thi\n        switch (this.modeModal) {\n          //thêm mới kì thi\n          case this.FormMode.INSERT:\n            this.isLoadingPopupExamShift = false;\n            this.listExamShift.push({\n              ...this.selectedExamShift\n            });\n            this.showExamShiftDialogVisible();\n            this.isDisabledExamShift = false;\n            break;\n          //cập nhật kì thi\n          case this.FormMode.UPDATE:\n            switch (this.modeExamShiftModal) {\n              //thêm mới ca thi với kì thi đã có\n              case this.FormMode.INSERT:\n                insertExamShift({\n                  ...this.selectedExamShift,\n                  id: this.selectedDataProp.id\n                }).then(res => {\n                  this.$store.dispatch('handleSuccess', 'Thêm mới thành công');\n                  this.examshift = {\n                    ...this.defaultExamShift\n                  };\n                  this.selectedExamShift = {\n                    ...this.defaultExamShift\n                  };\n                  this.examShiftDialogVisible = false;\n                  this.loadExamShift();\n                }).catch(error => {\n                  if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\n                    for (var itemError in error.response.data.errors) {\n                      console.log(error.response.data.errors);\n                      this.invalidExamShift[itemError] = error.response.data.errors[itemError][0];\n                    }\n                  }\n                }).finally(() => {\n                  this.isDisabledExamShift = false;\n                  this.isLoadingPopupExamShift = false;\n                });\n                break;\n              //cập nhật ca thi\n              case this.FormMode.UPDATE:\n                if (JSON.stringify(this.selectedExamShift) !== JSON.stringify(this.examshift)) {\n                  // this.warningVisible = true;\n                  //thay đổi đề thi hoặc phòng thi\n                  if (JSON.stringify(this.selectedExamShift.departments) !== JSON.stringify(this.examshift.departments) || JSON.stringify(this.selectedExamShift.exam_bank_id) !== JSON.stringify(this.examshift.exam_bank_id)) {\n                    this.warningVisible = true;\n                    this.isDisabledExamShift = false;\n                  } else {\n                    this.updateExamShift();\n                  }\n                } else {\n                  this.showExamShiftDialogVisible();\n                  this.isDisabledExamShift = false;\n                  this.isLoadingPopupExamShift = false;\n                }\n                break;\n              default:\n                break;\n            }\n            break;\n          default:\n            break;\n        }\n      } else {\n        this.isLoadingPopupExamShift = false;\n        this.isDisabledExamShift = false;\n      }\n    },\n    /**\r\n     * Trước khi ẩn form ca thi\r\n     */\n    afterHideExamShiftDialog() {\n      this.examshift = {\n        ...this.defaultExamShift\n      };\n      this.selectedExamShift = {\n        ...this.defaultExamShift\n      };\n      this.modeExamShiftModal = this.FormMode.INSERT;\n      this.isLoadingExamShift = false;\n    },\n    /**\r\n     * Call api cập nhật ca thi\r\n     * @param {*} flag true: xóa chi tiết ca thi, false: không xóa\r\n     */\n    async updateExamShift(flag = false) {\n      await updateExamShift({\n        ...this.selectedExamShift,\n        id: this.selectedDataProp.id,\n        Flag: flag\n      }).then(res => {\n        this.$store.dispatch('handleSuccess', MESSAGE.HTTP_UPDATE_OK);\n        this.examshift = {\n          ...this.defaultExamShift\n        };\n        this.selectedExamShift = {\n          ...this.defaultExamShift\n        };\n        this.examShiftDialogVisible = false;\n        this.loadExamShift();\n      }).catch(error => {\n        if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\n          for (var itemError in error.response.data.errors) {\n            console.log(error.response.data.errors);\n            this.invalidExamShift[itemError] = error.response.data.errors[itemError][0];\n          }\n        }\n      }).finally(() => {\n        this.isLoadingPopupExamShift = false;\n        this.warningVisible = false;\n        this.isDisabledExamShift = false;\n      });\n    },\n    /**\r\n     * Lấy danh sách ca thi\r\n     */\n    async loadExamShift() {\n      this.isLoading = true;\n      this.listExamShift = [];\n      await getExamShifts(this.selectedData).then(res => {\n        this.listExamShift = res.data['exam_shifts'];\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 300);\n      });\n    },\n    /**\r\n     * Ẩn/hiện form thêm ca thi\r\n     */\n    showExamShiftDialogVisible() {\n      // if (!this.validateExamManager()) {\n      //     this.$store.dispatch('handleError', 'Chưa chọn thông tin kì thi');\n      //     return;\n      // }\n      this.examShiftDialogVisible = !this.examShiftDialogVisible;\n      this.invalidExamShift = [];\n    },\n    /**\r\n     * click nút lọc\r\n     * author: DPQuy(13/11/2022)\r\n     * **/\n    btnFilterOnClick() {\n      //gọi hàm show filterbox\n      this.showFilterBox();\n    },\n    /**\r\n     * Sự kiện chọn item ca thi\r\n     */\n    onRowSelectExamShift(data) {\n      //mảng giá trị selected\n      this.selectedExamShift = {\n        ...data\n      };\n      //convert datetime\n      this.selectedExamShift.end_date = new Date(this.selectedExamShift.end_date);\n      this.selectedExamShift.start_date = new Date(this.selectedExamShift.start_date);\n\n      //sử dụng khi cập nhật kì thi\n      if (this.modeModal === this.FormMode.UPDATE) {\n        // danh sách phòng theo từng ca thi(lấy duy nhất vì 1 phòng sử dụng nhiều đề nên bị duplicate)\n        this.selectedExamShift.departments = [...new Set(this.selectedExamShift.departments.map(item => item.id))];\n        this.selectedExamShift.exam_shift_id = data.id;\n        //danh sách ca thi\n        this.selectedExamShift.exam_bank_id = [...new Set(this.selectedExamShift.exam_banks.map(item => item.id))];\n      }\n      this.examshift = {\n        ...this.selectedExamShift\n      };\n    },\n    /**\r\n     * Lấy danh sách phòng thi\r\n     */\n    async loadDepartments() {\n      await getDataDepartment().then(res => {\n        this.departments = res.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    /**\r\n     * Xử lý hàm sinh mã theo tên\r\n     */\n    handlerGenerateCode(name) {\n      if (name === 'exam' && this.modeGenerateExamManager) this.exam.exam_code = generateCode(this.exam.exam_name);\n      if (name === 'examShift' && this.modeGenerateExamShift) {\n        console.log(this.selectedExamShift.exam_shift_name);\n        this.selectedExamShift.exam_shift_code = generateCode(this.selectedExamShift.exam_shift_name);\n      }\n    },\n    /**\r\n     * Validate mã\r\n     * Ko cho phép nhập các kí tự đặc biệt\r\n     * @param {*} event\r\n     */\n    handlerInputCode(event) {\n      let pattern = /[\\W_]/g;\n      let res = event.key.match(pattern);\n      if (res) {\n        event.preventDefault();\n      }\n    },\n    /**\r\n     * Xóa ca thi\r\n     * @param {*} index\r\n     */\n    btnRemoveExamShift(index) {\n      this.isPopupDelete = true;\n    },\n    /**\r\n     * Click xóa ca thi\r\n     */\n    handlerDelete() {\n      this.isLoadingDelete = true;\n      switch (this.modeModal) {\n        case this.FormMode.INSERT:\n          break;\n        case this.FormMode.UPDATE:\n          deleteExamShift(this.selectedExamShift).then(res => {\n            this.$store.dispatch('handleSuccess', MESSAGE.HTTP_DELETE_OK);\n            this.loadExamShift();\n          }).catch(error => {}).finally(() => {\n            this.examShiftDialogVisible = false;\n            this.isPopupDelete = false;\n            this.isLoadingDelete = false;\n          });\n          break;\n        default:\n          break;\n      }\n    },\n    /**\r\n     * Đóng form\r\n     */\n    closeExamManagerPopup() {\n      this.$emit('showExamManager');\n    },\n    /**\r\n     * Click nút lưu kì thi\r\n     */\n    async saveExamManager() {\n      this.isDisabledExamManager = true;\n      if (this.validateExamManager()) {\n        try {\n          switch (this.modeModal) {\n            case this.FormMode.INSERT:\n              this.exam.listExamShift = [];\n              this.exam.listExamShift = this.listExamShift;\n              saveExamManager(this.exam).then(res => {\n                this.$emit(\"showExamManager\");\n                this.$emit(\"loadExamManager\");\n              }).then(res => {\n                this.$store.dispatch('handleSuccess', this.Message.HTTP_INSERT_OK);\n              }).catch(error => {\n                if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\n                  for (var itemError in error.response.data.errors) {\n                    console.log(error.response.data.errors);\n                    this.invalidExamManager[itemError] = error.response.data.errors[itemError][0];\n                  }\n                }\n              }).finally(() => {\n                this.isDisabledExamManager = false;\n              });\n              break;\n            case this.FormMode.UPDATE:\n              //kiểm tra dữ liệu có thay đổi hay không\n              //1.có thay đổi\n              if (JSON.stringify({\n                exam_code: this.selectedDataProp.exam_code,\n                exam_name: this.selectedDataProp.exam_name,\n                start_date: this.selectedDataProp.start_date,\n                end_date: this.selectedDataProp.end_date,\n                note: this.selectedDataProp.note\n              }) !== JSON.stringify({\n                exam_code: this.exam.exam_code,\n                exam_name: this.exam.exam_name,\n                start_date: this.exam.start_date,\n                end_date: this.exam.end_date,\n                note: this.exam.note\n              })) {\n                await updateExamManager({\n                  id: this.exam.id,\n                  exam_code: this.exam.exam_code,\n                  exam_name: this.exam.exam_name,\n                  start_date: this.exam.start_date,\n                  end_date: this.exam.end_date,\n                  note: this.exam.note\n                }).then(res => {\n                  this.$emit(\"showExamManager\");\n                  this.$emit(\"loadExamManager\");\n                  this.$store.dispatch('handleSuccess', this.Message.HTTP_UPDATE_OK);\n                }).catch(error => {\n                  console.log(error);\n                }).finally(() => {\n                  this.isDisabledExamManager = false;\n                });\n              } else {\n                this.isDisabledExamManager = false;\n              }\n              break;\n            default:\n              this.isDisabledExamManager = false;\n              break;\n          }\n        } catch (error) {\n          this.isDisabledExamManager = false;\n          console.log(error);\n        }\n      } else {\n        this.isDisabledExamManager = false;\n      }\n    },\n    /**\r\n     * Validate kì thi\r\n     */\n    validateExamManager() {\n      this.invalidData = [];\n      var invalid = true;\n      if (this.exam.exam_code == null || String(this.exam.exam_code).trim() == '') {\n        this.invalidExamManager['exam_code'] = 'Mã kì thi không được để trống';\n        invalid = false;\n      }\n      if (this.exam.exam_name == null || String(this.exam.exam_name).trim() == '') {\n        this.invalidExamManager['exam_name'] = 'Tên kì thi không được để trống';\n        invalid = false;\n      }\n      if (this.exam.start_date == null) {\n        this.invalidExamManager['start_date'] = 'Ngày bắt đầu kì thi không được để trống';\n        invalid = false;\n      }\n      if (this.exam.end_date == null) {\n        this.invalidExamManager['end_date'] = 'Ngày kết thúc kì thi không được để trống';\n        invalid = false;\n      }\n      if (this.exam.end_date != null && this.exam.start_date != null && this.exam.end_date.getTime() - this.exam.start_date.getTime() < 2 * 60 * 60 * 1000) {\n        this.invalidExamManager['end_date'] = 'Thời gian thi tối thiểu phải lớn hơn 2h';\n        invalid = false;\n      }\n      if (!invalid) return invalid;\n      if (this.listExamShift.length === 0) {\n        this.invalidExamManager['ExamShift'] = 'Ca thi không được để trống';\n        invalid = false;\n      }\n      return invalid;\n    },\n    functionTest() {\n      console.log(convertTimezoneToDatetime(this.exam.end_date.getTime()));\n    },\n    /**\r\n     * Validate ca thi\r\n     */\n    async validateExamShift() {\n      this.invalidExamShift = [];\n      var invalid = true;\n      this.isLoadingPopupExamShift = true;\n      if (this.selectedExamShift.exam_shift_code == null || String(this.selectedExamShift.exam_shift_code).trim() === '') {\n        this.invalidExamShift['exam_shift_code'] = 'Mã ca thi không được để trống';\n        invalid = false;\n      }\n      if (this.selectedExamShift.exam_shift_name == null || String(this.selectedExamShift.exam_shift_name).trim() === '') {\n        this.invalidExamShift['exam_shift_name'] = 'Tên ca thi không được để trống';\n        invalid = false;\n      }\n      if (this.selectedExamShift.start_date == null) {\n        this.invalidExamShift['start_date'] = 'Ngày bắt đầu không được để trống';\n        invalid = false;\n      }\n      if (this.selectedExamShift.end_date == null) {\n        this.invalidExamShift['end_date'] = 'Ngày kết thúc không được để trống';\n        invalid = false;\n      }\n      if (this.selectedExamShift.start_date != null && this.selectedExamShift.end_date != null && this.selectedExamShift.end_date.getTime() - this.selectedExamShift.start_date.getTime() < 2 * 60 * 60 * 1000) {\n        this.invalidExamShift['end_date'] = 'Thời gian tối tiểu là 2h';\n        invalid = false;\n      }\n      if (this.selectedExamShift.departments == null) {\n        this.invalidExamShift['departments'] = 'Phòng thi không được để trống';\n        invalid = false;\n      }\n      if (this.selectedExamShift.exam_bank_id == null) {\n        this.invalidExamShift['exam_bank_id'] = 'Đề thi không được để trống';\n        invalid = false;\n      }\n      if (!invalid) return;\n      var exam_shift_code = this.selectedExamShift.exam_shift_code;\n      var valObj = this.listExamShift.filter(function (item) {\n        if (item.exam_shift_code === exam_shift_code) return item;\n      });\n      if (valObj.length && this.modeExamShiftModal !== this.FormMode.UPDATE) {\n        this.invalidExamShift['exam_shift_code'] = 'Mã ca thi đã tồn tại';\n        invalid = false;\n      } else if (this.selectedExamShift.exam_shift_code != null || String(this.selectedExamShift.exam_shift_code).trim() === '') {\n        //gọi api kiểm tra mã\n        await checkExamShiftCodeExits({\n          data: this.selectedExamShift,\n          mode: this.modeExamShiftModal\n        }).then(res => {\n          if (res.data.result) {\n            this.invalidExamShift['exam_shift_code'] = 'Mã ca thi đã tồn tại';\n            invalid = false;\n          }\n        }).catch(error => {\n          this.$store.dispatch('handleError');\n        }).finally(() => {\n          setTimeout(() => {\n            this.isLoadingPopupExamShift = false;\n          }, 750);\n        });\n      }\n      return invalid;\n    },\n    /**\r\n     * Event xử lý data selected\r\n     */\n    handlerPropData() {\n      if (this.modeModal === this.FormMode.UPDATE) {\n        this.isLoading = true;\n        this.selectedDataProp = {\n          ...this.selectedData\n        };\n        getExamShifts(this.selectedDataProp).then(res => {\n          this.listExamShift = res.data['exam_shifts'];\n        }).catch(error => {\n          console.log(error);\n        }).finally(() => {\n          setTimeout(() => {});\n          this.isLoading = false;\n        }, 300);\n        this.exam = {\n          ...this.selectedDataProp\n        };\n        this.exam.start_date = new Date(this.selectedDataProp.start_date);\n        this.exam.end_date = new Date(this.selectedDataProp.end_date);\n        // this.selectedDataProp = {...this.exam};\n        // this.selectedListExamShift = JSON.parse(this.exam.ExamShift);\n        // //ca thi\n        // this.listExamShift = this.getUniqueItems(this.selectedListExamShift, 'exam_shift_code');\n      }\n    },\n    /**\r\n     * Lấy danh sách đề thi đã thiết lập\r\n     */\n    getExamBankSetting() {\n      getExamBankSetting().then(res => {\n        this.examBankSetting = res.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    /**\r\n     * Sự kiện nhấn phím\r\n     * @param {*} event\r\n     */\n    handleKeyDown(event) {\n      if (event.keyCode === this.KeyCode.ENTER) {\n        //nếu form ca thi , form cảnh báo xóa, form cảnh báo thay đổi ko mở\n        //thì gọi hàm lưu kì thi\n        if (!this.examShiftDialogVisible && !this.isPopupDelete && !this.warningVisible) {\n          this.saveExamManager();\n        }\n\n        //hiển thị form cảnh báo thay đổi đề thi, phòng thi\n        //gọi hàm cập nhật ca thi\n        if (this.warningVisible) {\n          this.updateExamShift();\n        }\n      }\n      if (event.keyCode === this.KeyCode.ESC) {\n        //nếu form ca thi ko mở\n        //đóng form kì thi\n        if (!this.examShiftDialogVisible && !this.isPopupDelete) {\n          this.$emit(\"showExamManager\");\n          this.$emit(\"loadExamManager\");\n        }\n      }\n    }\n  },\n  created() {\n    // //lấy danh sách phòng thi\n    this.loadDepartments();\n    // //lấy danh sách đề thi đã thiết lập\n    this.getExamBankSetting();\n    // //thông tin cập nhật nếu ở trạng thái sửa\n    this.handlerPropData();\n    document.addEventListener('keydown', this.handleKeyDown);\n  },\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n};","map":{"version":3,"names":["Toast","Textarea","Button","DataTable","Column","Dropdown","InputText","MultiSelect","Dialog","Skeleton","Calendar","getExamBankSetting","generateCode","convertTimezoneToDatetime","convertTime","saveData","getDataDepartment","saveExamManager","checkExamShiftCodeExits","updateExamShift","updateExamManager","insertExamShift","getExamShifts","deleteExamShift","TheLoadingProgress","MESSAGE","RESPONSE_STATUS","emits","props","modeModal","default","selectedData","components","data","exam","id","exam_code","exam_name","start_date","end_date","note","listExamShift","isDisabledExamManager","objectLoading","isDisabledExamShift","isLoading","isCollapsed","isPopupDelete","isLoadingPopupExamShift","isLoadingDelete","warningVisible","defaultExamShift","exam_shift_id","exam_shift_code","exam_shift_name","departments","exam_bank_id","isLoadingExamShift","examResult","examshift","examshiftdetail","ExamShiftDetailId","departmentsId","selectedDataProp","examBankSetting","selectedExamShift","selectedListExamShift","invalidExamShift","examShiftDialogVisible","invalidExamManager","modeGenerateExamManager","modeGenerateExamShift","modeExamShiftModal","FormMode","INSERT","methods","handlerInputdepartmentsCode","event","pattern","res","key","match","preventDefault","saveExamShift","validateExamShift","push","showExamShiftDialogVisible","UPDATE","then","$store","dispatch","loadExamShift","catch","error","response","status","HTTP_UNPROCESSABLE_ENTITY","itemError","errors","console","log","finally","JSON","stringify","afterHideExamShiftDialog","flag","Flag","HTTP_UPDATE_OK","setTimeout","btnFilterOnClick","showFilterBox","onRowSelectExamShift","Date","Set","map","item","exam_banks","loadDepartments","handlerGenerateCode","name","handlerInputCode","btnRemoveExamShift","index","handlerDelete","HTTP_DELETE_OK","closeExamManagerPopup","$emit","validateExamManager","Message","HTTP_INSERT_OK","invalidData","invalid","String","trim","getTime","length","functionTest","valObj","filter","mode","result","handlerPropData","handleKeyDown","keyCode","KeyCode","ENTER","ESC","created","document","addEventListener","beforeDestroy","removeEventListener"],"sources":["E:\\khoaluan\\w-score\\vue\\src\\views\\user\\components\\ExamManagerPopup.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-list flex-grow-1 d-flex\">\r\n        <div class=\"d-flex flex-column flex-grow-1\">\r\n            <div class=\"d-flex flex-row title-box align-items-center\">\r\n                <div class=\"icon24 back cursor-pointer me-2\" @click=\"closeExamManagerPopup\"></div>\r\n                <div class=\"list-title flex-grow-1 text-start\">{{ modeModal === FormMode.INSERT ? 'Thêm' : 'Sửa' }} kì\r\n                    thi\r\n                </div>\r\n                <div class=\"right-toolbar d-flex flex-row\">\r\n                </div>\r\n            </div>\r\n            <div class=\"flex-grow-1 flex-row row gx-0 gap-3\">\r\n                <TheLoadingProgress v-if=\"isLoading\"/>\r\n                <div class=\"col-3 left-grade\" :class=\"{'collage': isCollapsed}\">\r\n                    <div class=\"title text-start d-flex justify-content-between\">\r\n                        <div class=\"text\">Thông tin kì thi</div>\r\n                        <div class=\"btn-collapse icon-toggle icon24-only\" @click=\"isCollapsed = true\"></div>\r\n                    </div>\r\n                    <div class=\"w-100 h-100\">\r\n                        <div class=\"outer\" @click=\"isCollapsed = false\">\r\n                            <div class=\"left-grade-content_collage inner rotate\">\r\n                                <div style=\"margin: auto;\">Thông tin kì thi</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"left-grade-content\">\r\n                            <div class=\"group-form_box\">\r\n                                <div class=\"d-flex\">\r\n                                    <div class=\"label\">1. Thông tin kì thi</div>\r\n                                </div>\r\n                                <div class=\"\">\r\n                                </div>\r\n                                <div class=\"ms-error-text\"></div>\r\n                            </div>\r\n                            <div class=\"group-form_box mt-3\">\r\n                                <div class=\"d-flex\">\r\n                                    <div class=\"label\">2. Thông tin ca thi</div>\r\n                                    <div class=\"icon16 icon-note has-tooltip\"\r\n                                         v-tooltip.top=\"{ value: 'Ca thi là bắt buộc', escape: true, class: 'custom-error' }\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"\">\r\n                                </div>\r\n                                <div class=\"ms-error-text\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"list-content flex1 flex-column right-grade\">\r\n                    <div class=\"box list-content flex1 flex-column\">\r\n                        <div class=\"content-body flex1 flex-column\">\r\n                            <div class=\"mb-20\">\r\n                                <div class=\"title-1 flex1 flex-row\">\r\n                                    <span>1. Thông tin kì thi</span>\r\n                                </div>\r\n                                <div class=\"form-group flex-row\">\r\n                                    <div class=\"flex1 mr-10\">\r\n                                        <div class=\"form-group-label d-flex label-form\">\r\n                                            Tên kì thi\r\n                                            <span class=\"required\">*</span>\r\n                                        </div>\r\n                                        <div class=\"ms-input ms-editor w-100\">\r\n                                            <InputText v-model=\"exam.exam_name\"\r\n                                                       :class=\"{ 'error': invalidExamManager['exam_name'] }\"\r\n                                                       @input=\"handlerGenerateCode('exam')\"\r\n                                                       placeholder=\"Nhập tên kì thi\"/>\r\n                                            <div class=\"error-text\" v-if=\"invalidExamManager['exam_name']\">\r\n                                                {{ invalidExamManager['exam_name'] }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"flex1\">\r\n                                            <div class=\"ms-input ms-editor w-100\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"flex1 mr-10\">\r\n                                        <div class=\"form-group-label d-flex label-form\">\r\n                                            Mã kì thi\r\n                                            <span class=\"required\">*</span>\r\n                                        </div>\r\n                                        <div class=\"ms-input ms-editor w-100\">\r\n                                            <InputText v-model=\"exam.exam_code\"\r\n                                                       :class=\"{ 'error': invalidExamManager['exam_code'] }\"\r\n                                                       placeholder=\"Nhập tên kì thi\" @keypress=\"handlerInputCode\"/>\r\n                                            <div class=\"error-text\" v-if=\"invalidExamManager['exam_code']\">\r\n                                                {{ invalidExamManager['exam_code'] }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"flex1\">\r\n                                            <div class=\"ms-input ms-editor w-100\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group flex-row\">\r\n                                    <div class=\"flex1 mr-10\">\r\n                                        <div class=\"form-group-label d-flex label-form\">\r\n                                            Ngày bắt đầu\r\n                                            <span class=\"required\">*</span>\r\n                                        </div>\r\n                                        <div class=\"ms-input ms-editor w-100\">\r\n                                            <Calendar v-model=\"exam.start_date\" dataType=\"string\"\r\n                                                      :class=\"{ 'error': invalidExamManager['start_date'] }\"\r\n                                                      locale=\"vi\" dateFormat=\"dd/mm/yy\" class=\"w-full\" id=\"calendar-24h\"\r\n                                                      showTime hourFormat=\"24\" showIcon\r\n                                                      placeholder=\"Chọn ngày bắt đầu kì thi\"/>\r\n                                            <div class=\"error-text\" v-if=\"invalidExamManager['start_date']\">\r\n                                                {{ invalidExamManager['start_date'] }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"flex1\">\r\n                                            <div class=\"ms-input ms-editor w-100\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"flex1 mr-10\">\r\n                                        <div class=\"form-group-label d-flex label-form\">\r\n                                            Ngày kết thúc\r\n                                            <span class=\"required\">*</span>\r\n                                        </div>\r\n                                        <div class=\"ms-input ms-editor w-100\">\r\n                                            <Calendar v-model=\"exam.end_date\" dateFormat=\"dd/mm/yy\"\r\n                                                      @date-select=\"functionTest\" dataType=\"string\"\r\n                                                      :class=\"{ 'error': invalidExamManager['end_date'] }\"\r\n                                                      :minDate=\"exam.start_date\"\r\n                                                      :disabled=\"exam.start_date == null\"\r\n                                                      class=\"w-full\" id=\"calendar-24h\"\r\n                                                      placeholder=\"Chọn ngày kết thúc kì thi\" showTime hourFormat=\"24\"\r\n                                                      showIcon/>\r\n                                            <div class=\"error-text\" v-if=\"invalidExamManager['end_date']\">\r\n                                                {{ invalidExamManager['end_date'] }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"flex1\">\r\n                                            <div class=\"ms-input ms-editor w-100\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group flex-row\">\r\n                                    <div class=\"flex1 mr-10\">\r\n                                        <div class=\"form-group-label d-flex label-form\">\r\n                                            Mô tả\r\n                                            <span class=\"required\">*</span>\r\n                                        </div>\r\n                                        <div class=\"ms-input ms-editor w-100\">\r\n                                                    <Textarea v-model=\"exam.note\" autoResize rows=\"5\" cols=\"30\"\r\n                                                              placeholder=\"Nhập ghi chú\"/>\r\n                                            <div class=\"error-text\">\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"flex1\">\r\n                                            <div class=\"ms-input ms-editor w-100\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"mb-20 flex-column flex1\">\r\n                                <div class=\"title-1 w-100 flex-row\">\r\n                                    <span>2. Thông tin ca thi</span>\r\n                                </div>\r\n                                <div class=\"d-flex w-100 mb-10\">\r\n                                    <div class=\"flex1\"><span class=\"error-text\">{{\r\n                                            invalidExamManager['ExamShift']\r\n                                        }}</span></div>\r\n                                    <Button @click=\"showExamShiftDialogVisible(), modeModalExamShift = FormMode.INSERT\"\r\n                                            class=\"primary custom-btn text-link  d-flex justify-content-center ms-btn_search ps-3 pe-3 gap-1 mb-2\">\r\n                                        <div class=\"icon24 icon-add-blue\"></div>\r\n                                        <div class=\"fw-semibold\">Thêm ca thi</div>\r\n                                    </Button>\r\n                                </div>\r\n                                <DataTable class=\"flex1\" rowHover table-class=\"grid-group\"\r\n                                           :class=\"{ 'loading': isLoading }\" :loading=\"isLoading\"\r\n                                           :value=\"listExamShift\"\r\n                                           @rowDblclick=\"onRowSelectExamShift($event.data), modeExamShiftModal = FormMode.UPDATE, showExamShiftDialogVisible()\">\r\n                                    <template #empty>\r\n                                        <div>\r\n                                            Không có dữ liệu\r\n                                        </div>\r\n                                    </template>\r\n                                    <Column field=\"exam_shift_name\" dataKey=\"id\" header=\"Tên ca thi\"\r\n                                            style=\"min-width: 300px;\">\r\n                                        <template #body=\"{ data, field, slotProps, index }\">\r\n                                            <div> {{ data[field] }}</div>\r\n                                        </template>\r\n                                    </Column>\r\n                                    <Column field=\"exam_shift_code\" dataKey=\"id\" header=\"Mã ca thi\"\r\n                                            style=\"min-width: 160px;\">\r\n                                        <template #body=\"{ data, field }\">\r\n                                            <div> {{ data[field] }}</div>\r\n                                        </template>\r\n                                    </Column>\r\n                                    <Column field=\"start_date\" dataKey=\"id\" header=\"Ngày bắt đầu\"\r\n                                            style=\"min-width: 180px;\">\r\n                                        <template #body=\"{ data, field }\">\r\n                                            <div> {{ data[field] }}</div>\r\n                                        </template>\r\n                                    </Column>\r\n                                    <Column field=\"end_date\" dataKey=\"id\" header=\"Ngày kết thúc\"\r\n                                            style=\"min-width: 180px;\">\r\n                                        <template #body=\"{ data, field }\">\r\n                                            <div> {{ data[field] }}</div>\r\n                                        </template>\r\n\r\n                                    </Column>\r\n                                    <Column alignFrozen=\"right\" style=\"width: 90px;\" frozen header=\"Thao tác\">\r\n                                        <template #body=\"slotProps\">\r\n                                            <div class=\"row-actions\" style=\"width: 100%;\">\r\n                                                <div class=\"position-relative\">\r\n                                                    <div class=\"item\"\r\n                                                         @click=\"modeExamShiftModal = FormMode.UPDATE, onRowSelectExamShift(slotProps.data), showExamShiftDialogVisible()\">\r\n                                                        <div class=\"v-popover popover\">\r\n                                                            <div class=\"trigger\">\r\n                                                                <div class=\"icon24 edit\"></div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"item\"\r\n                                                         @click=\"selectedExamShift = { ...slotProps.data }, btnRemoveExamShift(slotProps.index)\">\r\n                                                        <div class=\"v-popover popover\">\r\n                                                            <div class=\"icon24 delete\"></div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </template>\r\n                                    </Column>\r\n                                </DataTable>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"content-footer\">\r\n                            <div class=\"flex-row\">\r\n                                <div class=\"flex1\"></div>\r\n                                <Button\r\n                                    @click=\"examShiftDialogVisible = false; invalidExamShift = []; closeExamManagerPopup()\"\r\n                                    class=\"ms-btn secondary blue me-3 d-flex justify-content-center ms-btn_search ps-3 pe-3 gap-2\">\r\n                                    <div class=\"\">Đóng</div>\r\n                                </Button>\r\n                                <Button @click=\"saveExamManager\" @keyup.enter=\"saveExamManager\"\r\n                                        :disabled=\"isDisabledExamManager\"\r\n                                        class=\"ms-btn primary blue d-flex justify-content-center ms-btn_search ps-3 pe-3 gap-2\">\r\n                                    <div class=\"\">Lưu</div>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <Dialog v-model:visible=\"examShiftDialogVisible\" modal @keydown.enter.prevent=\"saveExamShift\"\r\n            @afterHide=\"afterHideExamShiftDialog\"\r\n            :header=\"modeExamShiftModal == FormMode.INSERT ? 'Thêm ca thi' : 'Sửa ca thi'\"\r\n            :style=\"{ width: '50vw' }\">\r\n        <TheLoadingProgress v-if=\"isLoadingPopupExamShift\"/>\r\n        <div class=\"w-full flex flex-column\">\r\n            <div class=\"form-group flex-row\">\r\n                <div class=\"flex1 mr-10\">\r\n                    <div class=\"form-group-label d-flex label-form\">\r\n                        Tên ca thi\r\n                        <span class=\"required\">*</span>\r\n                    </div>\r\n                    <div class=\"ms-input ms-editor w-100\">\r\n                        <InputText v-model=\"selectedExamShift.exam_shift_name\" placeholder=\"Nhập tên ca thi\"\r\n                                   :class=\"{ 'error': invalidExamShift['exam_shift_name'] }\"\r\n                                   @input=\"handlerGenerateCode('examShift')\"/>\r\n                        <div class=\"error-text\" v-if=\"invalidExamShift['exam_shift_name']\">\r\n                            {{ invalidExamShift['exam_shift_name'] }}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex1\">\r\n                        <div class=\"ms-input ms-editor w-100\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex1\">\r\n                    <div class=\"form-group-label d-flex label-form\">\r\n                        Mã ca thi\r\n                        <span class=\"required\">*</span>\r\n                    </div>\r\n                    <div class=\"ms-input ms-editor w-100\">\r\n                        <InputText v-model=\"selectedExamShift.exam_shift_code\" placeholder=\"Nhập mã ca thi\"\r\n                                   :class=\"{ 'error': invalidExamShift['exam_shift_code'] }\"\r\n                                   @keypress=\"handlerInputCode\"\r\n                                   @input=\"modeGenerateExamShift = selectedExamShift.exam_shift_code ? false : true;\"/>\r\n                        <div class=\"error-text\" v-if=\"invalidExamShift['exam_shift_code']\">\r\n                            {{ invalidExamShift['exam_shift_code'] }}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex1\">\r\n                        <div class=\"ms-input ms-editor w-100\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group flex-row\">\r\n                <div class=\"flex1 mr-10\">\r\n                    <div class=\"form-group-label d-flex label-form\">\r\n                        Ngày bắt đầu\r\n                        <span class=\"required\">*</span>\r\n                    </div>\r\n                    <div class=\"ms-input ms-editor w-100\">\r\n                        <Calendar v-model=\"selectedExamShift.start_date\" dataType=\"string\"\r\n                                  :class=\"{ 'error': invalidExamShift['start_date'] }\"\r\n                                  :min=\"exam.start_date\"\r\n                                  :max-date=\"exam.end_date\"\r\n                                  locale=\"vi\" dateFormat=\"dd/mm/yy\" class=\"w-full\" id=\"calendar-24h\"\r\n                                  showTime hourFormat=\"24\" showIcon\r\n                                  placeholder=\"Chọn ngày bắt đầu\"/>\r\n                        <div class=\"error-text\" v-if=\"invalidExamShift['start_date']\">\r\n                            {{ invalidExamShift['start_date'] }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex1 mr-10\">\r\n                    <div class=\"form-group-label d-flex label-form\">\r\n                        Ngày kết thúc\r\n                        <span class=\"required\">*</span>\r\n                    </div>\r\n                    <div class=\"ms-input ms-editor w-100\">\r\n                        <Calendar v-model=\"selectedExamShift.end_date\" dataType=\"string\"\r\n                                  :class=\"{ 'error': invalidExamShift['end_date'] }\"\r\n                                  :minDate=\"selectedExamShift.start_date\" :max-date=\"exam.end_date\"\r\n                                  :disabled=\"selectedExamShift.start_date == null\"\r\n                                  locale=\"vi\" dateFormat=\"dd/mm/yy\" class=\"w-full\" id=\"calendar-24h\"\r\n                                  showTime hourFormat=\"24\" showIcon\r\n                                  placeholder=\"Chọn ngày kết thúc\"/>\r\n                        <div class=\"error-text\" v-if=\"invalidExamShift['end_date']\">\r\n                            {{ invalidExamShift['end_date'] }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex1 mr-10\">\r\n                    <div class=\"form-group-label d-flex label-form\">\r\n                        Phòng thi\r\n                        <span class=\"required\">*</span>\r\n                    </div>\r\n                    <div class=\"ms-input ms-editor w-100\">\r\n                        <MultiSelect v-model=\"selectedExamShift.departments\"\r\n                                     :class=\"{ 'error': invalidExamShift['departments'] }\" :options=\"departments\"\r\n                                     placeholder=\"Chọn phòng thi\" optionLabel=\"department_name\"\r\n                                     optionValue=\"id\"/>\r\n                        <div class=\"error-text\" v-if=\"invalidExamShift['departments']\">\r\n                            {{ invalidExamShift['departments'] }}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex1\">\r\n                        <div class=\"ms-input ms-editor w-100\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex1\">\r\n                    <div class=\"form-group-label d-flex label-form\">\r\n                        Đề thi\r\n                        <span class=\"required\">*</span>\r\n                        <div class=\"icon16 icon-note has-tooltip\"\r\n                             v-tooltip.top=\"{ value: 'Thiết lập đề thi để sử dụng', escape: true, class: 'custom-error' }\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"ms-input ms-editor w-100\">\r\n                        <MultiSelect v-model=\"selectedExamShift.exam_bank_id\" :options=\"examBankSetting\"\r\n                                     checkboxIcon=\"test\"\r\n                                     placeholder=\"Chọn đề thi\" optionLabel=\"exam_bank_name\" optionValue=\"id\"\r\n                                     :class=\"{ 'error': invalidExamShift['exam_bank_id'] }\"/>\r\n                        <div class=\"error-text\" v-if=\"invalidExamShift['exam_bank_id']\">\r\n                            {{ invalidExamShift['exam_bank_id'] }}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex1\">\r\n                        <div class=\"ms-input ms-editor w-100\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group flex-row\">\r\n                <div class=\"flex1\">\r\n                    <div class=\"form-group-label d-flex label-form\">\r\n                        Mô tả\r\n                    </div>\r\n                    <div class=\"ms-input ms-editor w-100\">\r\n                        <Textarea v-model=\"selectedExamShift.note\" autoResize rows=\"5\" cols=\"30\"\r\n                                  placeholder=\"Nhập ghi chú cho ca thi\"/>\r\n                        <div class=\"error-text\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex1\">\r\n                        <div class=\"ms-input ms-editor w-100\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"Đóng\" class=\"ms-btn btn detail-button secondary\" @click=\"examShiftDialogVisible = false\"/>\r\n            <Button @click=\"saveExamShift\" @keyup.enter=\"saveExamShift\" :disabled=\"isDisabledExamShift\"\r\n                    class=\"ms-btn primary blue d-flex justify-content-center ms-btn_search ps-3 pe-3 gap-2\">\r\n                <div class=\"fw-semibold\">Lưu</div>\r\n            </Button>\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"warningVisible\" modal closeOnEscape :style=\"{ width: '25vw', height: '20vh' }\"\r\n            header=\"Thông báo\">\r\n        <div class=\"w-full flex flex-column\">\r\n            <span> Cập nhật thông tin đề thi, phòng thi sẽ làm mất dữ liệu kết quả bài thi. Bạn có chắc chắn muốn thay đổi\r\n                không? </span>\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"Không\" class=\"ms-button btn detail-button secondary\"\r\n                    @click=\"isLoadingPopupExamShift = false; warningVisible = false\"/>\r\n            <Button label=\"Tiếp tục\" class=\"ms-button btn detail-button primary\" @click=\"updateExamShift(true)\"/>\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"isPopupDelete\" modal closeOnEscape :style=\"{ width: '25vw' }\" header=\"Xóa ca thi\">\r\n        <TheLoadingProgress v-if=\"isLoadingDelete\"/>\r\n        <div class=\"w-full flex flex-column\" style=\"line-height: 1.5;\">\r\n            <span>Ca thi <b>{{\r\n                    selectedExamShift.exam_shift_code\r\n                }}</b> có thể liên quan đến kết quả các bài thi. Bạn có chắc chắn muốn\r\n                xóa\r\n                không?</span>\r\n        </div>\r\n        <template #footer>\r\n            <Button\r\n                class=\"ms-btn secondary d-flex justify-content-center ms-btn_search ps-3 pe-3 gap-2\" @click=\"isPopupDelete = false\">\r\n                <div class=\"\">Không</div>\r\n            </Button>\r\n            <Button @click=\"handlerDelete\"\r\n                    class=\"ms-btn danger d-flex justify-content-center ms-btn_search ps-3 pe-3 gap-2\">\r\n                <div class=\"\">Xóa đề thi</div>\r\n            </Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\nimport Toast from 'primevue/toast';\r\nimport Textarea from 'primevue/textarea';\r\nimport Button from 'primevue/button';\r\nimport DataTable from 'primevue/datatable';\r\nimport Column from 'primevue/column';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport InputText from 'primevue/inputtext';\r\nimport MultiSelect from 'primevue/multiselect';\r\nimport Dialog from 'primevue/dialog';\r\nimport Skeleton from 'primevue/skeleton';\r\nimport Calendar from 'primevue/calendar';\r\nimport {getExamBankSetting} from \"/api/exam-bank\";\r\nimport {generateCode, convertTimezoneToDatetime, convertTime} from '@/common/functions';\r\nimport {saveData, getDataDepartment} from '/api/department';\r\nimport {\r\n    saveExamManager,\r\n    checkExamShiftCodeExits,\r\n    updateExamShift,\r\n    updateExamManager,\r\n    insertExamShift,\r\n    getExamShifts,\r\n    deleteExamShift\r\n} from '/api/exam-manager';\r\nimport TheLoadingProgress from '@/components/LoadingProgress.vue';\r\nimport {MESSAGE, RESPONSE_STATUS} from \"@/common/enums\";\r\n\r\nexport default {\r\n    emits: [\"showExamManager\", \"showToast\", \"loadExamManager\"],\r\n    props: {\r\n        modeModal: {\r\n            default: null\r\n        },\r\n        selectedData: {\r\n            default: null\r\n        }\r\n    },\r\n    components: {\r\n        MultiSelect,\r\n        InputText,\r\n        Dropdown,\r\n        DataTable,\r\n        Column,\r\n        Dialog,\r\n        Skeleton,\r\n        Button,\r\n        Calendar,\r\n        Textarea,\r\n        Toast,\r\n        TheLoadingProgress\r\n    },\r\n    data() {\r\n        return {\r\n            exam: {\r\n                id: null,\r\n                exam_code: null,\r\n                exam_name: null,\r\n                start_date: null,\r\n                end_date: null,\r\n                note: null,\r\n                listExamShift: [],\r\n            },\r\n            isDisabledExamManager: false,\r\n            objectLoading: {},\r\n            isDisabledExamShift: false,\r\n            isLoading: false,\r\n            isCollapsed: false,\r\n\r\n            isPopupDelete: false,\r\n            isLoadingPopupExamShift: false,\r\n            isLoadingDelete: false,\r\n            warningVisible: false,\r\n            defaultExamShift: {\r\n                exam_shift_id: null,\r\n                exam_shift_code: null,\r\n                exam_shift_name: null,\r\n                start_date: null,\r\n                end_date: null,\r\n                departments: null,\r\n                exam_bank_id: null,\r\n                note: null\r\n            },\r\n\r\n            isLoadingExamShift: false,\r\n\r\n            examResult: [],\r\n            examshift: {\r\n                exam_shift_id: null,\r\n                exam_shift_code: null,\r\n                exam_shift_name: null,\r\n                start_date: null,\r\n                end_date: null,\r\n                departments: null,\r\n                exam_bank_id: null,\r\n                note: null\r\n            },\r\n\r\n            //chi tiết ca thi\r\n            examshiftdetail: {\r\n                ExamShiftDetailId: null,\r\n                exam_shift_id: null,\r\n                departmentsId: null,\r\n                exam_bank_id: null,\r\n            },\r\n\r\n            selectedDataProp: {},\r\n            examBankSetting: [],\r\n\r\n            selectedExamShift: {\r\n                exam_shift_id: null,\r\n                exam_shift_code: null,\r\n                exam_shift_name: null,\r\n                start_date: null,\r\n                end_date: null,\r\n                departments: null,\r\n                exam_bank_id: null,\r\n                note: null\r\n            },\r\n\r\n            selectedListExamShift: null,\r\n\r\n            departments: [],\r\n\r\n            listExamShift: [],\r\n\r\n            invalidExamShift: [],\r\n            examShiftDialogVisible: false,\r\n\r\n            invalidExamManager: [],\r\n\r\n            modeGenerateExamManager: true, //cho phép sinh mã theo tên\r\n\r\n            modeGenerateExamShift: true, //sinh mã ca thi\r\n\r\n            modeExamShiftModal: this.FormMode.INSERT,\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        /**\r\n         * Validate mã phòng thi\r\n         * Ko cho phép nhập các kí tự đặc biệt\r\n         * @param {*} event\r\n         */\r\n        handlerInputdepartmentsCode(event) {\r\n            let pattern = /[\\W_]/g;\r\n            let res = event.key.match(pattern);\r\n            if (res) {\r\n                event.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Lưu ca thi\r\n         */\r\n        async saveExamShift() {\r\n            this.isDisabledExamShift = true;\r\n            if (await this.validateExamShift()) {\r\n                this.isLoadingPopupExamShift = true;\r\n                //trạng thái của form kì thi\r\n                switch (this.modeModal) {\r\n                    //thêm mới kì thi\r\n                    case this.FormMode.INSERT:\r\n                        this.isLoadingPopupExamShift = false;\r\n                        this.listExamShift.push({...this.selectedExamShift});\r\n                        this.showExamShiftDialogVisible();\r\n                        this.isDisabledExamShift = false;\r\n                        break;\r\n                    //cập nhật kì thi\r\n                    case this.FormMode.UPDATE:\r\n                        switch (this.modeExamShiftModal) {\r\n                            //thêm mới ca thi với kì thi đã có\r\n                            case this.FormMode.INSERT:\r\n                                insertExamShift({\r\n                                    ...this.selectedExamShift,\r\n                                    id: this.selectedDataProp.id\r\n                                }).then(res => {\r\n                                    this.$store.dispatch('handleSuccess', 'Thêm mới thành công');\r\n                                    this.examshift = {...this.defaultExamShift};\r\n                                    this.selectedExamShift = {...this.defaultExamShift};\r\n                                    this.examShiftDialogVisible = false;\r\n                                    this.loadExamShift();\r\n                                }).catch(error => {\r\n                                    if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\r\n                                        for (var itemError in error.response.data.errors) {\r\n                                            console.log(error.response.data.errors);\r\n                                            this.invalidExamShift[itemError] = error.response.data.errors[itemError][0];\r\n                                        }\r\n                                    }\r\n                                }).finally(() => {\r\n                                    this.isDisabledExamShift = false;\r\n                                    this.isLoadingPopupExamShift = false;\r\n                                })\r\n                                break;\r\n                            //cập nhật ca thi\r\n                            case this.FormMode.UPDATE:\r\n                                if (JSON.stringify(this.selectedExamShift) !== JSON.stringify(this.examshift)) {\r\n                                    // this.warningVisible = true;\r\n                                    //thay đổi đề thi hoặc phòng thi\r\n                                    if (JSON.stringify(this.selectedExamShift.departments) !== JSON.stringify(this.examshift.departments) || JSON.stringify(this.selectedExamShift.exam_bank_id) !== JSON.stringify(this.examshift.exam_bank_id)) {\r\n                                        this.warningVisible = true;\r\n                                        this.isDisabledExamShift = false;\r\n                                    } else {\r\n                                        this.updateExamShift();\r\n                                    }\r\n                                } else {\r\n                                    this.showExamShiftDialogVisible();\r\n                                    this.isDisabledExamShift = false;\r\n                                    this.isLoadingPopupExamShift = false;\r\n                                }\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            } else {\r\n                this.isLoadingPopupExamShift = false;\r\n                this.isDisabledExamShift = false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trước khi ẩn form ca thi\r\n         */\r\n        afterHideExamShiftDialog() {\r\n            this.examshift = {...this.defaultExamShift};\r\n            this.selectedExamShift = {...this.defaultExamShift};\r\n            this.modeExamShiftModal = this.FormMode.INSERT;\r\n            this.isLoadingExamShift = false;\r\n        },\r\n\r\n        /**\r\n         * Call api cập nhật ca thi\r\n         * @param {*} flag true: xóa chi tiết ca thi, false: không xóa\r\n         */\r\n        async updateExamShift(flag = false) {\r\n            await updateExamShift({...this.selectedExamShift, id: this.selectedDataProp.id, Flag: flag})\r\n                .then(res => {\r\n                    this.$store.dispatch('handleSuccess', MESSAGE.HTTP_UPDATE_OK);\r\n                    this.examshift = {...this.defaultExamShift};\r\n                    this.selectedExamShift = {...this.defaultExamShift};\r\n                    this.examShiftDialogVisible = false;\r\n                    this.loadExamShift();\r\n                }).catch(error => {\r\n                    if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\r\n                        for (var itemError in error.response.data.errors) {\r\n                            console.log(error.response.data.errors);\r\n                            this.invalidExamShift[itemError] = error.response.data.errors[itemError][0];\r\n                        }\r\n                    }\r\n                }).finally(() => {\r\n                    this.isLoadingPopupExamShift = false;\r\n                    this.warningVisible = false;\r\n                    this.isDisabledExamShift = false;\r\n                })\r\n        },\r\n\r\n        /**\r\n         * Lấy danh sách ca thi\r\n         */\r\n        async loadExamShift() {\r\n            this.isLoading = true;\r\n            this.listExamShift = [];\r\n            await getExamShifts(this.selectedData).then(res => {\r\n                this.listExamShift = res.data['exam_shifts'];\r\n            }).catch(error => {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setTimeout(() => {\r\n                    this.isLoading = false;\r\n                }, 300);\r\n            })\r\n        },\r\n\r\n        /**\r\n         * Ẩn/hiện form thêm ca thi\r\n         */\r\n        showExamShiftDialogVisible() {\r\n            // if (!this.validateExamManager()) {\r\n            //     this.$store.dispatch('handleError', 'Chưa chọn thông tin kì thi');\r\n            //     return;\r\n            // }\r\n            this.examShiftDialogVisible = !this.examShiftDialogVisible;\r\n            this.invalidExamShift = [];\r\n        },\r\n\r\n        /**\r\n         * click nút lọc\r\n         * author: DPQuy(13/11/2022)\r\n         * **/\r\n        btnFilterOnClick() {\r\n            //gọi hàm show filterbox\r\n            this.showFilterBox();\r\n        },\r\n\r\n        /**\r\n         * Sự kiện chọn item ca thi\r\n         */\r\n        onRowSelectExamShift(data) {\r\n            //mảng giá trị selected\r\n            this.selectedExamShift = {...data};\r\n            //convert datetime\r\n            this.selectedExamShift.end_date = new Date(this.selectedExamShift.end_date);\r\n            this.selectedExamShift.start_date = new Date(this.selectedExamShift.start_date);\r\n\r\n            //sử dụng khi cập nhật kì thi\r\n            if (this.modeModal === this.FormMode.UPDATE) {\r\n                // danh sách phòng theo từng ca thi(lấy duy nhất vì 1 phòng sử dụng nhiều đề nên bị duplicate)\r\n                this.selectedExamShift.departments = [...new Set(this.selectedExamShift.departments.map(item => item.id))];\r\n                this.selectedExamShift.exam_shift_id = data.id;\r\n                //danh sách ca thi\r\n                this.selectedExamShift.exam_bank_id = [...new Set(this.selectedExamShift.exam_banks.map(item => item.id))];\r\n            }\r\n            this.examshift = {...this.selectedExamShift};\r\n        },\r\n\r\n        /**\r\n         * Lấy danh sách phòng thi\r\n         */\r\n        async loadDepartments() {\r\n            await getDataDepartment().then(res => {\r\n                this.departments = res.data;\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n\r\n        /**\r\n         * Xử lý hàm sinh mã theo tên\r\n         */\r\n        handlerGenerateCode(name) {\r\n            if (name === 'exam' && this.modeGenerateExamManager) this.exam.exam_code = generateCode(this.exam.exam_name);\r\n            if (name === 'examShift' && this.modeGenerateExamShift) {\r\n                console.log(this.selectedExamShift.exam_shift_name)\r\n                this.selectedExamShift.exam_shift_code = generateCode(this.selectedExamShift.exam_shift_name);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate mã\r\n         * Ko cho phép nhập các kí tự đặc biệt\r\n         * @param {*} event\r\n         */\r\n        handlerInputCode(event) {\r\n            let pattern = /[\\W_]/g;\r\n            let res = event.key.match(pattern);\r\n            if (res) {\r\n                event.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Xóa ca thi\r\n         * @param {*} index\r\n         */\r\n        btnRemoveExamShift(index) {\r\n            this.isPopupDelete = true;\r\n        },\r\n\r\n        /**\r\n         * Click xóa ca thi\r\n         */\r\n        handlerDelete() {\r\n            this.isLoadingDelete = true;\r\n            switch (this.modeModal) {\r\n                case this.FormMode.INSERT:\r\n                    break;\r\n                case this.FormMode.UPDATE:\r\n                    deleteExamShift(this.selectedExamShift).then(res => {\r\n                        this.$store.dispatch('handleSuccess', MESSAGE.HTTP_DELETE_OK);\r\n                        this.loadExamShift();\r\n                    }).catch(error => {\r\n\r\n                    }).finally(() => {\r\n                        this.examShiftDialogVisible = false;\r\n                        this.isPopupDelete = false;\r\n                        this.isLoadingDelete = false;\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Đóng form\r\n         */\r\n        closeExamManagerPopup() {\r\n            this.$emit('showExamManager');\r\n        },\r\n\r\n        /**\r\n         * Click nút lưu kì thi\r\n         */\r\n        async saveExamManager() {\r\n            this.isDisabledExamManager = true;\r\n            if (this.validateExamManager()) {\r\n                try {\r\n                    switch (this.modeModal) {\r\n                        case this.FormMode.INSERT:\r\n                            this.exam.listExamShift = [];\r\n                            this.exam.listExamShift = this.listExamShift;\r\n                            saveExamManager(this.exam).then(res => {\r\n                                this.$emit(\"showExamManager\");\r\n                                this.$emit(\"loadExamManager\");\r\n                            }).then(res => {\r\n                                this.$store.dispatch('handleSuccess', this.Message.HTTP_INSERT_OK);\r\n                            })\r\n                                .catch(error => {\r\n                                    if (error.response.status === RESPONSE_STATUS.HTTP_UNPROCESSABLE_ENTITY) {\r\n                                        for (var itemError in error.response.data.errors) {\r\n                                            console.log(error.response.data.errors);\r\n                                            this.invalidExamManager[itemError] = error.response.data.errors[itemError][0];\r\n                                        }\r\n                                    }\r\n                                }).finally(() => {\r\n                                this.isDisabledExamManager = false;\r\n                            })\r\n                            break;\r\n                        case this.FormMode.UPDATE:\r\n                            //kiểm tra dữ liệu có thay đổi hay không\r\n                            //1.có thay đổi\r\n                            if (JSON.stringify({\r\n                                exam_code: this.selectedDataProp.exam_code,\r\n                                exam_name: this.selectedDataProp.exam_name,\r\n                                start_date: this.selectedDataProp.start_date,\r\n                                end_date: this.selectedDataProp.end_date,\r\n                                note: this.selectedDataProp.note,\r\n                            }) !== JSON.stringify({\r\n                                exam_code: this.exam.exam_code,\r\n                                exam_name: this.exam.exam_name,\r\n                                start_date: this.exam.start_date,\r\n                                end_date: this.exam.end_date,\r\n                                note: this.exam.note,\r\n                            })) {\r\n                                await updateExamManager({\r\n                                    id: this.exam.id,\r\n                                    exam_code: this.exam.exam_code,\r\n                                    exam_name: this.exam.exam_name,\r\n                                    start_date: this.exam.start_date,\r\n                                    end_date: this.exam.end_date,\r\n                                    note: this.exam.note,\r\n                                }).then(res => {\r\n                                    this.$emit(\"showExamManager\");\r\n                                    this.$emit(\"loadExamManager\");\r\n                                    this.$store.dispatch('handleSuccess', this.Message.HTTP_UPDATE_OK);\r\n                                }).catch(error => {\r\n                                    console.log(error);\r\n                                }).finally(() => {\r\n                                    this.isDisabledExamManager = false;\r\n                                });\r\n                            } else {\r\n                                this.isDisabledExamManager = false;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            this.isDisabledExamManager = false;\r\n                            break;\r\n                    }\r\n                } catch (error) {\r\n                    this.isDisabledExamManager = false;\r\n                    console.log(error);\r\n                }\r\n            } else {\r\n                this.isDisabledExamManager = false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate kì thi\r\n         */\r\n        validateExamManager() {\r\n            this.invalidData = [];\r\n            var invalid = true;\r\n\r\n            if (this.exam.exam_code == null || String(this.exam.exam_code).trim() == '') {\r\n                this.invalidExamManager['exam_code'] = 'Mã kì thi không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.exam.exam_name == null || String(this.exam.exam_name).trim() == '') {\r\n                this.invalidExamManager['exam_name'] = 'Tên kì thi không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.exam.start_date == null) {\r\n                this.invalidExamManager['start_date'] = 'Ngày bắt đầu kì thi không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.exam.end_date == null) {\r\n                this.invalidExamManager['end_date'] = 'Ngày kết thúc kì thi không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.exam.end_date != null && this.exam.start_date != null && this.exam.end_date.getTime() - this.exam.start_date.getTime() < 2 * 60 * 60 * 1000) {\r\n                this.invalidExamManager['end_date'] = 'Thời gian thi tối thiểu phải lớn hơn 2h';\r\n                invalid = false;\r\n            }\r\n            if (!invalid) return invalid;\r\n\r\n            if (this.listExamShift.length === 0) {\r\n                this.invalidExamManager['ExamShift'] = 'Ca thi không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n\r\n            return invalid;\r\n        },\r\n\r\n        functionTest() {\r\n            console.log(convertTimezoneToDatetime(this.exam.end_date.getTime()))\r\n        },\r\n\r\n        /**\r\n         * Validate ca thi\r\n         */\r\n        async validateExamShift() {\r\n            this.invalidExamShift = [];\r\n            var invalid = true;\r\n            this.isLoadingPopupExamShift = true;\r\n            if (this.selectedExamShift.exam_shift_code == null || String(this.selectedExamShift.exam_shift_code).trim() === '') {\r\n                this.invalidExamShift['exam_shift_code'] = 'Mã ca thi không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.selectedExamShift.exam_shift_name == null || String(this.selectedExamShift.exam_shift_name).trim() === '') {\r\n                this.invalidExamShift['exam_shift_name'] = 'Tên ca thi không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.selectedExamShift.start_date == null) {\r\n                this.invalidExamShift['start_date'] = 'Ngày bắt đầu không được để trống';\r\n                invalid = false;\r\n            }\r\n            if (this.selectedExamShift.end_date == null) {\r\n                this.invalidExamShift['end_date'] = 'Ngày kết thúc không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.selectedExamShift.start_date != null && this.selectedExamShift.end_date != null && this.selectedExamShift.end_date.getTime() - this.selectedExamShift.start_date.getTime() < 2 * 60 * 60 * 1000) {\r\n                this.invalidExamShift['end_date'] = 'Thời gian tối tiểu là 2h';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.selectedExamShift.departments == null) {\r\n                this.invalidExamShift['departments'] = 'Phòng thi không được để trống';\r\n                invalid = false;\r\n            }\r\n\r\n            if (this.selectedExamShift.exam_bank_id == null) {\r\n                this.invalidExamShift['exam_bank_id'] = 'Đề thi không được để trống';\r\n                invalid = false;\r\n            }\r\n            if (!invalid) return;\r\n\r\n            var exam_shift_code = this.selectedExamShift.exam_shift_code;\r\n            var valObj = this.listExamShift.filter(function (item) {\r\n                if (item.exam_shift_code === exam_shift_code) return item;\r\n            });\r\n            if (valObj.length && this.modeExamShiftModal !== this.FormMode.UPDATE) {\r\n                this.invalidExamShift['exam_shift_code'] = 'Mã ca thi đã tồn tại';\r\n                invalid = false;\r\n            } else if (this.selectedExamShift.exam_shift_code != null || String(this.selectedExamShift.exam_shift_code).trim() === '') {\r\n                //gọi api kiểm tra mã\r\n                await checkExamShiftCodeExits({\r\n                    data: this.selectedExamShift,\r\n                    mode: this.modeExamShiftModal\r\n                }).then(res => {\r\n                    if (res.data.result) {\r\n                        this.invalidExamShift['exam_shift_code'] = 'Mã ca thi đã tồn tại';\r\n                        invalid = false;\r\n                    }\r\n                }).catch(error => {\r\n                    this.$store.dispatch('handleError');\r\n                }).finally(() => {\r\n                    setTimeout(() => {\r\n                        this.isLoadingPopupExamShift = false;\r\n                    }, 750);\r\n                })\r\n            }\r\n            return invalid;\r\n        },\r\n\r\n        /**\r\n         * Event xử lý data selected\r\n         */\r\n        handlerPropData() {\r\n            if (this.modeModal === this.FormMode.UPDATE) {\r\n                this.isLoading = true;\r\n                this.selectedDataProp = {...this.selectedData};\r\n                getExamShifts(this.selectedDataProp).then(res => {\r\n                    this.listExamShift = res.data['exam_shifts'];\r\n                }).catch(error => {\r\n                    console.log(error)\r\n                }).finally(() => {\r\n                    setTimeout(() => {\r\n                    })\r\n                    this.isLoading = false;\r\n                }, 300);\r\n                this.exam = {...this.selectedDataProp};\r\n                this.exam.start_date = new Date(this.selectedDataProp.start_date);\r\n                this.exam.end_date = new Date(this.selectedDataProp.end_date);\r\n                // this.selectedDataProp = {...this.exam};\r\n                // this.selectedListExamShift = JSON.parse(this.exam.ExamShift);\r\n                // //ca thi\r\n                // this.listExamShift = this.getUniqueItems(this.selectedListExamShift, 'exam_shift_code');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Lấy danh sách đề thi đã thiết lập\r\n         */\r\n        getExamBankSetting() {\r\n            getExamBankSetting().then(res => {\r\n                this.examBankSetting = res.data;\r\n            }).catch(error => {\r\n                console.log(error)\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Sự kiện nhấn phím\r\n         * @param {*} event\r\n         */\r\n        handleKeyDown(event) {\r\n            if (event.keyCode === this.KeyCode.ENTER) {\r\n                //nếu form ca thi , form cảnh báo xóa, form cảnh báo thay đổi ko mở\r\n                //thì gọi hàm lưu kì thi\r\n                if (!this.examShiftDialogVisible && !this.isPopupDelete && !this.warningVisible) {\r\n                    this.saveExamManager();\r\n                }\r\n\r\n                //hiển thị form cảnh báo thay đổi đề thi, phòng thi\r\n                //gọi hàm cập nhật ca thi\r\n                if (this.warningVisible) {\r\n                    this.updateExamShift();\r\n                }\r\n            }\r\n\r\n            if (event.keyCode === this.KeyCode.ESC) {\r\n                //nếu form ca thi ko mở\r\n                //đóng form kì thi\r\n                if (!this.examShiftDialogVisible && !this.isPopupDelete) {\r\n                    this.$emit(\"showExamManager\");\r\n                    this.$emit(\"loadExamManager\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    created() {\r\n        // //lấy danh sách phòng thi\r\n        this.loadDepartments();\r\n        // //lấy danh sách đề thi đã thiết lập\r\n        this.getExamBankSetting();\r\n        // //thông tin cập nhật nếu ở trạng thái sửa\r\n        this.handlerPropData();\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    },\r\n\r\n\r\n    beforeDestroy() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    },\r\n\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.main-view-exam_manger {\r\n    position: absolute;\r\n    top: 0;\r\n    background: #f4f5f8;\r\n    z-index: 10;\r\n    left: 0;\r\n    flex: 1;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.left-box {\r\n    width: 202px;\r\n    margin-right: 18px;\r\n    height: 100%;\r\n}\r\n\r\n.box,\r\n.card {\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 11px rgba(0, 0, 0, .08);\r\n}\r\n\r\n.list-tab-menu {\r\n    padding: 33px 8px 0;\r\n    overflow: auto;\r\n    height: 100%;\r\n    color: #707070;\r\n}\r\n\r\n.tab-item {\r\n    margin-bottom: 15px;\r\n    cursor: pointer;\r\n}\r\n\r\n.list-tab-menu .tab-item-parent.active {\r\n    font-weight: 600;\r\n    color: #ff6d00;\r\n}\r\n\r\n.list-tab-menu .tab-item-parent {\r\n    height: 19px;\r\n    margin-bottom: 4px;\r\n    padding-left: 10px;\r\n}\r\n\r\n.content-body {\r\n    padding: 17px 20px 12px 16px;\r\n    overflow: auto;\r\n}\r\n\r\n.content-body .title-1 {\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    margin-bottom: 15px;\r\n    line-height: 26px;\r\n    align-items: center;\r\n}\r\n\r\n.content-body .title-2 {\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    line-height: 19px;\r\n}\r\n\r\n.content-footer {\r\n    padding: 12px 24px;\r\n    border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n.left-grade {\r\n\r\n    background: #fff;\r\n    border: 1px solid rgb(221, 221, 221);\r\n    border-bottom-right-radius: 4px;\r\n    border-top-right-radius: 4px;\r\n    height: 100%;\r\n\r\n    .title {\r\n        height: 50px;\r\n        width: 100%;\r\n        padding: 18px 12px 15px 15px;\r\n        align-items: center;\r\n        border-bottom: 1px solid rgb(221, 221, 221);\r\n\r\n        .text {\r\n            font-weight: 600;\r\n        }\r\n\r\n        .btn-collapse {\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition-duration: 0.4s;\r\n        }\r\n    }\r\n\r\n    .outer {\r\n        position: relative;\r\n        display: none;\r\n        width: 100%;\r\n        cursor: pointer;\r\n        margin: auto;\r\n\r\n        .inner {\r\n            width: 100vh;\r\n            height: 45px;\r\n            font-size: 16px;\r\n            font-weight: 600;\r\n            position: absolute;\r\n            display: flex;\r\n            left: 50%;\r\n            top: 36vh;\r\n        }\r\n\r\n        .rotate {\r\n            transform: translateX(-50%) translateY(-50%) rotate(-90deg);\r\n        }\r\n    }\r\n\r\n    &.collage {\r\n        width: 56px;\r\n\r\n        .title {\r\n            .text {\r\n                display: none;\r\n            }\r\n\r\n            .btn-collapse {\r\n                transform: rotate(180deg);\r\n            }\r\n        }\r\n\r\n        .left-grade-content {\r\n            display: none;\r\n        }\r\n\r\n        .outer {\r\n            position: relative;\r\n            display: inline-block;\r\n            width: 100%;\r\n            cursor: pointer;\r\n            margin: auto;\r\n        }\r\n    }\r\n\r\n    .left-grade-content {\r\n        overflow: auto;\r\n        height: 100%;\r\n        padding: 16px;\r\n    }\r\n}\r\n\r\n.right-grade {\r\n    border: 1px solid rgb(221, 221, 221);\r\n    border-radius: 4px;\r\n    background: #fff;\r\n\r\n    .p-panel-header {\r\n        background: #fff !important;\r\n        border: none !important;\r\n    }\r\n\r\n    .p-panel.customPanel .p-panel-header .p-panel-title {\r\n        font-size: 16px;\r\n        font-weight: 700;\r\n    }\r\n\r\n    button.p-panel-toggler[aria-label='customPanel'] span {\r\n        width: max-content;\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    button.p-panel-toggler[aria-label='customPanel'] span::before {\r\n        margin-right: 4px;\r\n        content: \"\";\r\n        height: 16px !important;\r\n        width: 16px !important;\r\n    }\r\n\r\n\r\n    button.p-panel-toggler[aria-label='customPanel'] span::after {\r\n        width: max-content;\r\n        color: #2979ff !important;\r\n        cursor: pointer;\r\n        border: none !important;\r\n        font-weight: 400 !important;\r\n        font-size: 14px;\r\n    }\r\n\r\n\r\n    .upload-container .info-file {\r\n        padding: 20px;\r\n    }\r\n\r\n    .info-file .icon-zip {\r\n        width: 40px;\r\n        height: 40px;\r\n        background: url('@public/assets/icons/zip.svg') no-repeat;\r\n        margin-right: 10px;\r\n        background-position: center;\r\n        background-size: 100%;\r\n    }\r\n\r\n    .left-box {\r\n        width: 202px;\r\n        margin-right: 18px;\r\n        height: 100%;\r\n    }\r\n\r\n    .box,\r\n    .card {\r\n        background-color: #fff;\r\n        border-radius: 4px;\r\n        box-shadow: 0 0 11px rgba(0, 0, 0, .08);\r\n    }\r\n\r\n    .list-tab-menu {\r\n        padding: 25px 8px 0;\r\n        overflow: auto;\r\n        height: 100%;\r\n        color: #707070;\r\n    }\r\n\r\n    .p-panel {\r\n        &.customPanel {\r\n            .p-panel-content {\r\n                border: unset;\r\n            }\r\n        }\r\n    }\r\n\r\n    .tab-item {\r\n        margin-bottom: 15px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .list-tab-menu .tab-item-parent.active {\r\n        font-weight: 600;\r\n        color: #ff6d00;\r\n    }\r\n\r\n    .list-tab-menu .tab-item-parent:hover {\r\n        border-radius: 4px;\r\n        background-color: #fbe9e7;\r\n        color: #ff6d00;\r\n    }\r\n\r\n    .grid-nodata-content {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 100%;\r\n        width: 100%;\r\n        background-color: #fff;\r\n        border-radius: 4px;\r\n    }\r\n\r\n    .grid-nodata-content .img-nodata {\r\n        background-image: url('@public/assets/icons/ic_empty_grid.681d1e47.svg');\r\n        height: 160px;\r\n        width: 260px;\r\n        background-position: 50%;\r\n    }\r\n\r\n    .description-nodata {\r\n        text-align: center;\r\n        font-size: 14px;\r\n        color: #182d4b;\r\n        padding-bottom: 8px;\r\n    }\r\n\r\n    .grid-nodata-content .description-nodata {\r\n        color: #9e9fab;\r\n        padding-bottom: 8px;\r\n    }\r\n\r\n    .list-tab-menu .tab-item-parent {\r\n        height: 36px;\r\n        padding-left: 10px;\r\n        padding-bottom: 10px;\r\n        padding-top: 10px;\r\n    }\r\n\r\n    .content-body {\r\n        padding: 17px 20px 12px 16px;\r\n        overflow: auto;\r\n    }\r\n\r\n    .content-body .title-1 {\r\n        font-size: 16px;\r\n        font-weight: 700;\r\n        margin-bottom: 15px;\r\n        line-height: 26px;\r\n        align-items: center;\r\n    }\r\n\r\n    .content-body .title-2 {\r\n        font-size: 14px;\r\n        font-weight: 700;\r\n        line-height: 19px;\r\n    }\r\n\r\n    /* .content-footer {\r\n        background-color: #fbfbfe;\r\n        padding: 12px 24px;\r\n    } */\r\n    .p-button-label {\r\n        padding: 0 16px;\r\n    }\r\n\r\n    .tab-item-child {\r\n        padding: 10px 0 0px 20px;\r\n    }\r\n\r\n    .tab-item .tab-item-child:not(:first-child) {\r\n        padding-top: 0;\r\n    }\r\n\r\n    .box.left-box {\r\n        width: 13vw;\r\n    }\r\n\r\n    .p-button .export-excel {\r\n        display: inline-block;\r\n        margin: -7px 7px -7px 12px;\r\n    }\r\n\r\n    .export-excel {\r\n        width: 20px;\r\n        height: 20px;\r\n    }\r\n\r\n\r\n    .p-button .export-excel ~ .text {\r\n        padding-right: 16px;\r\n        padding-left: 0;\r\n    }\r\n\r\n    .customPanel.p-panel.p-panel-toggleable .p-panel-header {\r\n        padding: 0px 14px 14px 0 !important;\r\n    }\r\n\r\n    .upload-container .no-file.file-xlsx {\r\n        background: url('@public/assets/icons/add_attachment.c604b695.svg') no-repeat;\r\n        width: 334px;\r\n        height: 110px;\r\n        margin-top: 20px;\r\n        background-size: contain;\r\n        background-position: center;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .upload-wrapper {\r\n        border: 1px dashed #ddd;\r\n        border-radius: 4px;\r\n        display: flex;\r\n        height: 329px;\r\n        justify-content: center;\r\n    }\r\n\r\n    .import-attachment-container {\r\n        border-radius: 4px;\r\n        height: 329px;\r\n        cursor: pointer;\r\n\r\n        .file-info {\r\n            width: 100%;\r\n            height: 48px;\r\n            align-items: center;\r\n            padding: 0 16px;\r\n            border-bottom: 1px dashed #ddd;\r\n\r\n            .file-icon {\r\n                width: 16px;\r\n                height: 16px;\r\n                background: transparent url('@public/assets/icons/ic_file_gray.84c03213.svg') no-repeat -2px 0;\r\n                margin-right: 8px;\r\n            }\r\n\r\n            .file-name, .main-content .file-info .file-size {\r\n                text-overflow: ellipsis;\r\n                padding-right: 16px;\r\n                overflow: hidden;\r\n                white-space: nowrap;\r\n            }\r\n\r\n            .file-size {\r\n                width: 95px;\r\n                text-overflow: ellipsis;\r\n                padding-right: 16px;\r\n                overflow: hidden;\r\n                white-space: nowrap;\r\n            }\r\n\r\n            .file-accepted {\r\n                padding-right: 16px;\r\n                white-space: nowrap;\r\n            }\r\n\r\n            .icon-success {\r\n                width: 16px;\r\n                height: 16px;\r\n                background: transparent url('@public/assets/icons/ic_check_green.d1ac113b.svg') no-repeat;\r\n                margin-right: 8px;\r\n            }\r\n\r\n            .change-file {\r\n                width: 100px;\r\n                overflow: hidden;\r\n                white-space: nowrap;\r\n\r\n                &.text-link {\r\n                    color: #2979ff !important;\r\n                    cursor: pointer;\r\n                    border: none !important;\r\n                    font-weight: 400 !important;\r\n                }\r\n            }\r\n        }\r\n\r\n        .file-caution {\r\n            width: 100%;\r\n            height: calc(100% - 48px);\r\n        }\r\n\r\n        .file-caution-img {\r\n            width: 100%;\r\n            height: calc(100% - 74px);\r\n            background: url('@public/assets/icons/img_import.7804e3d3.svg') no-repeat 50%;\r\n        }\r\n    }\r\n\r\n    .file-zip {\r\n        background: url('@public/assets/icons/upload-zip.svg') no-repeat;\r\n        width: 334px;\r\n        height: 110px;\r\n        margin-top: 20px;\r\n        background-size: contain;\r\n        background-position: center;\r\n        margin-bottom: 20px;\r\n    }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}